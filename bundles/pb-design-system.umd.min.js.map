{"version":3,"sources":["ng://pb-design-system/lib/dataviz/dataviz.service.ts","ng://pb-design-system/lib/dataviz/dataviz-pie.component.ts","ng://pb-design-system/lib/dataviz/dataviz-bar.component.ts","ng://pb-design-system/lib/dataviz/dataviz-line.component.ts","ng://pb-design-system/lib/dataviz/dataviz-gauge.component.ts","ng://pb-design-system/lib/dataviz/dataviz-sparkline.component.ts","ng://pb-design-system/lib/dataviz/dataviz.module.ts","ng://pb-design-system/lib/header-shadow/header-shadow.directive.ts","ng://pb-design-system/lib/header-shadow/header-shadow.module.ts"],"names":["PbdsDatavizService","_this","this","colors","mono","theme","getColors","createGradientDefs","svg","i","length","color","gradient","append","attr","replace","createGlowFilter","glow","feOffsets","dy","slope","y","merge","x","Injectable","args","providedIn","PbdsDatavizPieComponent","_dataviz","_element","chartClass","pieClass","width","type","tooltipFormatString","legendFormatString","hovered","EventEmitter","clicked","legendMouseOverFocus","data","index","nodes","chart","selectAll","filter","d","classed","legendMouseOutBlur","pathMouseOver","slices","slice","transition","duration","delay","attrTween","d3_interpolate","outerRadius","arcZoom","t","arc","emit","pathMouseOut","value","pathClick","tooltipShow","node","tooltipSetPosition","percentage","endAngle","startAngle","Math","PI","tooltip","html","label","tooltipFormat","style","tooltipMove","tooltipHide","coordinates","d3_mouse","prototype","ngOnInit","margin","top","right","bottom","left","height","innerRadius","min","anglePad","legendFormat","d3_format","colorRange","d3_scaleOrdinal","range","domain","map","c","d3_select","nativeElement","pie","d3_pie","padAngle","d3_arc","padRadius","paths","enter","each","legend","legendDescription","on","ngOnChanges","changes","firstChange","remove","Component","selector","template","ElementRef","HostBinding","Input","Output","PbdsDatavizBarComponent","_scroll","barClass","singleSeries","xAxisFormatType","xAxisFormatString","xAxisBuffer","yAxisFormatType","yAxisFormatString","yAxisTicks","yAxisBuffer","hideLegend","legendWidth","legendPosition","legendLabelFormatType","legendLabelFormatString","tooltipLabelFormatType","tooltipLabelFormatString","tooltipValueFormatType","tooltipValueFormatString","marginTop","marginRight","marginBottom","marginLeft","threshold","average","updateChart","group","groupEnter","xAxisScale","yAxisScale","d3_min","d3_max","rangeRound","nice","xAxis","call","xAxisCall","yAxis","yAxisCall","hideXGrid","xGrid","xGridCall","hideYGrid","yGrid","yGridCall","hideGrayBars","exit","select","bandwidth","substr","barMouseOverFocus","d3_event","barMouseOutBlur","barMouseClick","legendItem","legendLabelFormat","parsedTime","d3_isoParse","enterLegendItem","legendMouseOver","legendMouseOut","legendMouseClick","yThreshold","raise","yAverage","event","bar","barColor","_groups","dimensions","getBoundingClientRect","scroll","getScrollPosition","tooltipValueFormat","hideTooltipLabel","tooltipOffsetWidth","offsetWidth","tooltipOffsetHeight","offsetHeight","xAxisFormatter","item","xAxisFormat","parseDate","yAxisFormatter","yAxisFormat","d3_timeFormat","tooltipLabelFormat","hideXAxis","hideYAxis","hideXAxisZero","hideYAxisZero","hideXAxisDomain","hideYAxisDomain","hideTooltip","hideXAxisTicks","hideYAxisTicks","xAxisTickSize","xAxisTickSizeOuter","yAxisTickSize","yAxisTickSizeOuter","d3_scaleBand","align","paddingInner","paddingOuter","d3_axisBottom","tickSize","tickSizeOuter","tickFormat","d3_scaleLinear","d3_axisLeft","ticks","ngOnDestroy","changeDetection","ChangeDetectionStrategy","OnPush","ViewportScroller","PbdsDatavizLineComponent","lineClass","area","xAxisTicks","tooltipHeadingFormatString","tooltipHovered","tooltipClicked","mouserect","d3_extent","dates","series","values","d3line","d3area","line","lineWidth","linePoints","tooltipItem","tooltipHeadingFormat","entertooltipItem","mouserectMouseMove","mouseXDate","invert","leftIndex","d3_bisectLeft","d3_isoFormat","dateLower","Date","dateUpper","closestDate","closestIndex","indexOf","circles","tooltipLine","mousedata","date","mouserectMouseOut","mouserectMouseClick","lineCurved","d3_line","curve","d3_curveCatmullRom","alpha","d3_area","y0","y1","d3_scaleTime","PbdsDatavizGaugeComponent","hideLabel","labelFormatString","labelSmall","gaugeWidth","degreesToRadians","degree","calculateMinMax","minvalue","maxvalue","calculateCurve","start","drawChart","gauge","backgroundColor","radius","arcTween","labelTween","textTween","newAngle","interpolate","tween","oldValue","text","updatedNumber","labelFormat","max","rounded","cornerRadius","previousValue","PbdsDatavizSparklineComponent","sparklineClass","colorNegative","strokeWidth","minBuffer","maxBuffer","datum","barWidth","abs","PbdsDatavizModule","NgModule","declarations","imports","CommonModule","exports","PbdsHeaderShadowDirective","onWindowScroll","offset","shadow","ngAfterViewInit","document","body","querySelector","addEventListener","srcElement","scrollTop","Directive","HostListener","PbdsHeaderShadowModule"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PbdsDatavizService {\n  private colors = {\n    mono: ['#00436e', '#005a93', '#0072b8', '#66aad4', '#cce3f1', '#e5f1f8'],\n    theme: [\n      '#3e53a4',\n      '#cf0989',\n      '#009bdf',\n      '#ee6b0b',\n      '#edb700',\n      '#a03f9b',\n      '#00b140',\n      '#66c3ec',\n      '#c0c0c0',\n      '#f5a66d',\n      '#8b98c8',\n      '#aad88f'\n    ]\n  };\n\n  constructor() {}\n\n  getColors = mono => {\n    return mono ? this.colors.mono : this.colors.theme;\n  };\n\n  createGradientDefs = (svg, mono) => {\n    const colors = mono ? [this.colors.mono[2]] : this.colors.theme;\n\n    for (let i = 0; i < colors.length; i++) {\n      const color = mono ? this.colors.mono[2] : this.colors.theme[i];\n\n      const gradient = svg\n        .append('defs')\n        .append('linearGradient')\n        .attr('id', `gradient-${color.replace('#', '')}`)\n        .attr('x1', '0')\n        .attr('y1', '0')\n        .attr('x2', '0')\n        .attr('y2', '1')\n        .attr('spreadMethod', 'pad');\n\n      gradient\n        .append('stop')\n        .attr('offset', '0%')\n        .attr('stop-color', color)\n        .attr('stop-opacity', '1'); // top of bar will be full opacity\n\n      gradient\n        .append('stop')\n        .attr('offset', '100%')\n        .attr('stop-color', color)\n        .attr('stop-opacity', '.3'); // bottom of bar will be .3 opacity\n    }\n\n    return colors;\n  };\n\n  createGlowFilter = svg => {\n    // add a new definition\n    const glow = svg\n      .append('defs')\n      .append('filter')\n      .attr('id', 'glow')\n      .attr('width', '200%')\n      .attr('height', '200%');\n\n    glow\n      .append('feGaussianBlur')\n      .attr('in', 'SourceGraphic')\n      .attr('stdDeviation', 4);\n\n    // build two dropshadows with different intensities\n    const feOffsets = [\n      {\n        dy: 2,\n        slope: 0.2\n      },\n      {\n        dy: 5,\n        slope: 0.05\n      }\n    ];\n\n    for (let i = 0; i < feOffsets.length; i++) {\n      glow\n        .append('feOffset')\n        .attr('result', 'offsetBlur' + i)\n        .attr('dx', 0)\n        .attr('dy', feOffsets[i].dy);\n    }\n\n    for (let y = 0; y < feOffsets.length; y++) {\n      glow\n        .append('feComponentTransfer')\n        .attr('result', 'coloredBlur' + y)\n        .attr('in', 'offsetBlur' + y)\n        .append('feFuncA')\n        .attr('type', 'linear')\n        .attr('slope', feOffsets[y].slope);\n    }\n\n    let merge = glow.append('feMerge');\n\n    merge.append('feMergeNode').attr('in', 'SourceGraphic');\n\n    for (let x = 0; x < feOffsets.length; x++) {\n      merge.append('feMergeNode').attr('in', 'coloredBlur' + x);\n    }\n  };\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  ElementRef,\n  HostBinding,\n  OnChanges,\n  SimpleChanges,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\nimport {\n  select as d3_select,\n  scaleOrdinal as d3_scaleOrdinal,\n  pie as d3_pie,\n  arc as d3_arc,\n  interpolate as d3_interpolate,\n  mouse as d3_mouse,\n  format as d3_format\n} from 'd3';\n\nimport { PbdsDatavizService } from './dataviz.service';\nimport { IPbdsDatavizPie } from './dataviz.interfaces';\n\n@Component({\n  selector: 'pbds-dataviz-pie',\n  template: ``,\n  styleUrls: []\n})\nexport class PbdsDatavizPieComponent implements OnInit, OnChanges {\n  @HostBinding('class.pbds-chart')\n  chartClass = true;\n\n  @HostBinding('class.pbds-chart-pie')\n  pieClass = true;\n\n  @Input()\n  data: Array<IPbdsDatavizPie>;\n\n  @Input()\n  width = 300;\n\n  @Input()\n  type: 'pie' | 'donut' = 'pie';\n\n  @Input()\n  mono = false;\n\n  // TODO: do we need a tooltipFormatType?\n\n  @Input()\n  tooltipFormatString = '';\n\n  // TODO: add input for legendFormatType?\n\n  @Input()\n  legendFormatString = '';\n\n  @Output()\n  hovered: EventEmitter<object> = new EventEmitter<object>();\n\n  @Output()\n  clicked: EventEmitter<object> = new EventEmitter<object>();\n\n  private height;\n  private chart;\n  private margin;\n  private colors;\n  private colorRange;\n  private arc;\n  private arcZoom;\n  private svg;\n  private pie;\n  private legend;\n  private legendFormat;\n  private innerRadius;\n  private anglePad;\n  private outerRadius;\n  private paths;\n  private tooltip;\n  private tooltipFormat;\n\n  constructor(private _dataviz: PbdsDatavizService, private _element: ElementRef) {}\n\n  ngOnInit() {\n    this.margin = { top: 10, right: 10, bottom: 10, left: 10 };\n    this.width = this.width - this.margin.left - this.margin.right;\n    this.height = this.width - this.margin.top - this.margin.bottom;\n    this.colors = this._dataviz.getColors(this.mono);\n    this.innerRadius = Math.min(this.width, this.height) / 2.5;\n    this.outerRadius = Math.min(this.width, this.height) / 2;\n    this.arcZoom = 10;\n    this.anglePad = 0.02;\n    this.legendFormat = d3_format(this.legendFormatString);\n    this.tooltipFormat = d3_format(this.tooltipFormatString);\n\n    this.colorRange = d3_scaleOrdinal()\n      .range(this.colors)\n      .domain(this.data.map(c => c.label));\n\n    if (this.type === 'pie') {\n      this.innerRadius = 0;\n      this.anglePad = 0;\n    }\n\n    this.chart = d3_select(this._element.nativeElement).attr('aria-hidden', 'true');\n\n    this.svg = this.chart\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('class', 'img-fluid')\n      .attr('preserveAspectRatio', 'xMinYMin meet')\n      .attr(\n        'viewBox',\n        `-${this.width / 2 + this.margin.left} -${this.height / 2 + this.margin.top} ${this.width +\n          this.margin.left +\n          this.margin.right} ${this.height + this.margin.top + this.margin.bottom}`\n      );\n\n    this.pie = d3_pie()\n      .padAngle(this.anglePad)\n      .value((d: any) => d.value);\n\n    this.arc = d3_arc()\n      .padRadius(this.outerRadius)\n      .innerRadius(this.innerRadius);\n\n    this.paths = this.svg\n      .selectAll('path')\n      .data(this.pie(this.data))\n      .enter()\n      .append('path')\n      .each((d: any) => (d.outerRadius = this.outerRadius))\n      .attr('d', this.arc)\n      .attr('fill', (d: any) => this.colorRange(d.data.label))\n      .attr('class', 'slice');\n\n    if (this.type === 'pie') {\n      this.paths\n        .style('stroke', '#fff')\n        .style('stroke-width', 2)\n        .style('stroke-alignment', 'inner');\n    }\n\n    this.legend = this.chart\n      .append('ul')\n      .attr('class', 'legend legend-right')\n      .selectAll('li')\n      .data(this.data)\n      .enter()\n      .append('li')\n      .attr('tabindex', 0)\n      .attr('class', 'legend-item');\n\n    this.legend\n      .append('span')\n      .attr('class', 'legend-key')\n      .style('background-color', (d: any) => this.colorRange(d.label));\n\n    let legendDescription = this.legend.append('span').attr('class', 'legend-description');\n\n    legendDescription\n      .append('span')\n      .attr('class', 'legend-label')\n      .html((d: any) => d.label);\n\n    legendDescription\n      .append('span')\n      .attr('class', 'legend-value')\n      .html((d: any) => this.legendFormat(d.value));\n\n    this.legend\n      .on('mouseover focus', (data, index, nodes) => {\n        this.legendMouseOverFocus(data, index, nodes);\n        this.pathMouseOver(data, index, nodes);\n      })\n      .on('mouseout blur', (data, index, nodes) => {\n        this.legendMouseOutBlur(data, index, nodes);\n        this.pathMouseOut(data, index, nodes);\n      })\n      .on('click', (data, index, nodes) => {\n        this.clicked.emit(data);\n      });\n\n    this.paths\n      .on('mouseover', (data, index, nodes) => {\n        this.pathMouseOver(data, index, nodes);\n        this.tooltipShow(this.chart.node(), data);\n      })\n      .on('mousemove', (data, index, nodes) => {\n        this.tooltipMove(this.chart.node());\n      })\n      .on('mouseout', (data, index, nodes) => {\n        this.pathMouseOut(data, index, nodes);\n        this.tooltipHide();\n      })\n      .on('click', (data, index, nodes) => {\n        this.pathClick(data, index, nodes);\n      });\n\n    this.tooltip = this.chart\n      .append('div')\n      .style('opacity', 0)\n      .attr('class', 'pbds-tooltip')\n      .attr('aria-hidden', 'true');\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ((changes.data && !changes.data.firstChange) || (changes.mono && !changes.mono.firstChange)) {\n      // TODO: refactor to use update() function instead\n      this.chart.selectAll('svg').remove();\n      this.chart.selectAll('ul').remove();\n      this.chart.selectAll('div').remove();\n\n      this.ngOnInit();\n    }\n  }\n\n  private legendMouseOverFocus = (data, index, nodes) => {\n    this.chart\n      .selectAll('.legend-item')\n      .filter((d, i) => i !== index)\n      .classed('inactive', true);\n  };\n\n  private legendMouseOutBlur = (data, index, nodes) => {\n    this.chart.selectAll('.legend-item').classed('inactive', false);\n  };\n\n  private pathMouseOver = (data, index, nodes) => {\n    let slices = this.chart.selectAll('.slice');\n    let slice = slices.filter((d, i) => i === index);\n\n    this.chart\n      .selectAll('.legend-item')\n      .filter((d, i) => i !== index)\n      .classed('inactive', true);\n\n    slices.filter((d, i) => i !== index).classed('inactive', true);\n\n    slice\n      .transition()\n      .duration(300)\n      .delay(0)\n      .attrTween('d', (d: any) => {\n        let i = d3_interpolate(d.outerRadius, this.outerRadius + this.arcZoom);\n        return t => {\n          d.outerRadius = i(t);\n          return this.arc(d);\n        };\n      });\n\n    this.hovered.emit(data.data ? data.data : data); // legend hover data is different than slice hover data\n  };\n\n  private pathMouseOut = (data, index, value) => {\n    let slices = this.chart.selectAll('.slice');\n    let slice = slices.filter((d, i) => i === index);\n\n    this.chart\n      .selectAll('.legend-item')\n      .filter((d, i) => i !== index)\n      .classed('inactive', false);\n\n    slices.classed('inactive', false);\n\n    slice\n      .transition()\n      .duration(300)\n      .delay(0)\n      .attrTween('d', (d: any) => {\n        let i = d3_interpolate(d.outerRadius, this.outerRadius);\n        return t => {\n          d.outerRadius = i(t);\n          return this.arc(d);\n        };\n      });\n  };\n\n  private pathClick = (data, index, nodes) => {\n    this.clicked.emit(data.data);\n  };\n\n  private tooltipShow = (node, data) => {\n    this.tooltipSetPosition(node);\n\n    let percentage = (data.endAngle - data.startAngle) / (2 * Math.PI);\n\n    this.tooltip.html(\n      `\n        <div class=\"tooltip-label\">${data.data.label}</div>\n        <div class=\"tooltip-value\">${this.tooltipFormat(percentage)}</div>\n      `\n    );\n\n    this.tooltip.style('opacity', 1);\n  };\n\n  private tooltipMove = node => {\n    this.tooltipSetPosition(node);\n  };\n\n  private tooltipHide = () => {\n    this.tooltip.style('opacity', 0);\n  };\n\n  private tooltipSetPosition = node => {\n    let coordinates = d3_mouse(node);\n\n    this.tooltip.style('left', `${coordinates[0] + 16}px`);\n    this.tooltip.style('top', `${coordinates[1] + 16}px`);\n  };\n}\n","import {\n  Component,\n  OnInit,\n  OnChanges,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  HostBinding,\n  OnDestroy,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { ViewportScroller } from '@angular/common';\n\nimport {\n  select as d3_select,\n  isoParse as d3_isoParse,\n  timeFormat as d3_timeFormat,\n  format as d3_format,\n  scaleOrdinal as d3_scaleOrdinal,\n  scaleBand as d3_scaleBand,\n  scaleLinear as d3_scaleLinear,\n  min as d3_min,\n  max as d3_max,\n  axisBottom as d3_axisBottom,\n  axisLeft as d3_axisLeft,\n  event as d3_event\n} from 'd3';\n\nimport { PbdsDatavizService } from './dataviz.service';\nimport { IPbdsDatavizBar } from './dataviz.interfaces';\n\n@Component({\n  selector: 'pbds-dataviz-bar',\n  template: ``,\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PbdsDatavizBarComponent implements OnInit, OnDestroy, OnChanges {\n  @HostBinding('class.pbds-chart')\n  chartClass = true;\n\n  @HostBinding('class.pbds-chart-bar')\n  barClass = true;\n\n  @Input()\n  data: IPbdsDatavizBar[];\n\n  @Input()\n  width = 306;\n\n  @Input()\n  height = 400;\n\n  @Input()\n  type: 'low' | 'medium' | 'high' | 'debug' = 'medium'; // debug to show all chart options\n\n  @Input()\n  singleSeries = false;\n\n  @Input()\n  xAxisFormatType: 'number' | 'time' = null;\n\n  @Input()\n  xAxisFormatString = '';\n\n  @Input()\n  xAxisBuffer = 0.01;\n\n  @Input()\n  yAxisFormatType: 'number' | 'time' = null;\n\n  @Input()\n  yAxisFormatString = '';\n\n  @Input()\n  yAxisTicks = 5;\n\n  @Input()\n  yAxisBuffer = 0.01;\n\n  @Input()\n  hideLegend = false;\n\n  @Input()\n  legendWidth = 105 + 28; // hardcoded legend width + left margin, do not document until feedback\n\n  @Input()\n  legendPosition: 'right' | 'bottom' = 'right';\n\n  @Input()\n  legendLabelFormatType: 'number' | 'time' = null;\n\n  @Input()\n  legendLabelFormatString = '';\n\n  @Input()\n  tooltipLabelFormatType: 'number' | 'time' = null;\n\n  @Input()\n  tooltipLabelFormatString = '';\n\n  @Input()\n  tooltipValueFormatType: 'number' | 'time' = null;\n\n  @Input()\n  tooltipValueFormatString = '';\n\n  @Input()\n  marginTop = 0; // hardcoded on purpose, do not document until feedback\n\n  @Input()\n  marginRight = 0; // hardcoded on purpose, do not document until feedback\n\n  @Input()\n  marginBottom = 30; // hardcoded on purpose, do not document until feedback\n\n  @Input()\n  marginLeft = 55; // hardcoded on purpose, do not document until feedback\n\n  @Input()\n  threshold = null;\n\n  @Input()\n  average = null;\n\n  @Output()\n  hovered: EventEmitter<object> = new EventEmitter<object>();\n\n  @Output()\n  clicked: EventEmitter<object> = new EventEmitter<object>();\n\n  private chart;\n  private svg;\n  private margin;\n  private colorRange;\n  private hideGrayBars: boolean;\n  private yThreshold;\n  private yAverage;\n  private xAxisScale;\n  private xAxisCall;\n  private xAxis;\n  private xAxisFormat;\n  private yAxisScale;\n  private yAxisCall;\n  private yAxis;\n  private yAxisFormat;\n  private xGrid;\n  private xGridCall;\n  private yGrid;\n  private yGridCall;\n  private xAxisTickSize: number;\n  private xAxisTickSizeOuter: number;\n  private yAxisTickSize: number;\n  private yAxisTickSizeOuter: number;\n  private hideXAxis: boolean;\n  private hideYAxis: boolean;\n  private hideXAxisDomain: boolean;\n  private hideYAxisDomain: boolean;\n  private hideXAxisZero: boolean;\n  private hideYAxisZero: boolean;\n  private hideXGrid: boolean;\n  private hideYGrid: boolean;\n  private hideXAxisTicks: boolean;\n  private hideYAxisTicks: boolean;\n  private legendLabelFormat;\n  private tooltip;\n  private hideTooltip: boolean;\n  private hideTooltipLabel: boolean;\n  private tooltipValueFormat;\n  private tooltipLabelFormat;\n\n  constructor(private _dataviz: PbdsDatavizService, private _element: ElementRef, private _scroll: ViewportScroller) {}\n\n  ngOnInit() {\n    this.margin = {\n      top: +this.marginTop,\n      right: +this.marginRight,\n      bottom: +this.marginBottom,\n      left: +this.marginLeft\n    };\n\n    switch (this.xAxisFormatType) {\n      case 'number':\n        this.xAxisFormat = d3_format(this.xAxisFormatString);\n        break;\n      case 'time':\n        this.xAxisFormat = d3_timeFormat(this.xAxisFormatString);\n        break;\n    }\n\n    switch (this.yAxisFormatType) {\n      case 'number':\n        this.yAxisFormat = d3_format(this.yAxisFormatString);\n        break;\n      case 'time':\n        this.yAxisFormat = d3_timeFormat(this.yAxisFormatString);\n        break;\n    }\n\n    switch (this.legendLabelFormatType) {\n      case 'number':\n        this.legendLabelFormat = d3_format(this.legendLabelFormatString);\n        break;\n      case 'time':\n        this.legendLabelFormat = d3_timeFormat(this.legendLabelFormatString);\n        break;\n      default:\n        this.legendLabelFormat = null;\n        break;\n    }\n\n    switch (this.tooltipLabelFormatType) {\n      case 'number':\n        this.tooltipLabelFormat = d3_format(this.tooltipLabelFormatString);\n        break;\n      case 'time':\n        this.tooltipLabelFormat = d3_timeFormat(this.tooltipLabelFormatString);\n        break;\n      default:\n        this.tooltipLabelFormat = null;\n        break;\n    }\n\n    switch (this.tooltipValueFormatType) {\n      case 'number':\n        this.tooltipValueFormat = d3_format(this.tooltipValueFormatString);\n        break;\n      case 'time':\n        this.tooltipValueFormat = d3_timeFormat(this.tooltipValueFormatString);\n        break;\n      default:\n        this.tooltipValueFormat = null;\n    }\n\n    // defaults for all chart types\n    this.hideGrayBars = false;\n    this.hideXAxis = false;\n    this.hideYAxis = false;\n    this.hideXAxisZero = false;\n    this.hideYAxisZero = false;\n    this.hideXGrid = false;\n    this.hideYGrid = false;\n    this.hideXAxisDomain = false;\n    this.hideYAxisDomain = false;\n    this.hideTooltip = false;\n    this.hideXAxisTicks = false;\n    this.hideYAxisTicks = false;\n    this.xAxisTickSize = 8;\n    this.xAxisTickSizeOuter = 0;\n    this.yAxisTickSize = 8;\n    this.yAxisTickSizeOuter = 0;\n    this.hideTooltipLabel = false;\n\n    if (this.type !== 'debug') {\n      // set type defaults\n      switch (this.type) {\n        case 'low':\n          this.hideGrayBars = true;\n          this.hideXAxis = !this.hideLegend;\n          this.hideXAxisTicks = true;\n          this.hideXGrid = true;\n          this.hideYAxisDomain = false;\n          this.hideYAxisTicks = true;\n          this.legendPosition = 'bottom';\n          this.hideTooltipLabel = true;\n          break;\n\n        case 'medium':\n          this.hideXAxisDomain = true;\n          this.hideXAxis = !this.hideLegend;\n          this.hideXGrid = true;\n          this.hideXAxisTicks = true;\n          this.hideYAxisDomain = true;\n          this.hideYAxisTicks = true;\n          this.hideYGrid = true;\n          this.hideTooltipLabel = true;\n          break;\n\n        case 'high':\n          this.hideXAxis = true;\n          this.hideXAxisDomain = true;\n          this.hideXGrid = true;\n          this.hideYAxisDomain = true;\n          this.hideYAxisTicks = true;\n          this.hideYGrid = true;\n          this.hideLegend = true;\n          this.hideTooltipLabel = false;\n          break;\n      }\n\n      // single series overrides\n      if (this.singleSeries) {\n        this.hideLegend = true;\n        this.hideXAxis = true;\n        this.hideXGrid = true;\n        this.hideTooltipLabel = false;\n      }\n    }\n\n    // adjust margin if xAxis hidden\n    if (this.hideXAxis) this.margin.bottom = 10; // need small margin for yAxis with 0 tick label\n\n    if (!this.hideLegend && this.legendPosition === 'right') {\n      this.width = +this.width - +this.legendWidth;\n    }\n\n    // create the chart\n    this.chart = d3_select(this._element.nativeElement).attr('aria-hidden', 'true');\n\n    // create chart svg\n    this.svg = this.chart\n      .append('svg')\n      .attr('width', +this.width)\n      .attr('height', +this.height + this.margin.top + this.margin.bottom)\n      .attr('class', 'img-fluid')\n      .attr('preserveAspectRatio', 'xMinYMin meet')\n      .attr(\n        'viewBox',\n        `-${this.margin.left} -${this.margin.top} ${+this.width} ${+this.height + this.margin.top + this.margin.bottom}`\n      );\n\n    // build color ranges\n    this.colorRange = d3_scaleOrdinal().range(this._dataviz.createGradientDefs(this.svg, this.singleSeries));\n\n    // X AXIS\n    this.xAxisScale = d3_scaleBand()\n      .domain(this.data.map(d => d.label))\n      .rangeRound([0, this.width - this.margin.left])\n      .align(0);\n\n    // add padding to the scale for gray bars\n    !this.hideGrayBars\n      ? this.xAxisScale.paddingInner(0.1).paddingOuter(0)\n      : this.xAxisScale.paddingInner(0).paddingOuter(0);\n\n    this.xAxisCall = d3_axisBottom(this.xAxisScale)\n      .tickSize(this.xAxisTickSize)\n      .tickSizeOuter(this.xAxisTickSizeOuter)\n      .tickFormat(this.xAxisFormatter);\n\n    this.xAxis = this.svg\n      .append('g')\n      .attr('class', 'axis axis-x')\n      .attr('transform', `translate(0, ${this.height})`)\n      .classed('axis-hidden', this.hideXAxis)\n      .classed('axis-zero-hidden', this.hideXAxisZero)\n      .classed('axis-domain-hidden', this.hideXAxisDomain)\n      .classed('axis-ticks-hidden', this.hideXAxisTicks)\n      .call(this.xAxisCall);\n\n    // X GRIDLINES\n    if (!this.hideXGrid) {\n      this.xGridCall = d3_axisBottom(this.xAxisScale).tickSize(-this.height);\n\n      this.xGrid = this.svg\n        .append('g')\n        .attr('class', 'grid grid-x')\n        .classed('grid-zero-hidden', this.hideXAxisZero)\n        .attr('transform', `translate(0, ${this.height})`)\n        .call(this.xGridCall);\n    }\n\n    // Y AXIS\n    this.yAxisScale = d3_scaleLinear()\n      .domain([\n        d3_min(this.data, d => d.value - d.value * +this.xAxisBuffer),\n        d3_max(this.data, d => d.value + d.value * +this.yAxisBuffer)\n      ])\n      .nice()\n      .rangeRound([this.height, 0]);\n\n    this.yAxisCall = d3_axisLeft(this.yAxisScale)\n      .ticks(this.yAxisTicks)\n      .tickSize(this.yAxisTickSize)\n      .tickSizeOuter(this.yAxisTickSizeOuter)\n      .tickFormat(this.yAxisFormatter);\n\n    this.yAxis = this.svg\n      .append('g')\n      .attr('class', 'axis axis-y')\n      .classed('axis-hidden', this.hideYAxis)\n      .classed('axis-zero-hidden', this.hideYAxisZero)\n      .classed('axis-domain-hidden', this.hideYAxisDomain)\n      .classed('axis-ticks-hidden', this.hideYAxisTicks)\n      .call(this.yAxisCall);\n\n    // Y GRIDLINES\n    if (!this.hideYGrid) {\n      this.yGridCall = d3_axisLeft(this.yAxisScale)\n        .ticks(this.yAxisTicks)\n        .tickSize(-this.width + this.margin.left + this.margin.right);\n\n      this.yGrid = this.svg\n        .append('g')\n        .attr('class', 'grid grid-y')\n        .classed('grid-zero-hidden', this.hideYAxisZero)\n        .attr('transform', `translate(0, 0)`)\n        .call(this.yGridCall);\n    }\n\n    // Y THRESHOLD\n    if (this.threshold) {\n      this.yThreshold = this.svg\n        .append('line')\n        .attr('class', 'threshold')\n        .attr('x2', +this.width)\n        .attr('transform', `translate(0,  ${this.yAxisScale(+this.threshold)})`);\n    }\n\n    // Y AVERAGE\n    if (this.average) {\n      this.yAverage = this.svg\n        .append('line')\n        .attr('class', 'average')\n        .attr('x2', +this.width)\n        .attr('transform', `translate(0,  ${this.yAxisScale(+this.average)})`);\n    }\n\n    // TOOLTIP\n    if (!this.hideTooltip) {\n      this.tooltip = d3_select('body')\n        .append('div')\n        .attr('class', 'pbds-tooltip south')\n        .style('opacity', 0)\n        .attr('aria-hidden', 'true'); // hide tooltip for accessibility\n    }\n\n    // add legend classes\n    if (!this.hideLegend) {\n      this.chart.classed('pbds-chart-legend-bottom', this.legendPosition === 'bottom' ? true : false);\n      this.chart.append('ul').attr('class', `legend legend-${this.legendPosition}`);\n    }\n\n    this.updateChart();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.data && !changes.data.firstChange) {\n      this.updateChart();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.tooltip) this.tooltip.remove();\n  }\n\n  updateChart = () => {\n    // update the xScale\n    this.xAxisScale.domain(this.data.map(d => d.label));\n\n    // update the yScale\n    this.yAxisScale\n      .domain([\n        d3_min(this.data, d => d.value - d.value * +this.xAxisBuffer),\n        d3_max(this.data, d => d.value + d.value * +this.yAxisBuffer)\n      ])\n      .rangeRound([this.height, 0])\n      .nice();\n\n    this.xAxis\n      .transition()\n      .duration(1000)\n      .call(this.xAxisCall);\n\n    this.yAxis\n      .transition()\n      .duration(1000)\n      .call(this.yAxisCall);\n\n    // update the grids\n    if (!this.hideXGrid) {\n      this.xGrid\n        .transition()\n        .duration(1000)\n        .call(this.xGridCall);\n    }\n\n    if (!this.hideYGrid) {\n      this.yGrid\n        .transition()\n        .duration(1000)\n        .call(this.yGridCall);\n    }\n\n    if (!this.hideGrayBars) {\n      // rebind data to groups\n      let group = this.svg.selectAll('.bar-group').data(this.data);\n\n      // remove bars\n      group.exit().remove();\n\n      // update gray bars\n      group\n        .select('.gray-bar')\n        .transition()\n        .duration(1000)\n        .attr('x', d => this.xAxisScale(d.label))\n        .attr('width', this.xAxisScale.bandwidth());\n\n      // update the existing bars\n      group\n        .select('.bar')\n        .transition()\n        .duration(1000)\n        .attr('x', d => this.xAxisScale(d.label) + this.xAxisScale.bandwidth() / 4)\n        .attr('width', this.xAxisScale.bandwidth() / 2)\n        .attr('height', d => this.height - this.yAxisScale(d.value))\n        .attr('y', d => this.yAxisScale(d.value));\n\n      // add group on enter\n      const groupEnter = group\n        .enter()\n        .append('g')\n        .attr('class', 'bar-group');\n\n      // add gray bars on enter\n      groupEnter\n        .append('rect')\n        .attr('class', 'gray-bar')\n        .attr('rx', 0)\n        .attr('height', 0)\n        .attr('x', d => this.xAxisScale(d.label))\n        .attr('width', this.xAxisScale.bandwidth())\n        .transition()\n        // .delay(1000)\n        .attr('height', this.height)\n        .attr('width', this.xAxisScale.bandwidth());\n\n      // add bars on enter\n      groupEnter\n        .append('rect')\n        .attr('class', 'bar')\n        .attr('rx', 2)\n        .attr('fill', d => `url(#gradient-${this.colorRange(d.label).substr(1)})`) // removes hash to prevent safari bug;\n        .attr('x', d => this.xAxisScale(d.label) + this.xAxisScale.bandwidth() / 4)\n        .attr('width', this.xAxisScale.bandwidth() / 2)\n        .attr('y', this.height)\n        .attr('height', 0)\n        .transition()\n        .duration(1000)\n        // .delay(1000)\n        .attr('y', d => this.yAxisScale(d.value))\n        .attr('height', d => this.height - this.yAxisScale(d.value))\n        .attr('data-color', d => this.colorRange(d.label));\n\n      groupEnter\n        .select('.bar')\n        .on('mouseover focus', (data, index, nodes) => this.barMouseOverFocus(d3_event, data, index, nodes))\n        .on('mouseout blur', (data, index, nodes) => this.barMouseOutBlur())\n        .on('click', (data, index, nodes) => this.barMouseClick(d3_event, data, index, nodes));\n    } else {\n      // rebind data to groups\n      let group = this.svg.selectAll('.bar-group').data(this.data);\n\n      // remove bars\n      group.exit().remove();\n\n      // update the existing bars\n      group\n        .select('.bar')\n        .attr('x', d => this.xAxisScale(d.label) + this.xAxisScale.bandwidth() / 5.5)\n        .attr('width', this.xAxisScale.bandwidth() / 1.5)\n        .transition()\n        .duration(1000)\n        .attr('y', d => this.yAxisScale(d.value))\n        .attr('height', d => this.height - this.yAxisScale(d.value));\n\n      // add group on enter\n      const groupEnter = group\n        .enter()\n        .append('g')\n        .attr('class', 'bar-group');\n\n      // add bars on enter\n      groupEnter\n        .append('rect')\n        .attr('class', 'bar')\n        .attr('rx', 2)\n        .attr('fill', d => `url(#gradient-${this.colorRange(d.label).substr(1)})`) // removes hash to prevent safari bug;\n        .attr('x', d => this.xAxisScale(d.label) + this.xAxisScale.bandwidth() / 5.5)\n        .attr('width', this.xAxisScale.bandwidth() / 1.5)\n        .attr('y', this.height)\n        .attr('height', 0)\n        .transition()\n        .duration(1000)\n        .attr('y', d => this.yAxisScale(d.value))\n        .attr('height', d => this.height - this.yAxisScale(d.value))\n        .attr('data-color', d => this.colorRange(d.label));\n\n      groupEnter\n        .select('.bar')\n        .on('mouseover focus', (data, index, nodes) => this.barMouseOverFocus(d3_event, data, index, nodes))\n        .on('mouseout blur', () => this.barMouseOutBlur())\n        .on('click', (data, index, nodes) => this.barMouseClick(d3_event, data, index, nodes));\n    }\n\n    if (!this.hideLegend) {\n      let legendItem = this.chart\n        .select('.legend')\n        .selectAll('.legend-item')\n        .data(this.data);\n\n      legendItem.exit().remove();\n\n      // update existing items\n      legendItem.select('.legend-label').html(d => {\n        // return this.legendLabelFormat === null ? d.label : this.legendLabelFormat(d.label);\n        switch (this.legendLabelFormatType) {\n          case 'number':\n            return this.legendLabelFormat(d.label);\n\n          case 'time':\n            const parsedTime = d3_isoParse(d.label);\n            return this.legendLabelFormat(parsedTime);\n\n          default:\n            return d.label;\n        }\n      });\n\n      // legend items on enter\n      let enterLegendItem = legendItem\n        .enter()\n        .append('li')\n        .attr('class', 'legend-item');\n\n      enterLegendItem\n        .append('span')\n        .attr('class', 'legend-key')\n        .style('background-color', d => this.colorRange(d.label));\n\n      enterLegendItem\n        .append('span')\n        .attr('class', 'legend-label')\n        .html(d => {\n          // return this.legendLabelFormat === null ? d.label : this.legendLabelFormat(d.label);\n          switch (this.legendLabelFormatType) {\n            case 'number':\n              return this.legendLabelFormat(d.label);\n\n            case 'time':\n              const parsedTime = d3_isoParse(d.label);\n              return this.legendLabelFormat(parsedTime);\n\n            default:\n              return d.label;\n          }\n        });\n\n      enterLegendItem\n        .on('mouseover', (data, index, nodes) => this.legendMouseOver(d3_event, data, index, nodes))\n        .on('mouseout', () => this.legendMouseOut())\n        .on('click', (data, index, nodes) => this.legendMouseClick(d3_event, data, index, nodes));\n    }\n\n    if (this.threshold) {\n      this.yThreshold\n        .raise()\n        .transition()\n        .duration(1000)\n        .attr('transform', `translate(0,  ${this.yAxisScale(+this.threshold)})`);\n    }\n\n    if (this.average) {\n      this.yAverage\n        .raise()\n        .transition()\n        .duration(1000)\n        .attr('transform', `translate(0,  ${this.yAxisScale(+this.average)})`);\n    }\n  };\n\n  barMouseOverFocus = (event, data, index, nodes) => {\n    this.chart\n      .selectAll('.bar-group')\n      .filter((d, i) => i !== index)\n      .classed('inactive', true);\n\n    const bar = this.chart\n      .selectAll('.bar-group')\n      .filter((d, i) => i === index)\n      .select('.bar');\n\n    const barColor = bar.attr('data-color');\n\n    bar.style('fill', () => barColor);\n\n    this.chart\n      .selectAll('.legend-item')\n      .filter((d, i) => i !== index)\n      .classed('inactive', true);\n\n    this.tooltipShow(data, nodes.filter((d, i) => i === index));\n\n    this.hovered.emit({ event, data });\n  };\n\n  barMouseOutBlur = () => {\n    this.chart\n      .selectAll('.bar-group')\n      .classed('inactive', false)\n      .select('.bar')\n      .style('fill', null);\n\n    this.chart.selectAll('.legend-item').classed('inactive', false);\n\n    this.tooltipHide();\n  };\n\n  barMouseClick = (event, data, index, nodes) => {\n    this.clicked.emit({ event, data });\n  };\n\n  legendMouseOver = (event, data, index, nodes) => {\n    this.chart\n      .selectAll('.legend-item')\n      .filter((d, i) => i !== index)\n      .classed('inactive', true);\n\n    this.chart\n      .selectAll('.bar-group')\n      .filter((d, i) => i !== index)\n      .classed('inactive', true);\n\n    const bar = this.chart\n      .selectAll('.bar-group')\n      .filter((d, i) => i === index)\n      .select('.bar');\n\n    const barColor = bar.attr('data-color');\n\n    bar.style('fill', () => barColor);\n\n    this.tooltipShow(data, this.chart.selectAll('.bar').filter((d, i) => i === index)._groups[0]); // TODO: find better way than using _groups\n\n    this.hovered.emit({ event, data });\n  };\n\n  legendMouseOut = () => {\n    this.chart.selectAll('.legend-item').classed('inactive', false);\n\n    this.chart\n      .selectAll('.bar-group')\n      .classed('inactive', false)\n      .select('.bar')\n      .style('fill', null);\n\n    this.tooltipHide();\n  };\n\n  legendMouseClick = (event, data, index, nodes) => {\n    this.clicked.emit({ event, data });\n  };\n\n  private tooltipShow = (data, node) => {\n    let dimensions = node[0].getBoundingClientRect();\n    let scroll = this._scroll.getScrollPosition();\n    let label;\n\n    switch (this.tooltipLabelFormatType) {\n      case 'number':\n        label = this.legendLabelFormat(data.label);\n        break;\n\n      case 'time':\n        const parsedTime = d3_isoParse(data.label);\n        label = this.legendLabelFormat(parsedTime);\n        break;\n\n      default:\n        label = data.label;\n    }\n    let value =\n      this.tooltipValueFormat === null\n        ? `<div class=\"tooltip-value\">${data.value}</div>`\n        : `<div class=\"tooltip-value\">${this.tooltipValueFormat(data.value)}</div>`;\n\n    this.tooltip.html(\n      `\n        ${this.hideTooltipLabel ? '' : `${label}`}\n        ${value}\n      `\n    );\n\n    let tooltipOffsetWidth = +this.tooltip.node().offsetWidth / 2;\n    let tooltipOffsetHeight = +this.tooltip.node().offsetHeight + 8;\n\n    this.tooltip.style('top', `${+scroll[1] + +dimensions.top - tooltipOffsetHeight}px`); //\n    this.tooltip.style('left', `${+scroll[0] + +dimensions.left - tooltipOffsetWidth + +dimensions.width / 2}px`);\n    this.tooltip.style('opacity', 1);\n  };\n\n  private tooltipHide = () => {\n    this.tooltip.style('opacity', 0);\n  };\n\n  private xAxisFormatter = item => {\n    switch (this.xAxisFormatType) {\n      case 'number':\n        return this.xAxisFormat(item);\n\n      case 'time':\n        const parseDate = d3_isoParse(item);\n        return this.xAxisFormat(parseDate);\n\n      default:\n        return item;\n    }\n  };\n\n  private yAxisFormatter = item => {\n    switch (this.yAxisFormatType) {\n      case 'number':\n        return this.yAxisFormat(item);\n\n      case 'time':\n        const parseDate = d3_isoParse(item);\n        return this.yAxisFormat(parseDate);\n\n      default:\n        return item;\n    }\n  };\n}\n","import {\n  Component,\n  OnInit,\n  OnChanges,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  HostBinding,\n  OnDestroy,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { ViewportScroller } from '@angular/common';\n\nimport {\n  select as d3_select,\n  isoParse as d3_isoParse,\n  isoFormat as d3_isoFormat,\n  timeFormat as d3_timeFormat,\n  format as d3_format,\n  scaleOrdinal as d3_scaleOrdinal,\n  scaleTime as d3_scaleTime,\n  line as d3_line,\n  scaleLinear as d3_scaleLinear,\n  extent as d3_extent,\n  min as d3_min,\n  max as d3_max,\n  axisBottom as d3_axisBottom,\n  axisLeft as d3_axisLeft,\n  event as d3_event,\n  curveCatmullRom as d3_curveCatmullRom,\n  mouse as d3_mouse,\n  bisectLeft as d3_bisectLeft,\n  area as d3_area\n} from 'd3';\n\nimport { PbdsDatavizService } from './dataviz.service';\nimport { IPbdsDatavizLine } from './dataviz.interfaces';\n\n@Component({\n  selector: 'pbds-dataviz-line',\n  template: ``,\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PbdsDatavizLineComponent implements OnInit, OnDestroy, OnChanges {\n  @HostBinding('class.pbds-chart')\n  chartClass = true;\n\n  @HostBinding('class.pbds-chart-line')\n  lineClass = true;\n\n  @Input()\n  data: IPbdsDatavizLine;\n\n  @Input()\n  width = 306;\n\n  @Input()\n  height = 400;\n\n  @Input()\n  type: 'medium' | 'high' | 'debug' = 'medium'; // debug to show all chart options\n\n  @Input()\n  area = false;\n\n  @Input()\n  xAxisFormatString = '';\n\n  @Input()\n  xAxisTicks = 6;\n\n  @Input()\n  yAxisFormatString = '';\n\n  @Input()\n  yAxisTicks = 5;\n\n  @Input()\n  hideLegend = false;\n\n  @Input()\n  legendWidth = 105 + 28; // hardcoded legend width + left margin, do not document until feedback\n\n  @Input()\n  legendPosition: 'right' | 'bottom' = 'right';\n\n  @Input()\n  legendLabelFormatType: 'number' | 'time' = null;\n\n  @Input()\n  legendLabelFormatString = '';\n\n  @Input()\n  tooltipHeadingFormatString = '';\n\n  @Input()\n  tooltipLabelFormatType: 'number' | 'time' = null;\n\n  @Input()\n  tooltipLabelFormatString = '';\n\n  @Input()\n  tooltipValueFormatType: 'number' | 'time' = null;\n\n  @Input()\n  tooltipValueFormatString = '';\n\n  @Input()\n  marginTop = 10; // hardcoded on purpose, do not document until feedback\n\n  @Input()\n  marginRight = 20; // hardcoded on purpose, do not document until feedback\n\n  @Input()\n  marginBottom = 30; // hardcoded on purpose, do not document until feedback\n\n  @Input()\n  marginLeft = 55; // hardcoded on purpose, do not document until feedback\n\n  @Output()\n  hovered: EventEmitter<object> = new EventEmitter<object>();\n\n  @Output()\n  clicked: EventEmitter<object> = new EventEmitter<object>();\n\n  @Output()\n  tooltipHovered: EventEmitter<object> = new EventEmitter<object>();\n\n  @Output()\n  tooltipClicked: EventEmitter<object> = new EventEmitter<object>();\n\n  private chart;\n  private svg;\n  private mouserect;\n  private tooltipLine;\n  private margin;\n  private d3line;\n  private d3area;\n  private lineWidth;\n  private lineCurved;\n  private linePoints;\n  private colorRange;\n  private xAxisScale;\n  private xAxisCall;\n  private xAxis;\n  private xAxisFormat;\n  private yAxisScale;\n  private yAxisCall;\n  private yAxis;\n  private yAxisFormat;\n  private xGrid;\n  private xGridCall;\n  private yGrid;\n  private yGridCall;\n  private xAxisTickSize: number;\n  private xAxisTickSizeOuter: number;\n  private yAxisTickSize: number;\n  private yAxisTickSizeOuter: number;\n  private hideXAxis: boolean;\n  private hideYAxis: boolean;\n  private hideXAxisDomain: boolean;\n  private hideYAxisDomain: boolean;\n  private hideXAxisZero: boolean;\n  private hideYAxisZero: boolean;\n  private hideXGrid: boolean;\n  private hideYGrid: boolean;\n  private hideXAxisTicks: boolean;\n  private hideYAxisTicks: boolean;\n  private legendLabelFormat;\n  private tooltip;\n  private hideTooltip: boolean;\n  private tooltipHeadingFormat;\n  private tooltipValueFormat;\n  private tooltipLabelFormat;\n  private mousedata;\n\n  constructor(private _dataviz: PbdsDatavizService, private _element: ElementRef, private _scroll: ViewportScroller) {}\n\n  ngOnInit() {\n    this.margin = {\n      top: +this.marginTop,\n      right: +this.marginRight,\n      bottom: +this.marginBottom,\n      left: +this.marginLeft\n    };\n\n    this.xAxisFormat = d3_timeFormat(this.xAxisFormatString);\n\n    this.yAxisFormat = d3_format(this.yAxisFormatString);\n\n    switch (this.legendLabelFormatType) {\n      case 'number':\n        this.legendLabelFormat = d3_format(this.legendLabelFormatString);\n        break;\n      case 'time':\n        this.legendLabelFormat = d3_timeFormat(this.legendLabelFormatString);\n        break;\n      default:\n        this.legendLabelFormat = null;\n        break;\n    }\n\n    this.tooltipHeadingFormat = d3_timeFormat(this.tooltipHeadingFormatString);\n\n    switch (this.tooltipLabelFormatType) {\n      case 'number':\n        this.tooltipLabelFormat = d3_format(this.tooltipLabelFormatString);\n        break;\n      case 'time':\n        this.tooltipLabelFormat = d3_timeFormat(this.tooltipLabelFormatString);\n        break;\n      default:\n        this.tooltipLabelFormat = null;\n        break;\n    }\n\n    switch (this.tooltipValueFormatType) {\n      case 'number':\n        this.tooltipValueFormat = d3_format(this.tooltipValueFormatString);\n        break;\n      case 'time':\n        this.tooltipValueFormat = d3_timeFormat(this.tooltipValueFormatString);\n        break;\n      default:\n        this.tooltipValueFormat = null;\n    }\n\n    // defaults for all chart types\n    this.lineWidth = 3;\n    this.lineCurved = true;\n    this.linePoints = true;\n    this.hideXAxis = false;\n    this.hideYAxis = false;\n    this.hideXAxisZero = false;\n    this.hideYAxisZero = false;\n    this.hideXGrid = false;\n    this.hideYGrid = false;\n    this.hideXAxisDomain = false;\n    this.hideYAxisDomain = false;\n    this.hideTooltip = false;\n    this.hideXAxisTicks = false;\n    this.hideYAxisTicks = false;\n    this.xAxisTickSize = 8;\n    this.xAxisTickSizeOuter = 0;\n    this.yAxisTickSize = 8;\n    this.yAxisTickSizeOuter = 0;\n\n    if (this.type !== 'debug') {\n      // set type defaults\n      switch (this.type) {\n        case 'medium':\n          this.hideXGrid = true;\n          this.hideXAxisTicks = true;\n          this.hideYAxisTicks = true;\n          this.hideYGrid = true;\n          break;\n\n        case 'high':\n          this.lineWidth = 2;\n          this.lineCurved = false;\n          this.linePoints = false;\n          this.hideXAxisTicks = true;\n          this.hideYAxisTicks = true;\n          break;\n      }\n    }\n\n    // adjust margin if xAxis hidden\n    if (this.hideXAxis) this.margin.bottom = 10; // need small margin for yAxis with 0 tick label\n\n    if (!this.hideLegend && this.legendPosition === 'right') {\n      this.width = +this.width - +this.legendWidth;\n    }\n\n    // define line\n    this.d3line = d3_line()\n      .x((d: any, i) => this.xAxisScale(d3_isoParse(this.data.dates[i])))\n      .y((d: any) => this.yAxisScale(d));\n\n    // define line curve\n    if (this.lineCurved) {\n      this.d3line.curve(d3_curveCatmullRom.alpha(0.5));\n    }\n\n    // define area\n    if (this.area) {\n      this.d3area = d3_area()\n        .x((d: any, i) => this.xAxisScale(d3_isoParse(this.data.dates[i])))\n        .y0(this.height)\n        .y1((d: any, i) => this.yAxisScale(d));\n\n      if (this.lineCurved) {\n        this.d3area.curve(d3_curveCatmullRom.alpha(0.5));\n      }\n    }\n\n    // create the chart\n    this.chart = d3_select(this._element.nativeElement).attr('aria-hidden', 'true');\n\n    // create chart svg\n    this.svg = this.chart\n      .append('svg')\n      .attr('width', +this.width + this.margin.right)\n      .attr('height', +this.height + this.margin.top + this.margin.bottom)\n      .attr('class', 'img-fluid')\n      .attr('preserveAspectRatio', 'xMinYMin meet')\n      .attr(\n        'viewBox',\n        `-${this.margin.left} -${this.margin.top} ${+this.width + this.margin.right} ${+this.height +\n          this.margin.top +\n          this.margin.bottom}`\n      );\n\n    // add rectangle to capture mouse\n    this.mouserect = this.svg\n      .append('rect')\n      .attr('width', this.width - this.margin.left - this.margin.right)\n      .attr('height', this.height)\n      .attr('class', 'mouserect')\n      .on('mousemove', (data, index, nodes) => this.mouserectMouseMove(d3_event, index, nodes))\n      .on('mouseout', (data, index, nodes) => this.mouserectMouseOut(d3_event, index, nodes))\n      .on('click', (data, index, nodes) => this.mouserectMouseClick());\n\n    this.tooltipLine = this.svg\n      .append('line')\n      .attr('y1', 0)\n      .attr('y2', this.height)\n      .attr('class', 'tooltip-line');\n\n    // define color range\n    this.colorRange = d3_scaleOrdinal().range(this._dataviz.getColors(false));\n\n    // add glow def\n    this._dataviz.createGlowFilter(this.svg);\n\n    // X AXIS\n    this.xAxisScale = d3_scaleTime()\n      .domain(\n        d3_extent(this.data.dates, (d: any, i) => {\n          return d3_isoParse(d);\n        })\n      )\n      .range([0, this.width - this.margin.left - this.margin.right]);\n\n    this.xAxisCall = d3_axisBottom(this.xAxisScale)\n      .ticks(+this.xAxisTicks)\n      .tickSize(this.xAxisTickSize)\n      .tickSizeOuter(this.xAxisTickSizeOuter)\n      .tickFormat(this.xAxisFormatter);\n\n    this.xAxis = this.svg\n      .append('g')\n      .attr('class', 'axis axis-x')\n      .attr('transform', `translate(0, ${this.height})`) //${-this.margin.right / 2}\n      .classed('axis-hidden', this.hideXAxis)\n      .classed('axis-zero-hidden', this.hideXAxisZero)\n      .classed('axis-domain-hidden', this.hideXAxisDomain)\n      .classed('axis-ticks-hidden', this.hideXAxisTicks)\n      .call(this.xAxisCall);\n\n    // X GRIDLINES\n    if (!this.hideXGrid) {\n      this.xGridCall = d3_axisBottom(this.xAxisScale).tickSize(-this.height);\n\n      this.xGrid = this.svg\n        .append('g')\n        .attr('class', 'grid grid-x')\n        .classed('grid-zero-hidden', this.hideXAxisZero)\n        .attr('transform', `translate(0, ${this.height})`) //${-this.margin.right / 2}\n        .call(this.xGridCall);\n    }\n\n    // Y AXIS\n    this.yAxisScale = d3_scaleLinear()\n      .domain([\n        d3_min(this.data.series, (d: any, i) => {\n          return +d3_min(d.values);\n        }),\n        d3_max(this.data.series, (d: any, i) => {\n          return +d3_max(d.values);\n        })\n      ])\n      .nice()\n      .range([this.height, 0]);\n\n    this.yAxisCall = d3_axisLeft(this.yAxisScale)\n      .ticks(this.yAxisTicks)\n      .tickSize(this.yAxisTickSize)\n      .tickSizeOuter(this.yAxisTickSizeOuter)\n      .tickFormat(this.yAxisFormatter);\n\n    this.yAxis = this.svg\n      .append('g')\n      .attr('class', 'axis axis-y')\n      .classed('axis-hidden', this.hideYAxis)\n      .classed('axis-zero-hidden', this.hideYAxisZero)\n      .classed('axis-domain-hidden', this.hideYAxisDomain)\n      .classed('axis-ticks-hidden', this.hideYAxisTicks)\n      .call(this.yAxisCall);\n\n    // Y GRIDLINES\n    if (!this.hideYGrid) {\n      this.yGridCall = d3_axisLeft(this.yAxisScale)\n        .ticks(this.yAxisTicks)\n        .tickSize(-this.width + this.margin.left + this.margin.right);\n\n      this.yGrid = this.svg\n        .append('g')\n        .attr('class', 'grid grid-y')\n        .classed('grid-zero-hidden', this.hideYAxisZero)\n        .attr('transform', `translate(0, 0)`)\n        .call(this.yGridCall);\n    }\n\n    // TOOLTIP\n    if (!this.hideTooltip) {\n      this.tooltip = d3_select('body')\n        .append('div')\n        .attr('class', 'pbds-tooltip west')\n        .style('opacity', 0)\n        .attr('aria-hidden', 'true'); // hide tooltip for accessibility\n\n      // tooltip header\n      this.tooltip.append('div').attr('class', 'tooltip-header');\n\n      // tooltip table\n      const tooltipTable = this.tooltip.append('table').attr('class', 'tooltip-table text-left w-100');\n\n      const tooltipTableTbody = tooltipTable.append('tbody');\n\n      tooltipTableTbody\n        .selectAll('tr')\n        .data(this.data)\n        .enter()\n        .append('tr');\n    }\n\n    // add legend classes\n    if (!this.hideLegend) {\n      this.chart.classed('pbds-chart-legend-bottom', this.legendPosition === 'bottom' ? true : false);\n      this.chart.append('ul').attr('class', `legend legend-${this.legendPosition}`);\n    }\n\n    this.updateChart();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.data && !changes.data.firstChange) {\n      this.updateChart();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.tooltip) this.tooltip.remove();\n  }\n\n  updateChart = () => {\n    this.mouserect.data(this.data);\n\n    // update the xScale\n    this.xAxisScale.domain(\n      d3_extent(this.data.dates, (d: any, i) => {\n        return d3_isoParse(d);\n      })\n    );\n\n    // update the yScale\n    this.yAxisScale\n      .domain([\n        d3_min(this.data.series, (d: any, i) => {\n          return +d3_min(d.values);\n        }),\n        d3_max(this.data.series, (d: any, i) => {\n          return +d3_max(d.values);\n        })\n      ])\n      .nice();\n\n    this.xAxis\n      .transition()\n      .duration(1000)\n      .call(this.xAxisCall);\n\n    this.yAxis\n      .transition()\n      .duration(1000)\n      .call(this.yAxisCall);\n\n    // update the grids\n    if (!this.hideXGrid) {\n      this.xGrid\n        .transition()\n        .duration(1000)\n        .call(this.xGridCall);\n    }\n\n    if (!this.hideYGrid) {\n      this.yGrid\n        .transition()\n        .duration(1000)\n        .call(this.yGridCall);\n    }\n\n    let group = this.svg.selectAll('.line-group').data(this.data.series);\n\n    // remove lines\n    group.exit().remove();\n\n    // update existing\n    group\n      .select('path.line')\n      .transition()\n      .duration(1000)\n      .attr('d', d => this.d3line(d.values));\n\n    if (this.area) {\n      group\n        .select('path.area')\n        .transition()\n        .duration(1000)\n        .attr('d', d => this.d3area(d.values));\n    }\n\n    group\n      .selectAll('circle')\n      .data(d => d.values)\n      .transition()\n      .duration(1000)\n      .attr('cx', (d, i) => this.xAxisScale(d3_isoParse(this.data.dates[i])))\n      .attr('cy', d => this.yAxisScale(d));\n\n    // add group on enter\n    const groupEnter = group\n      .enter()\n      .append('g')\n      .attr('class', 'line-group');\n\n    // add line on enter\n    const line = groupEnter\n      .append('path')\n      .attr('class', 'line')\n      .style('color', d => this.colorRange(d.label))\n      .style('stroke-width', this.lineWidth)\n      .transition()\n      .duration(1000)\n      .attr('d', data => this.d3line(data.values));\n\n    if (this.area) {\n      groupEnter\n        .append('path')\n        .attr('class', 'area')\n        .attr('d', data => this.d3area(data.values))\n        .style('color', d => this.colorRange(d.label));\n    }\n\n    // add points\n    if (this.linePoints) {\n      const points = groupEnter\n        .append('g')\n        .attr('class', 'points')\n        .style('color', d => this.colorRange(d.label));\n\n      const circles = points.selectAll('circle').data(d => d.values);\n\n      circles\n        .enter()\n        .append('circle')\n        .attr('cx', (d, i) => this.xAxisScale(d3_isoParse(this.data.dates[i])))\n        .attr('cy', d => this.yAxisScale(d))\n        .attr('r', this.lineWidth * 2)\n        .style('stroke-width', this.lineWidth);\n    }\n\n    if (this.type !== 'high') {\n      line.attr('filter', 'url(#glow)');\n    }\n\n    if (!this.hideLegend) {\n      let legendItem = this.chart\n        .select('.legend')\n        .selectAll('.legend-item')\n        .data(this.data.series);\n\n      legendItem.exit().remove();\n\n      // update existing items\n      legendItem.select('.legend-label').html(d => {\n        switch (this.legendLabelFormatType) {\n          case 'number':\n            return this.legendLabelFormat(d.label);\n\n          case 'time':\n            const parsedTime = d3_isoParse(d.label);\n            return this.legendLabelFormat(parsedTime);\n\n          default:\n            return d.label;\n        }\n      });\n\n      // legend items on enter\n      let enterLegendItem = legendItem\n        .enter()\n        .append('li')\n        .attr('class', 'legend-item');\n\n      enterLegendItem\n        .append('span')\n        .attr('class', 'legend-key')\n        .style('background-color', d => this.colorRange(d.label));\n\n      enterLegendItem\n        .append('span')\n        .attr('class', 'legend-label')\n        .html(d => {\n          switch (this.legendLabelFormatType) {\n            case 'number':\n              return this.legendLabelFormat(d.label);\n\n            case 'time':\n              const parsedTime = d3_isoParse(d.label);\n              return this.legendLabelFormat(parsedTime);\n\n            default:\n              return d.label;\n          }\n        });\n\n      enterLegendItem\n        .on('mouseover', (data, index, nodes) => this.legendMouseOver(d3_event, data, index, nodes))\n        .on('mouseout', () => this.legendMouseOut())\n        .on('click', (data, index, nodes) => this.legendMouseClick(d3_event, data, index, nodes));\n    }\n\n    if (!this.hideTooltip) {\n      let tooltipItem = this.tooltip\n        .select('.tooltip-table')\n        .selectAll('tr')\n        .data(this.data.series);\n\n      tooltipItem.exit().remove();\n\n      // update existing items\n      tooltipItem.select('.tooltip-label pr-2').html(d => {\n        return this.tooltipHeadingFormat(d.label);\n      });\n\n      // items on enter\n      let entertooltipItem = tooltipItem\n        .enter()\n        .append('tr')\n        .attr('class', 'tooltip-item');\n\n      entertooltipItem\n        .append('td')\n        .style('color', d => this.colorRange(d.label))\n        .append('span')\n        .attr('class', 'pbds-tooltip-key');\n\n      entertooltipItem\n        .append('td')\n        .attr('class', 'tooltip-label pr-2')\n        .html(d => {\n          return this.tooltipLabelFormatType ? this.tooltipLabelFormat(d.label) : d.label;\n        });\n\n      entertooltipItem\n        .append('td')\n        .attr('class', 'tooltip-value text-right')\n        .html(d => '');\n    }\n\n    this.mouserect.raise();\n  };\n\n  legendMouseOver = (event, data, index, nodes) => {\n    this.chart\n      .selectAll('.legend-item')\n      .filter((d, i) => i !== index)\n      .classed('inactive', true);\n\n    this.chart\n      .selectAll('.line-group')\n      .filter((d, i) => i !== index)\n      .classed('inactive', true);\n\n    const line = this.chart.selectAll('.line-group').filter((d, i) => i === index);\n    line.classed('active', true);\n\n    if (this.linePoints) {\n      const circles = line.selectAll('circle');\n      circles.classed('active', true);\n    }\n\n    this.hovered.emit({ event, data });\n  };\n\n  legendMouseOut = () => {\n    this.chart.selectAll('.legend-item').classed('inactive', false);\n\n    this.chart\n      .selectAll('.line-group')\n      .classed('inactive', false)\n      .classed('active', false);\n\n    if (this.linePoints) {\n      const circles = this.chart.selectAll('circle');\n      circles.classed('active', false);\n    }\n  };\n\n  legendMouseClick = (event, data, index, nodes) => {\n    this.clicked.emit({ event, data });\n  };\n\n  mouserectMouseMove = (event, index, nodes) => {\n    const mouseXDate = this.xAxisScale.invert(d3_mouse(nodes[0])[0]); // return date at mouse x position\n    const leftIndex = d3_bisectLeft(this.data.dates, d3_isoFormat(mouseXDate)); // index of left closest date\n\n    // prevent error for 0 index\n    if (leftIndex === 0) return false;\n\n    const dateLower = new Date(this.data.dates[leftIndex - 1]);\n    const dateUpper = new Date(this.data.dates[leftIndex]);\n    const closestDate = +mouseXDate - +dateLower > +dateUpper - mouseXDate ? dateUpper : dateLower; // date mouse is closest to\n    const closestIndex = this.data.dates.indexOf(d3_isoFormat(closestDate)); // which index the mouse is closest to\n    // console.log(+mouseXDate, leftIndex, +dateLower, +dateUpper, +closestDate, closestIndex);\n\n    const circles = this.svg.selectAll('.line-group').selectAll('circle');\n    circles.filter((d, i) => i === closestIndex).classed('active', true);\n    circles.filter((d, i) => i !== closestIndex).classed('active', false);\n\n    this.tooltipLine\n      .attr('x1', this.xAxisScale(closestDate))\n      .attr('x2', this.xAxisScale(closestDate))\n      .classed('active', true);\n\n    // console.log(this.tooltipLine.node().getBoundingClientRect(), this._scroll.getScrollPosition());\n    this.tooltipShow(this.tooltipLine.node(), closestIndex);\n\n    this.mousedata = {\n      date: closestDate,\n      series: this.data.series.map(d => {\n        return {\n          label: d.label,\n          value: d.values[closestIndex]\n        };\n      })\n    };\n\n    this.tooltipHovered.emit({ event, data: this.mousedata });\n  };\n\n  mouserectMouseOut = (event, index, nodes) => {\n    this.svg.selectAll('circle').classed('active', false);\n    this.tooltipLine.classed('active', false);\n    this.tooltipHide();\n  };\n\n  mouserectMouseClick = () => {\n    this.tooltipClicked.emit({ event, data: this.mousedata });\n  };\n\n  private tooltipShow = (node, closestIndex) => {\n    let scroll = this._scroll.getScrollPosition();\n    let dimensions = node.getBoundingClientRect();\n\n    this.tooltip.select('.tooltip-header').html(d => {\n      const parsedTime = d3_isoParse(this.data.dates[closestIndex]);\n      return this.tooltipHeadingFormat(parsedTime);\n    });\n\n    this.tooltip.selectAll('.tooltip-value').html((d, i) => {\n      return this.tooltipValueFormatType\n        ? this.tooltipValueFormat(this.data.series[i].values[closestIndex])\n        : this.data.series[i].values[closestIndex];\n    });\n\n    let tooltipOffsetHeight = +this.tooltip.node().offsetHeight;\n\n    this.tooltip.style('top', `${dimensions.y + dimensions.height / 2 - tooltipOffsetHeight / 2 + scroll[1]}px`);\n    this.tooltip.style('left', `${dimensions.x + 8}px`);\n    this.tooltip.style('opacity', 1);\n  };\n\n  private tooltipHide = () => {\n    this.tooltip.style('opacity', 0);\n  };\n\n  private xAxisFormatter = item => {\n    const parseDate = d3_isoParse(item);\n    return this.xAxisFormat(parseDate);\n  };\n\n  private yAxisFormatter = item => {\n    return this.yAxisFormat(item);\n  };\n}\n","import { Component, OnInit, Input, ElementRef, HostBinding, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { select as d3_select, arc as d3_arc, interpolate as d3_interpolate, format as d3_format } from 'd3';\n\nimport { PbdsDatavizService } from './dataviz.service';\nimport { IPbdsDatavizGauge } from './dataviz.interfaces';\n\n@Component({\n  selector: 'pbds-dataviz-gauge',\n  template: `\n    <div\n      *ngIf=\"!hideLabel\"\n      class=\"gauge-details\"\n      [ngClass]=\"{ halfmoon: type === 'halfmoon', 'gauge-details-small': labelSmall }\"\n    >\n      <div class=\"gauge-number\">{{ label }}</div>\n      <div *ngIf=\"description\" class=\"gauge-description text-center\">{{ description }}</div>\n    </div>\n  `,\n  styles: []\n})\nexport class PbdsDatavizGaugeComponent implements OnInit, OnChanges {\n  @HostBinding('class.pbds-chart')\n  chartClass = true;\n\n  @HostBinding('class.pbds-chart-gauge')\n  pieClass = true;\n\n  @Input()\n  data: IPbdsDatavizGauge;\n\n  @Input()\n  width = 300;\n\n  @Input()\n  type: 'halfmoon' | 'horseshoe' | 'circle' = 'halfmoon';\n\n  @Input()\n  color = '#cf0989';\n\n  @Input()\n  hideLabel = false;\n\n  @Input()\n  labelFormatString = '';\n\n  @Input()\n  labelSmall = false;\n\n  @Input()\n  description;\n\n  @Input()\n  gaugeWidth = 20;\n\n  private chart;\n  private svg;\n  private gauge;\n  private labelTween; // TODO: rename this\n  public label;\n  private startAngle;\n  private endAngle;\n  private radius;\n  private backgroundColor; // TODO: should this be an input?\n  private arc;\n  private labelFormat;\n  private oldValue;\n  private height;\n  private rounded;\n\n  constructor(private _dataviz: PbdsDatavizService, private _element: ElementRef) {}\n\n  ngOnInit() {\n    this.height = this.width;\n    this.radius = Math.max(this.width, this.height) / 2;\n    this.labelFormat = d3_format(this.labelFormatString);\n    this.backgroundColor = '#F0F0F0';\n    this.label = this.labelFormat(this.data.value);\n\n    switch (this.type) {\n      case 'halfmoon':\n        this.startAngle = -90;\n        this.endAngle = 90;\n        this.rounded = true;\n        break;\n\n      case 'horseshoe':\n        this.startAngle = -140;\n        this.endAngle = 140;\n        this.rounded = true;\n        break;\n\n      case 'circle':\n        this.startAngle = 0;\n        this.endAngle = 360;\n        this.rounded = false;\n        break;\n    }\n\n    this.arc = d3_arc().cornerRadius(this.rounded ? this.gaugeWidth : 0);\n\n    this.chart = d3_select(this._element.nativeElement).attr('aria-hidden', 'true');\n\n    this.svg = this.chart\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('class', 'img-fluid') // to resize chart\n      .attr('preserveAspectRatio', 'xMinYMin meet')\n      .attr('viewBox', `-${this.width / 2} -${this.height / 2} ${this.width} ${this.height}`);\n\n    this.drawChart();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.data && !changes.data.firstChange) {\n      // console.log(changes.data.previousValue.value, changes.data.currentValue.value);\n\n      this.oldValue = changes.data.previousValue.value;\n      this.updateChart();\n    }\n  }\n\n  degreesToRadians = degree => {\n    return (degree * Math.PI) / 180;\n  };\n\n  calculateMinMax = () => {\n    const percentage = this.data.minvalue / (this.data.maxvalue - this.data.minvalue);\n\n    return percentage * (this.data.value - this.data.minvalue) + (this.data.value - this.data.minvalue);\n  };\n\n  calculateCurve = data => {\n    const start = this.degreesToRadians(this.startAngle);\n    const end = start + (data * (this.degreesToRadians(this.endAngle) - start)) / this.data.maxvalue;\n\n    return [\n      {\n        startAngle: start,\n        endAngle: end\n      }\n    ];\n  };\n\n  drawChart = () => {\n    this.gauge = this.svg.append('g').attr('class', 'gauge-group');\n\n    // background arc\n    const background = this.gauge\n      .append('path')\n      .data(this.calculateCurve(this.data.maxvalue))\n      .attr('class', 'gauge-background')\n      .attr('fill', this.backgroundColor)\n      .attr('d', d => {\n        return this.arc({\n          innerRadius: this.radius - this.gaugeWidth,\n          outerRadius: this.radius,\n          startAngle: d.startAngle,\n          endAngle: d.endAngle\n        });\n      });\n\n    // value arc\n    this.gauge\n      .append('path')\n      .data(this.calculateCurve(this.calculateMinMax()))\n      .attr('class', 'gauge-value')\n      .attr('fill', this.color)\n      .attr('d', d => {\n        return this.arc({\n          innerRadius: this.radius - this.gaugeWidth,\n          outerRadius: this.radius,\n          startAngle: d.startAngle,\n          endAngle: d.endAngle\n        });\n      });\n\n    switch (this.type) {\n      case 'horseshoe':\n        this.svg.attr('height', 230).attr('viewBox', `-${this.width / 2} -${this.height / 2} ${this.height} 230`);\n        break;\n      case 'halfmoon':\n        this.svg.attr('height', this.width / 2);\n        this.svg.attr('viewBox', `-${this.width / 2} -${this.width / 2} ${this.width} ${this.width / 2}`);\n        break;\n    }\n  };\n\n  updateChart = () => {\n    let group = this.svg.select('.gauge-group');\n\n    group\n      .select('.gauge-value')\n      .transition()\n      .duration(750)\n      .call(this.arcTween, this.calculateMinMax());\n\n    this.labelTween = this.chart.select('.gauge-number');\n\n    this.labelTween\n      .transition()\n      .duration(750)\n      .call(this.textTween, this.data.value);\n  };\n\n  arcTween = (transition, value) => {\n    let newAngle = this.calculateCurve(value);\n\n    transition.attrTween('d', d => {\n      let interpolate = d3_interpolate(d.endAngle, newAngle[0].endAngle);\n\n      return t => {\n        d.endAngle = interpolate(t);\n\n        return this.arc({\n          innerRadius: this.radius - this.gaugeWidth,\n          outerRadius: this.radius,\n          startAngle: d.startAngle,\n          endAngle: d.endAngle\n        });\n      };\n    });\n  };\n\n  textTween = (transition, value) => {\n    value = d3_format('.2f')(value); // TODO: check these .1f formats here, should they be inputs?\n    value = value.replace(/,/g, '.');\n\n    transition.tween('text', () => {\n      let interpolate = d3_interpolate(d3_format('.2f')(+this.oldValue), value);\n\n      return t => {\n        this.labelTween.text(d => {\n          let updatedNumber = this.labelFormat(interpolate(t));\n          this.label = updatedNumber;\n          return updatedNumber;\n        });\n      };\n    });\n  };\n}\n","import { Component, OnInit, Input, ElementRef, HostBinding } from '@angular/core';\n\nimport {\n  select as d3_select,\n  line as d3_line,\n  scaleLinear as d3_scaleLinear,\n  min as d3_min,\n  max as d3_max,\n  area as d3_area\n} from 'd3';\n\nimport { IPbdsDatavizSparkline } from './dataviz.interfaces';\n\n@Component({\n  selector: 'pbds-dataviz-sparkline',\n  template: ``,\n  styles: []\n})\nexport class PbdsDatavizSparklineComponent implements OnInit {\n  @HostBinding('class.pbds-chart')\n  chartClass = true;\n\n  @HostBinding('class.pbds-chart-sparkline')\n  sparklineClass = true;\n\n  @Input()\n  data: IPbdsDatavizSparkline;\n\n  @Input()\n  width = 160;\n\n  @Input()\n  height = 80;\n\n  @Input()\n  color = '#cf0989';\n\n  @Input()\n  colorNegative = '#3e53a4';\n\n  @Input()\n  type: 'line' | 'area' | 'bar' = 'line';\n\n  @Input()\n  strokeWidth = 2;\n\n  @Input()\n  minBuffer = 0;\n\n  @Input()\n  maxBuffer = 0;\n\n  private chart;\n  private svg;\n  private margin;\n\n  constructor(private _element: ElementRef) {}\n\n  ngOnInit() {\n    this.margin = { top: 1, right: 0, bottom: 1, left: 0 };\n\n    if (this.type === 'bar') {\n      this.margin = { top: 0, right: 0, bottom: 0, left: 0 };\n    }\n\n    let x = d3_scaleLinear().range([0, this.width - this.margin.left - this.margin.right]);\n    let y = d3_scaleLinear().range([this.height - this.margin.top - this.margin.bottom, 0]);\n\n    y.domain([+d3_min(this.data) - this.minBuffer, +d3_max(this.data) + this.maxBuffer]);\n    x.domain([0, this.data.length]);\n\n    let line = d3_line()\n      .x((d, i) => x(i))\n      .y((d: any) => y(d));\n\n    let area = d3_area()\n      .x((d, i) => x(i))\n      .y0(this.height)\n      .y1((d: any) => y(d));\n\n    this.chart = d3_select(this._element.nativeElement).attr('aria-hidden', 'true');\n\n    this.svg = this.chart\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('class', 'img-fluid')\n      .attr('preserveAspectRatio', 'xMinYMin meet')\n      .attr('viewBox', `-${this.margin.left} -${this.margin.top} ${this.width} ${this.height}`);\n\n    if (this.type === 'line' || this.type === 'area') {\n      this.svg\n        .append('path')\n        .datum(this.data)\n        .attr('class', 'sparkline')\n        .attr('fill', 'none')\n        .attr('stroke-width', this.strokeWidth)\n        .attr('stroke', this.color)\n        .attr('d', line);\n    }\n\n    if (this.type === 'area') {\n      this.svg\n        .append('path')\n        .datum(this.data)\n        .attr('class', 'sparkarea')\n        .attr('fill', this.color)\n        .attr('fill-opacity', 0.3)\n        .attr('d', area);\n    }\n\n    if (this.type === 'bar') {\n      const barWidth = (this.width - this.data.length) / this.data.length;\n\n      // handles negative values, see example https://www.essycode.com/posts/create-sparkline-charts-d3/\n      this.svg\n        .selectAll('.bar')\n        .data(this.data)\n        .enter()\n        .append('rect')\n        .attr('class', 'sparkbar')\n        .attr('x', (d, i) => x(i))\n        .attr('y', d => (d > 0 ? y(d) : y(0)))\n        .attr('width', barWidth)\n        .attr('height', d => Math.abs(y(d) - y(0)))\n        .attr('fill', d => (d > 0 ? this.color : this.colorNegative));\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PbdsDatavizPieComponent } from './dataviz-pie.component';\nimport { PbdsDatavizBarComponent } from './dataviz-bar.component';\nimport { PbdsDatavizLineComponent } from './dataviz-line.component';\nimport { PbdsDatavizGaugeComponent } from './dataviz-gauge.component';\nimport { PbdsDatavizSparklineComponent } from './dataviz-sparkline.component';\n\n@NgModule({\n  declarations: [\n    PbdsDatavizPieComponent,\n    PbdsDatavizBarComponent,\n    PbdsDatavizLineComponent,\n    PbdsDatavizGaugeComponent,\n    PbdsDatavizSparklineComponent\n  ],\n  imports: [CommonModule],\n  exports: [\n    PbdsDatavizPieComponent,\n    PbdsDatavizBarComponent,\n    PbdsDatavizLineComponent,\n    PbdsDatavizGaugeComponent,\n    PbdsDatavizSparklineComponent\n  ]\n})\nexport class PbdsDatavizModule {}\n","import { Directive, HostListener, HostBinding, AfterViewInit, ElementRef, Input } from '@angular/core';\nimport { ViewportScroller } from '@angular/common';\n\n@Directive({\n  selector: '[pbdsHeaderShadow]'\n})\nexport class PbdsHeaderShadowDirective implements AfterViewInit {\n  @HostBinding('class.pbds-header-shadow')\n  shadow: boolean;\n\n  @Input('pbdsHeaderShadow') item: null;\n\n  @HostListener('window:scroll', []) onWindowScroll() {\n    const offset = this._scroll.getScrollPosition();\n    this.shadow = offset[1] > 20;\n  }\n\n  constructor(private _scroll: ViewportScroller, private _element: ElementRef) {}\n\n  ngAfterViewInit() {\n    if (this.item) {\n      const div = document.body.querySelector(`${this.item}`);\n      div.addEventListener('scroll', event => {\n        this.shadow = event.srcElement.scrollTop > 20;\n      });\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PbdsHeaderShadowDirective } from './header-shadow.directive';\n\n@NgModule({\n  declarations: [PbdsHeaderShadowDirective],\n  imports: [CommonModule],\n  exports: [PbdsHeaderShadowDirective]\n})\nexport class PbdsHeaderShadowModule {}\n"]}