{"version":3,"sources":["ng://pb-design-system/lib/dataviz/dataviz.service.ts","ng://pb-design-system/lib/dataviz/dataviz-pie.component.ts","ng://pb-design-system/lib/dataviz/dataviz-bar.component.ts","ng://pb-design-system/lib/dataviz/dataviz-line.component.ts","ng://pb-design-system/lib/dataviz/dataviz-gauge.component.ts","ng://pb-design-system/lib/dataviz/dataviz-sparkline.component.ts","ng://pb-design-system/lib/dataviz/dataviz-stacked-bar.component.ts","ng://pb-design-system/lib/dataviz/dataviz-metric-indicator.component.ts","ng://pb-design-system/lib/dataviz/dataviz-metric-block.component.ts","ng://pb-design-system/lib/dataviz/dataviz.module.ts","ng://pb-design-system/lib/header-shadow/header-shadow.directive.ts","ng://pb-design-system/lib/header-shadow/header-shadow.module.ts"],"names":["PbdsDatavizService","_this","this","colors","mono","theme","getColors","createGradientDefs","svg","i","length","color","gradient","append","attr","replace","createGlowFilter","glow","feOffsets","dy","slope","y","merge","x","Injectable","args","providedIn","PbdsDatavizPieComponent","_dataviz","_element","chartClass","pieClass","width","type","monochrome","legendLabelFormatType","legendLabelFormatString","legendValueFormatString","tooltipLabelFormatType","tooltipLabelFormatString","tooltipValueFormatString","hovered","EventEmitter","clicked","currentData","updateChart","paths","selectAll","data","pie","exit","remove","each","d","outerRadius","transition","duration","attrTween","arcTween","enterPaths","enter","arc","colorRange","label","nodes","splice","style","legendItem","chart","select","html","parsedTime","d3_isoParse","legendLabelFormat","legendValueFormat","value","enterLegendItem","legendDescription","on","index","legendMouseOverFocus","pathMouseOver","d3_event","legendMouseOutBlur","pathMouseOut","emit","tooltipShow","node","tooltipMove","tooltipHide","pathClick","d3_interpolate","t","filter","classed","event","slices","slice","delay","arcZoom","tooltipSetPosition","percentage","endAngle","startAngle","Math","PI","tooltipLabelFormat","tooltip","tooltipValueFormat","coordinates","d3_mouse","prototype","ngOnInit","margin","top","right","bottom","left","height","innerRadius","min","anglePad","d3_format","d3_timeFormat","d3_scaleOrdinal","range","domain","map","c","d3_pie","padAngle","sort","d3_arc","padRadius","d3_select","nativeElement","legend","ngOnChanges","changes","firstChange","ngOnDestroy","Component","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","HostBinding","Input","Output","PbdsDatavizBarComponent","_scroll","barClass","singleSeries","xAxisFormatType","xAxisFormatString","yAxisFormatType","yAxisFormatString","yAxisTicks","yAxisMinBuffer","yAxisMaxBuffer","hideLegend","legendWidth","legendPosition","tooltipValueFormatType","marginTop","marginRight","marginBottom","marginLeft","threshold","average","group","groupEnter","xAxisScale","yAxisScale","d3_min","d3_max","rangeRound","nice","xAxis","call","xAxisCall","yAxis","yAxisCall","hideXGrid","xGrid","xGridCall","hideYGrid","yGrid","yGridCall","hideGrayBars","bandwidth","substr","barMouseOverFocus","barMouseOutBlur","barMouseClick","legendMouseOver","legendMouseOut","legendMouseClick","yThreshold","raise","yAverage","bar","barColor","_groups","dimensions","getBoundingClientRect","scroll","getScrollPosition","hideTooltipLabel","tooltipOffsetWidth","offsetWidth","tooltipOffsetHeight","offsetHeight","xAxisFormatter","item","xAxisFormat","parseDate","yAxisFormatter","yAxisFormat","hideXAxis","hideYAxis","hideXAxisZero","hideYAxisZero","hideXAxisDomain","hideYAxisDomain","hideTooltip","hideXAxisTicks","hideYAxisTicks","xAxisTickSize","xAxisTickSizeOuter","yAxisTickSize","yAxisTickSizeOuter","d3_scaleBand","align","paddingInner","paddingOuter","d3_axisBottom","tickSize","tickSizeOuter","tickFormat","d3_scaleLinear","d3_axisLeft","ticks","ViewportScroller","PbdsDatavizLineComponent","lineClass","area","xAxisTicks","tooltipHeadingFormatString","tooltipHovered","tooltipClicked","mouserect","d3_extent","dates","series","minVal","values","maxVal","d3line","d3area","line","lineWidth","linePoints","tooltipItem","tooltipHeadingFormat","entertooltipItem","mouserectMouseMove","mouseXDate","invert","leftIndex","d3_bisectLeft","d3_isoFormat","dateLower","Date","dateUpper","closestDate","closestIndex","indexOf","circles","tooltipLine","mousedata","date","mouserectMouseOut","mouserectMouseClick","position","mouserectDimensions","tooltipDimensions","dimensionCalculated","clientWidth","document","body","lineCurved","d3_line","curve","d3_curveCatmullRom","alpha","d3_area","y0","y1","d3_scaleTime","PbdsDatavizGaugeComponent","hideLabel","labelFormatString","labelSmall","gaugeWidth","degreesToRadians","degree","calculateMinMax","minvalue","maxvalue","calculateCurve","start","drawChart","gauge","backgroundColor","radius","labelTween","textTween","newAngle","interpolate","tween","oldValue","text","updatedNumber","labelFormat","max","rounded","cornerRadius","previousValue","PbdsDatavizSparklineComponent","sparklineClass","colorNegative","strokeWidth","datum","barWidth","abs","PbdsDatavizStackedBarComponent","stackedBarClass","tooltipHeadingFormatType","tooltipHeadingValueFormatType","tooltipHeadingValueFormatString","dataKeys","Object","keys","dataStack","d3_stack","order","d3_stackOrderNone","key","yAxisMax","grayBars","join","update","bars","mouseBars","yPosition","xPosition","total","e","tooltipHeadingValueFormat","PbdsDatavizMetricIndicatorComponent","class","indicator","inverse","defineProperty","PbdsDatavizMetricBlockComponent","heading","unit","description","centered","hideValueMargin","isPercentUnit","isUnit","indicatorRef","ContentChild","PbdsDatavizModule","NgModule","declarations","imports","CommonModule","exports","PbdsHeaderShadowDirective","onWindowScroll","offset","shadow","Directive","HostListener","PbdsHeaderShadowModule"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PbdsDatavizService {\n  private colors = {\n    mono: ['#00436e', '#005a93', '#0072b8', '#66aad4', '#cce3f1', '#e5f1f8'],\n    theme: [\n      '#3e53a4',\n      '#cf0989',\n      '#009bdf',\n      '#ee6b0b',\n      '#edb700',\n      '#a03f9b',\n      '#00b140',\n      '#66c3ec',\n      '#c0c0c0',\n      '#f5a66d',\n      '#8b98c8',\n      '#aad88f'\n    ]\n  };\n\n  constructor() {}\n\n  getColors = mono => {\n    return mono ? this.colors.mono : this.colors.theme;\n  };\n\n  createGradientDefs = (svg, mono) => {\n    const colors = mono ? [this.colors.mono[2]] : this.colors.theme;\n\n    for (let i = 0; i < colors.length; i++) {\n      const color = mono ? this.colors.mono[2] : this.colors.theme[i];\n\n      const gradient = svg\n        .append('defs')\n        .append('linearGradient')\n        .attr('id', `gradient-${color.replace('#', '')}`)\n        .attr('x1', '0')\n        .attr('y1', '0')\n        .attr('x2', '0')\n        .attr('y2', '1')\n        .attr('spreadMethod', 'pad');\n\n      gradient\n        .append('stop')\n        .attr('offset', '0%')\n        .attr('stop-color', color)\n        .attr('stop-opacity', '1'); // top of bar will be full opacity\n\n      gradient\n        .append('stop')\n        .attr('offset', '100%')\n        .attr('stop-color', color)\n        .attr('stop-opacity', '.3'); // bottom of bar will be .3 opacity\n    }\n\n    return colors;\n  };\n\n  createGlowFilter = svg => {\n    // add a new definition\n    const glow = svg\n      .append('defs')\n      .append('filter')\n      .attr('id', 'glow')\n      .attr('width', '200%')\n      .attr('height', '200%');\n\n    glow\n      .append('feGaussianBlur')\n      .attr('in', 'SourceGraphic')\n      .attr('stdDeviation', 4);\n\n    // build two dropshadows with different intensities\n    const feOffsets = [\n      {\n        dy: 2,\n        slope: 0.2\n      },\n      {\n        dy: 5,\n        slope: 0.05\n      }\n    ];\n\n    for (let i = 0; i < feOffsets.length; i++) {\n      glow\n        .append('feOffset')\n        .attr('result', 'offsetBlur' + i)\n        .attr('dx', 0)\n        .attr('dy', feOffsets[i].dy);\n    }\n\n    for (let y = 0; y < feOffsets.length; y++) {\n      glow\n        .append('feComponentTransfer')\n        .attr('result', 'coloredBlur' + y)\n        .attr('in', 'offsetBlur' + y)\n        .append('feFuncA')\n        .attr('type', 'linear')\n        .attr('slope', feOffsets[y].slope);\n    }\n\n    let merge = glow.append('feMerge');\n\n    merge.append('feMergeNode').attr('in', 'SourceGraphic');\n\n    for (let x = 0; x < feOffsets.length; x++) {\n      merge.append('feMergeNode').attr('in', 'coloredBlur' + x);\n    }\n  };\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  ElementRef,\n  HostBinding,\n  OnChanges,\n  SimpleChanges,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnDestroy\n} from '@angular/core';\n\nimport {\n  select as d3_select,\n  scaleOrdinal as d3_scaleOrdinal,\n  pie as d3_pie,\n  arc as d3_arc,\n  interpolate as d3_interpolate,\n  mouse as d3_mouse,\n  format as d3_format,\n  event as d3_event,\n  timeFormat as d3_timeFormat,\n  isoParse as d3_isoParse\n} from 'd3';\n\nimport { PbdsDatavizService } from './dataviz.service';\nimport { PbdsDatavizPie } from './dataviz.interfaces';\n\n@Component({\n  selector: 'pbds-dataviz-pie',\n  template: ``,\n  styleUrls: [],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PbdsDatavizPieComponent implements OnInit, OnChanges, OnDestroy {\n  @HostBinding('class.pbds-chart')\n  chartClass = true;\n\n  @HostBinding('class.pbds-chart-pie')\n  pieClass = true;\n\n  @Input()\n  data: Array<PbdsDatavizPie>;\n\n  @Input()\n  width = 300;\n\n  @Input()\n  type: 'pie' | 'donut' = 'pie';\n\n  @Input()\n  monochrome = false;\n\n  @Input()\n  legendLabelFormatType: 'time' = null;\n\n  @Input()\n  legendLabelFormatString = '';\n\n  @Input()\n  legendValueFormatString = '';\n\n  @Input()\n  tooltipLabelFormatType: 'time' = null;\n\n  @Input()\n  tooltipLabelFormatString = '';\n\n  @Input()\n  tooltipValueFormatString = '';\n\n  @Output()\n  hovered: EventEmitter<object> = new EventEmitter<object>();\n\n  @Output()\n  clicked: EventEmitter<object> = new EventEmitter<object>();\n\n  private currentData = [];\n  private height;\n  private chart;\n  private margin;\n  private colors;\n  private colorRange;\n  private arc;\n  private arcZoom;\n  private svg;\n  private pie;\n  private legend;\n  private legendLabelFormat;\n  private legendValueFormat;\n  private innerRadius;\n  private anglePad;\n  private outerRadius;\n  private tooltip;\n  private tooltipLabelFormat;\n  private tooltipValueFormat;\n\n  constructor(private _dataviz: PbdsDatavizService, private _element: ElementRef) {}\n\n  ngOnInit() {\n    this.margin = { top: 10, right: 10, bottom: 10, left: 10 };\n    this.width = this.width - this.margin.left - this.margin.right;\n    this.height = this.width - this.margin.top - this.margin.bottom;\n    this.colors = this._dataviz.getColors(this.monochrome);\n    this.innerRadius = Math.min(this.width, this.height) / 2.5;\n    this.outerRadius = Math.min(this.width, this.height) / 2;\n    this.arcZoom = 10;\n    this.anglePad = 0.02;\n    this.legendValueFormat = d3_format(this.legendValueFormatString);\n    this.tooltipValueFormat = d3_format(this.tooltipValueFormatString);\n\n    switch (this.legendLabelFormatType) {\n      case 'time':\n        this.legendLabelFormat = d3_timeFormat(this.legendLabelFormatString);\n        break;\n      default:\n        this.legendLabelFormat = null;\n        break;\n    }\n\n    switch (this.tooltipLabelFormatType) {\n      case 'time':\n        this.tooltipLabelFormat = d3_timeFormat(this.tooltipLabelFormatString);\n        break;\n      default:\n        this.tooltipLabelFormat = null;\n        break;\n    }\n\n    this.colorRange = d3_scaleOrdinal()\n      .range(this.colors)\n      .domain(this.data.map(c => c.label));\n\n    if (this.type === 'pie') {\n      this.innerRadius = 0;\n      this.anglePad = 0;\n    }\n\n    this.pie = d3_pie()\n      .padAngle(this.anglePad)\n      .value((d: any) => d.value)\n      .sort(null);\n\n    this.arc = d3_arc()\n      .padRadius(this.outerRadius)\n      .innerRadius(this.innerRadius);\n\n    this.chart = d3_select(this._element.nativeElement).attr('aria-hidden', 'true');\n\n    this.svg = this.chart\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('class', 'img-fluid')\n      .attr('preserveAspectRatio', 'xMinYMin meet')\n      .attr(\n        'viewBox',\n        `-${this.width / 2 + this.margin.left} -${this.height / 2 + this.margin.top} ${this.width +\n          this.margin.left +\n          this.margin.right} ${this.height + this.margin.top + this.margin.bottom}`\n      );\n\n    this.legend = this.chart.append('ul').attr('class', 'legend legend-right');\n\n    this.tooltip = this.chart\n      .append('div')\n      .style('opacity', 0)\n      .attr('class', 'pbds-tooltip')\n      .attr('aria-hidden', 'true');\n\n    this.updateChart();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.data && !changes.data.firstChange) {\n      this.updateChart();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.tooltip) this.tooltip.remove();\n  }\n\n  updateChart = () => {\n    let paths = this.svg.selectAll('path').data(this.pie(this.data));\n\n    paths.exit().remove();\n\n    //update existing items\n    paths\n      .each((d: any) => (d.outerRadius = this.outerRadius))\n      .transition()\n      .duration(500)\n      .attrTween('d', this.arcTween);\n\n    // paths on enter\n    let enterPaths = paths\n      .enter()\n      .append('path')\n      .each((d: any) => (d.outerRadius = this.outerRadius))\n      .attr('d', this.arc)\n      .attr('fill', (d: any) => this.colorRange(d.data.label))\n      .attr('class', 'slice')\n      .each((d, i, nodes) => {\n        this.currentData.splice(i, 1, d);\n      });\n\n    if (this.type === 'pie') {\n      enterPaths\n        .style('stroke', '#fff')\n        .style('stroke-width', 2)\n        .style('stroke-alignment', 'inner');\n    }\n\n    let legendItem = this.chart\n      .select('.legend')\n      .selectAll('.legend-item')\n      .data(this.data);\n\n    legendItem.exit().remove();\n\n    // update existing items\n    legendItem.select('.legend-label').html((d: any) => {\n      switch (this.legendLabelFormatType) {\n        case 'time':\n          const parsedTime = d3_isoParse(d.label);\n          return this.legendLabelFormat(parsedTime);\n\n        default:\n          return d.label;\n      }\n    });\n\n    legendItem.select('.legend-value').html((d: any) => this.legendValueFormat(d.value));\n\n    // legend items on enter\n    let enterLegendItem = legendItem\n      .enter()\n      .append('li')\n      .attr('tabindex', 0)\n      .attr('class', 'legend-item');\n\n    enterLegendItem\n      .append('span')\n      .attr('class', 'legend-key')\n      .style('background-color', (d: any) => this.colorRange(d.label));\n\n    const legendDescription = enterLegendItem.append('span').attr('class', 'legend-description');\n\n    legendDescription\n      .append('span')\n      .attr('class', 'legend-label')\n      .html((d: any) => {\n        switch (this.legendLabelFormatType) {\n          case 'time':\n            const parsedTime = d3_isoParse(d.label);\n            return this.legendLabelFormat(parsedTime);\n\n          default:\n            return d.label;\n        }\n      });\n\n    legendDescription\n      .append('span')\n      .attr('class', 'legend-value')\n      .html((d: any) => this.legendValueFormat(d.value));\n\n    enterLegendItem\n      .on('mouseover focus', (data, index, nodes) => {\n        this.legendMouseOverFocus(data, index, nodes);\n        this.pathMouseOver(d3_event, data, index, nodes);\n      })\n      .on('mouseout blur', (data, index, nodes) => {\n        this.legendMouseOutBlur(data, index, nodes);\n        this.pathMouseOut(data, index, nodes);\n      })\n      .on('click', (data, index, nodes) => {\n        this.clicked.emit(data);\n      });\n\n    enterPaths\n      .on('mouseover', (data, index, nodes) => {\n        this.pathMouseOver(d3_event, data, index, nodes);\n        this.tooltipShow(this.chart.node(), data);\n      })\n      .on('mousemove', (data, index, nodes) => {\n        this.tooltipMove(this.chart.node());\n      })\n      .on('mouseout', (data, index, nodes) => {\n        this.pathMouseOut(data, index, nodes);\n        this.tooltipHide();\n      })\n      .on('click', (data, index, nodes) => {\n        this.pathClick(d3_event, data, index, nodes);\n      });\n  };\n\n  private arcTween = (data, index, nodes) => {\n    // console.log('ARGS: ', data, index, nodes);\n    const i = d3_interpolate(this.currentData[index], data);\n\n    this.currentData[index] = i(1);\n    return t => this.arc(i(t));\n  };\n\n  private legendMouseOverFocus = (data, index, nodes) => {\n    this.chart\n      .selectAll('.legend-item')\n      .filter((d, i) => i !== index)\n      .classed('inactive', true);\n  };\n\n  private legendMouseOutBlur = (data, index, nodes) => {\n    this.chart.selectAll('.legend-item').classed('inactive', false);\n  };\n\n  private pathMouseOver = (event, data, index, nodes) => {\n    let slices = this.chart.selectAll('.slice');\n    let slice = slices.filter((d, i) => i === index);\n\n    this.chart\n      .selectAll('.legend-item')\n      .filter((d, i) => i !== index)\n      .classed('inactive', true);\n\n    slices.filter((d, i) => i !== index).classed('inactive', true);\n\n    slice\n      .transition()\n      .duration(300)\n      .delay(0)\n      .attrTween('d', (d: any) => {\n        let i = d3_interpolate(d.outerRadius, this.outerRadius + this.arcZoom);\n        return t => {\n          d.outerRadius = i(t);\n          return this.arc(d);\n        };\n      });\n\n    this.hovered.emit({\n      event: event,\n      data: data.data ? data.data : data // legend hover data is different than slice hover data\n    });\n  };\n\n  private pathMouseOut = (data, index, value) => {\n    let slices = this.chart.selectAll('.slice');\n    let slice = slices.filter((d, i) => i === index);\n\n    this.chart\n      .selectAll('.legend-item')\n      .filter((d, i) => i !== index)\n      .classed('inactive', false);\n\n    slices.classed('inactive', false);\n\n    slice\n      .transition()\n      .duration(300)\n      .delay(0)\n      .attrTween('d', (d: any) => {\n        let i = d3_interpolate(d.outerRadius, this.outerRadius);\n        return t => {\n          d.outerRadius = i(t);\n          return this.arc(d);\n        };\n      });\n  };\n\n  private pathClick = (event, data, index, nodes) => {\n    this.clicked.emit({\n      event: event,\n      data: data.data\n    });\n  };\n\n  private tooltipShow = (node, data) => {\n    this.tooltipSetPosition(node);\n\n    let percentage = (data.endAngle - data.startAngle) / (2 * Math.PI);\n    let label;\n\n    switch (this.tooltipLabelFormatType) {\n      case 'time':\n        const parsedTime = d3_isoParse(data.data.label);\n        label = this.tooltipLabelFormat(parsedTime);\n        break;\n\n      default:\n        label = data.data.label;\n    }\n\n    this.tooltip.html(\n      `\n        <div class=\"tooltip-label\">${label}</div>\n        <div class=\"tooltip-value\">${this.tooltipValueFormat(percentage)}</div>\n      `\n    );\n\n    this.tooltip.style('opacity', 1);\n  };\n\n  private tooltipMove = node => {\n    this.tooltipSetPosition(node);\n  };\n\n  private tooltipHide = () => {\n    this.tooltip.style('opacity', 0);\n  };\n\n  private tooltipSetPosition = node => {\n    let coordinates = d3_mouse(node);\n\n    this.tooltip.style('left', `${coordinates[0] + 16}px`);\n    this.tooltip.style('top', `${coordinates[1] + 16}px`);\n  };\n}\n","import {\n  Component,\n  OnInit,\n  OnChanges,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  HostBinding,\n  OnDestroy,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { ViewportScroller } from '@angular/common';\n\nimport {\n  select as d3_select,\n  isoParse as d3_isoParse,\n  timeFormat as d3_timeFormat,\n  format as d3_format,\n  scaleOrdinal as d3_scaleOrdinal,\n  scaleBand as d3_scaleBand,\n  scaleLinear as d3_scaleLinear,\n  min as d3_min,\n  max as d3_max,\n  axisBottom as d3_axisBottom,\n  axisLeft as d3_axisLeft,\n  event as d3_event\n} from 'd3';\n\nimport { PbdsDatavizService } from './dataviz.service';\nimport { PbdsDatavizBar } from './dataviz.interfaces';\n\n@Component({\n  selector: 'pbds-dataviz-bar',\n  template: ``,\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PbdsDatavizBarComponent implements OnInit, OnDestroy, OnChanges {\n  @HostBinding('class.pbds-chart')\n  chartClass = true;\n\n  @HostBinding('class.pbds-chart-bar')\n  barClass = true;\n\n  @Input()\n  data: PbdsDatavizBar[];\n\n  @Input()\n  width = 306;\n\n  @Input()\n  height = 400;\n\n  @Input()\n  type: 'low' | 'medium' | 'high' | 'debug' = 'medium'; // debug to show all chart options\n\n  @Input()\n  singleSeries = false;\n\n  @Input()\n  xAxisFormatType: 'number' | 'time' = null;\n\n  @Input()\n  xAxisFormatString = '';\n\n  @Input()\n  yAxisFormatType: 'number' | 'time' = null;\n\n  @Input()\n  yAxisFormatString = '';\n\n  @Input()\n  yAxisTicks = 5;\n\n  @Input()\n  yAxisMinBuffer = 0.01;\n\n  @Input()\n  yAxisMaxBuffer = 0.01;\n\n  @Input()\n  hideLegend = false;\n\n  @Input()\n  legendWidth = 105 + 28; // hardcoded legend width + left margin, do not document until feedback\n\n  @Input()\n  legendPosition: 'right' | 'bottom' = 'right';\n\n  @Input()\n  legendLabelFormatType: 'number' | 'time' = null;\n\n  @Input()\n  legendLabelFormatString = '';\n\n  @Input()\n  tooltipLabelFormatType: 'number' | 'time' = null;\n\n  @Input()\n  tooltipLabelFormatString = '';\n\n  @Input()\n  tooltipValueFormatType: 'number' | 'time' = null;\n\n  @Input()\n  tooltipValueFormatString = '';\n\n  @Input()\n  marginTop = 10; // hardcoded on purpose, do not document until feedback\n\n  @Input()\n  marginRight = 0; // hardcoded on purpose, do not document until feedback\n\n  @Input()\n  marginBottom = 30; // hardcoded on purpose, do not document until feedback\n\n  @Input()\n  marginLeft = 55; // hardcoded on purpose, do not document until feedback\n\n  @Input()\n  threshold = null;\n\n  @Input()\n  average = null;\n\n  @Output()\n  hovered: EventEmitter<object> = new EventEmitter<object>();\n\n  @Output()\n  clicked: EventEmitter<object> = new EventEmitter<object>();\n\n  private chart;\n  private svg;\n  private margin;\n  private colorRange;\n  private hideGrayBars: boolean;\n  private yThreshold;\n  private yAverage;\n  private xAxisScale;\n  private xAxisCall;\n  private xAxis;\n  private xAxisFormat;\n  private yAxisScale;\n  private yAxisCall;\n  private yAxis;\n  private yAxisFormat;\n  private xGrid;\n  private xGridCall;\n  private yGrid;\n  private yGridCall;\n  private xAxisTickSize: number;\n  private xAxisTickSizeOuter: number;\n  private yAxisTickSize: number;\n  private yAxisTickSizeOuter: number;\n  private hideXAxis: boolean;\n  private hideYAxis: boolean;\n  private hideXAxisDomain: boolean;\n  private hideYAxisDomain: boolean;\n  private hideXAxisZero: boolean;\n  private hideYAxisZero: boolean;\n  private hideXGrid: boolean;\n  private hideYGrid: boolean;\n  private hideXAxisTicks: boolean;\n  private hideYAxisTicks: boolean;\n  private legendLabelFormat;\n  private tooltip;\n  private hideTooltip: boolean;\n  private hideTooltipLabel: boolean;\n  private tooltipValueFormat;\n  private tooltipLabelFormat;\n\n  constructor(private _dataviz: PbdsDatavizService, private _element: ElementRef, private _scroll: ViewportScroller) {}\n\n  ngOnInit() {\n    this.margin = {\n      top: +this.marginTop,\n      right: +this.marginRight,\n      bottom: +this.marginBottom,\n      left: +this.marginLeft\n    };\n\n    switch (this.xAxisFormatType) {\n      case 'number':\n        this.xAxisFormat = d3_format(this.xAxisFormatString);\n        break;\n      case 'time':\n        this.xAxisFormat = d3_timeFormat(this.xAxisFormatString);\n        break;\n    }\n\n    switch (this.yAxisFormatType) {\n      case 'number':\n        this.yAxisFormat = d3_format(this.yAxisFormatString);\n        break;\n      case 'time':\n        this.yAxisFormat = d3_timeFormat(this.yAxisFormatString);\n        break;\n    }\n\n    switch (this.legendLabelFormatType) {\n      case 'number':\n        this.legendLabelFormat = d3_format(this.legendLabelFormatString);\n        break;\n      case 'time':\n        this.legendLabelFormat = d3_timeFormat(this.legendLabelFormatString);\n        break;\n      default:\n        this.legendLabelFormat = null;\n        break;\n    }\n\n    switch (this.tooltipLabelFormatType) {\n      case 'number':\n        this.tooltipLabelFormat = d3_format(this.tooltipLabelFormatString);\n        break;\n      case 'time':\n        this.tooltipLabelFormat = d3_timeFormat(this.tooltipLabelFormatString);\n        break;\n      default:\n        this.tooltipLabelFormat = null;\n        break;\n    }\n\n    switch (this.tooltipValueFormatType) {\n      case 'number':\n        this.tooltipValueFormat = d3_format(this.tooltipValueFormatString);\n        break;\n      case 'time':\n        this.tooltipValueFormat = d3_timeFormat(this.tooltipValueFormatString);\n        break;\n      default:\n        this.tooltipValueFormat = null;\n    }\n\n    // defaults for all chart types\n    this.hideGrayBars = false;\n    this.hideXAxis = false;\n    this.hideYAxis = false;\n    this.hideXAxisZero = false;\n    this.hideYAxisZero = false;\n    this.hideXGrid = false;\n    this.hideYGrid = false;\n    this.hideXAxisDomain = false;\n    this.hideYAxisDomain = false;\n    this.hideTooltip = false;\n    this.hideXAxisTicks = false;\n    this.hideYAxisTicks = false;\n    this.xAxisTickSize = 8;\n    this.xAxisTickSizeOuter = 0;\n    this.yAxisTickSize = 8;\n    this.yAxisTickSizeOuter = 0;\n    this.hideTooltipLabel = false;\n\n    if (this.type !== 'debug') {\n      // set type defaults\n      switch (this.type) {\n        case 'low':\n          this.hideGrayBars = true;\n          this.hideXAxis = !this.hideLegend;\n          this.hideXAxisTicks = true;\n          this.hideXGrid = true;\n          this.hideYAxisDomain = false;\n          this.hideYAxisTicks = true;\n          this.legendPosition = 'bottom';\n          this.hideTooltipLabel = true;\n          break;\n\n        case 'medium':\n          this.hideXAxisDomain = true;\n          this.hideXAxis = !this.hideLegend;\n          this.hideXGrid = true;\n          this.hideXAxisTicks = true;\n          this.hideYAxisDomain = true;\n          this.hideYAxisTicks = true;\n          this.hideYGrid = true;\n          this.hideTooltipLabel = true;\n          break;\n\n        case 'high':\n          this.hideXAxis = true;\n          this.hideXAxisDomain = true;\n          this.hideXGrid = true;\n          this.hideYAxisDomain = true;\n          this.hideYAxisTicks = true;\n          this.hideYGrid = true;\n          this.hideLegend = true;\n          this.hideTooltipLabel = false;\n          break;\n      }\n\n      // single series overrides\n      if (this.singleSeries) {\n        this.hideLegend = true;\n        this.hideXAxis = true;\n        this.hideXGrid = true;\n        this.hideTooltipLabel = false;\n      }\n    }\n\n    // adjust margin if xAxis hidden\n    if (this.hideXAxis) this.margin.bottom = 10; // need small margin for yAxis with 0 tick label\n\n    if (!this.hideLegend && this.legendPosition === 'right') {\n      this.width = +this.width - +this.legendWidth;\n    }\n\n    // create the chart\n    this.chart = d3_select(this._element.nativeElement).attr('aria-hidden', 'true');\n\n    // create chart svg\n    this.svg = this.chart\n      .append('svg')\n      .attr('width', +this.width)\n      .attr('height', +this.height + this.margin.top + this.margin.bottom)\n      .attr('class', 'img-fluid')\n      .attr('preserveAspectRatio', 'xMinYMin meet')\n      .attr(\n        'viewBox',\n        `-${this.margin.left} -${this.margin.top} ${+this.width} ${+this.height + this.margin.top + this.margin.bottom}`\n      );\n\n    // build color ranges\n    this.colorRange = d3_scaleOrdinal().range(this._dataviz.createGradientDefs(this.svg, this.singleSeries));\n\n    // X AXIS\n    this.xAxisScale = d3_scaleBand()\n      .domain(this.data.map(d => d.label))\n      .rangeRound([0, this.width - this.margin.left])\n      .align(0);\n\n    // add padding to the scale for gray bars\n    !this.hideGrayBars\n      ? this.xAxisScale.paddingInner(0.1).paddingOuter(0)\n      : this.xAxisScale.paddingInner(0).paddingOuter(0);\n\n    this.xAxisCall = d3_axisBottom(this.xAxisScale)\n      .tickSize(this.xAxisTickSize)\n      .tickSizeOuter(this.xAxisTickSizeOuter)\n      .tickFormat(this.xAxisFormatter);\n\n    this.xAxis = this.svg\n      .append('g')\n      .attr('class', 'axis axis-x')\n      .attr('transform', `translate(0, ${this.height})`)\n      .classed('axis-hidden', this.hideXAxis)\n      .classed('axis-zero-hidden', this.hideXAxisZero)\n      .classed('axis-domain-hidden', this.hideXAxisDomain)\n      .classed('axis-ticks-hidden', this.hideXAxisTicks)\n      .call(this.xAxisCall);\n\n    // X GRIDLINES\n    if (!this.hideXGrid) {\n      this.xGridCall = d3_axisBottom(this.xAxisScale).tickSize(-this.height);\n\n      this.xGrid = this.svg\n        .append('g')\n        .attr('class', 'grid grid-x')\n        .classed('grid-zero-hidden', this.hideXAxisZero)\n        .attr('transform', `translate(0, ${this.height})`)\n        .call(this.xGridCall);\n    }\n\n    // Y AXIS\n    this.yAxisScale = d3_scaleLinear()\n      .domain([\n        d3_min(this.data, d => d.value - d.value * +this.yAxisMinBuffer),\n        d3_max(this.data, d => d.value + d.value * +this.yAxisMaxBuffer)\n      ])\n      .nice()\n      .rangeRound([this.height, 0]);\n\n    this.yAxisCall = d3_axisLeft(this.yAxisScale)\n      .ticks(this.yAxisTicks)\n      .tickSize(this.yAxisTickSize)\n      .tickSizeOuter(this.yAxisTickSizeOuter)\n      .tickFormat(this.yAxisFormatter);\n\n    this.yAxis = this.svg\n      .append('g')\n      .attr('class', 'axis axis-y')\n      .classed('axis-hidden', this.hideYAxis)\n      .classed('axis-zero-hidden', this.hideYAxisZero)\n      .classed('axis-domain-hidden', this.hideYAxisDomain)\n      .classed('axis-ticks-hidden', this.hideYAxisTicks)\n      .call(this.yAxisCall);\n\n    // Y GRIDLINES\n    if (!this.hideYGrid) {\n      this.yGridCall = d3_axisLeft(this.yAxisScale)\n        .ticks(this.yAxisTicks)\n        .tickSize(-this.width + this.margin.left + this.margin.right);\n\n      this.yGrid = this.svg\n        .append('g')\n        .attr('class', 'grid grid-y')\n        .classed('grid-zero-hidden', this.hideYAxisZero)\n        .attr('transform', `translate(0, 0)`)\n        .call(this.yGridCall);\n    }\n\n    // Y THRESHOLD\n    if (this.threshold) {\n      this.yThreshold = this.svg\n        .append('line')\n        .attr('class', 'threshold')\n        .attr('x2', +this.width)\n        .attr('transform', `translate(0,  ${this.yAxisScale(+this.threshold)})`);\n    }\n\n    // Y AVERAGE\n    if (this.average) {\n      this.yAverage = this.svg\n        .append('line')\n        .attr('class', 'average')\n        .attr('x2', +this.width)\n        .attr('transform', `translate(0,  ${this.yAxisScale(+this.average)})`);\n    }\n\n    // TOOLTIP\n    if (!this.hideTooltip) {\n      this.tooltip = d3_select('body')\n        .append('div')\n        .attr('class', 'pbds-tooltip south')\n        .style('opacity', 0)\n        .attr('aria-hidden', 'true'); // hide tooltip for accessibility\n    }\n\n    // add legend classes\n    if (!this.hideLegend) {\n      this.chart.classed('pbds-chart-legend-bottom', this.legendPosition === 'bottom' ? true : false);\n      this.chart.append('ul').attr('class', `legend legend-${this.legendPosition}`);\n    }\n\n    this.updateChart();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.data && !changes.data.firstChange) {\n      this.updateChart();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.tooltip) this.tooltip.remove();\n  }\n\n  updateChart = () => {\n    // update the xScale\n    this.xAxisScale.domain(this.data.map(d => d.label));\n\n    // update the yScale\n    this.yAxisScale\n      .domain([\n        d3_min(this.data, d => d.value - d.value * +this.yAxisMinBuffer),\n        d3_max(this.data, d => d.value + d.value * +this.yAxisMaxBuffer)\n      ])\n      .rangeRound([this.height, 0])\n      .nice();\n\n    this.xAxis\n      .transition()\n      .duration(1000)\n      .call(this.xAxisCall);\n\n    this.yAxis\n      .transition()\n      .duration(1000)\n      .call(this.yAxisCall);\n\n    // update the grids\n    if (!this.hideXGrid) {\n      this.xGrid\n        .transition()\n        .duration(1000)\n        .call(this.xGridCall);\n    }\n\n    if (!this.hideYGrid) {\n      this.yGrid\n        .transition()\n        .duration(1000)\n        .call(this.yGridCall);\n    }\n\n    if (!this.hideGrayBars) {\n      // rebind data to groups\n      let group = this.svg.selectAll('.bar-group').data(this.data);\n\n      // remove bars\n      group.exit().remove();\n\n      // update gray bars\n      group\n        .select('.gray-bar')\n        .transition()\n        .duration(1000)\n        .attr('x', d => this.xAxisScale(d.label))\n        .attr('width', this.xAxisScale.bandwidth());\n\n      // update the existing bars\n      group\n        .select('.bar')\n        .transition()\n        .duration(1000)\n        .attr('x', d => this.xAxisScale(d.label) + this.xAxisScale.bandwidth() / 4)\n        .attr('width', this.xAxisScale.bandwidth() / 2)\n        .attr('height', d => this.height - this.yAxisScale(d.value))\n        .attr('y', d => this.yAxisScale(d.value));\n\n      // add group on enter\n      const groupEnter = group\n        .enter()\n        .append('g')\n        .attr('class', 'bar-group');\n\n      // add gray bars on enter\n      groupEnter\n        .append('rect')\n        .attr('class', 'gray-bar')\n        .attr('rx', 0)\n        .attr('height', 0)\n        .attr('x', d => this.xAxisScale(d.label))\n        .attr('width', this.xAxisScale.bandwidth())\n        .transition()\n        // .delay(1000)\n        .attr('height', this.height)\n        .attr('width', this.xAxisScale.bandwidth());\n\n      // add bars on enter\n      groupEnter\n        .append('rect')\n        .attr('class', 'bar')\n        .attr('rx', 2)\n        .attr('fill', d => `url(#gradient-${this.colorRange(d.label).substr(1)})`) // removes hash to prevent safari bug;\n        .attr('x', d => this.xAxisScale(d.label) + this.xAxisScale.bandwidth() / 4)\n        .attr('width', this.xAxisScale.bandwidth() / 2)\n        .attr('y', this.height)\n        .attr('height', 0)\n        .transition()\n        .duration(1000)\n        // .delay(1000)\n        .attr('y', d => this.yAxisScale(d.value))\n        .attr('height', d => this.height - this.yAxisScale(d.value))\n        .attr('data-color', d => this.colorRange(d.label));\n\n      groupEnter\n        .select('.bar')\n        .on('mouseover focus', (data, index, nodes) => this.barMouseOverFocus(d3_event, data, index, nodes))\n        .on('mouseout blur', (data, index, nodes) => this.barMouseOutBlur())\n        .on('click', (data, index, nodes) => this.barMouseClick(d3_event, data, index, nodes));\n    } else {\n      // rebind data to groups\n      let group = this.svg.selectAll('.bar-group').data(this.data);\n\n      // remove bars\n      group.exit().remove();\n\n      // update the existing bars\n      group\n        .select('.bar')\n        .attr('x', d => this.xAxisScale(d.label) + this.xAxisScale.bandwidth() / 5.5)\n        .attr('width', this.xAxisScale.bandwidth() / 1.5)\n        .transition()\n        .duration(1000)\n        .attr('y', d => this.yAxisScale(d.value))\n        .attr('height', d => this.height - this.yAxisScale(d.value));\n\n      // add group on enter\n      const groupEnter = group\n        .enter()\n        .append('g')\n        .attr('class', 'bar-group');\n\n      // add bars on enter\n      groupEnter\n        .append('rect')\n        .attr('class', 'bar')\n        .attr('rx', 2)\n        .attr('fill', d => `url(#gradient-${this.colorRange(d.label).substr(1)})`) // removes hash to prevent safari bug;\n        .attr('x', d => this.xAxisScale(d.label) + this.xAxisScale.bandwidth() / 5.5)\n        .attr('width', this.xAxisScale.bandwidth() / 1.5)\n        .attr('y', this.height)\n        .attr('height', 0)\n        .transition()\n        .duration(1000)\n        .attr('y', d => this.yAxisScale(d.value))\n        .attr('height', d => this.height - this.yAxisScale(d.value))\n        .attr('data-color', d => this.colorRange(d.label));\n\n      groupEnter\n        .select('.bar')\n        .on('mouseover focus', (data, index, nodes) => this.barMouseOverFocus(d3_event, data, index, nodes))\n        .on('mouseout blur', () => this.barMouseOutBlur())\n        .on('click', (data, index, nodes) => this.barMouseClick(d3_event, data, index, nodes));\n    }\n\n    if (!this.hideLegend) {\n      let legendItem = this.chart\n        .select('.legend')\n        .selectAll('.legend-item')\n        .data(this.data);\n\n      legendItem.exit().remove();\n\n      // update existing items\n      legendItem.select('.legend-label').html(d => {\n        // return this.legendLabelFormat === null ? d.label : this.legendLabelFormat(d.label);\n        switch (this.legendLabelFormatType) {\n          case 'number':\n            return this.legendLabelFormat(d.label);\n\n          case 'time':\n            const parsedTime = d3_isoParse(d.label);\n            return this.legendLabelFormat(parsedTime);\n\n          default:\n            return d.label;\n        }\n      });\n\n      // legend items on enter\n      let enterLegendItem = legendItem\n        .enter()\n        .append('li')\n        .attr('class', 'legend-item');\n\n      enterLegendItem\n        .append('span')\n        .attr('class', 'legend-key')\n        .style('background-color', d => this.colorRange(d.label));\n\n      enterLegendItem\n        .append('span')\n        .attr('class', 'legend-label')\n        .html(d => {\n          // return this.legendLabelFormat === null ? d.label : this.legendLabelFormat(d.label);\n          switch (this.legendLabelFormatType) {\n            case 'number':\n              return this.legendLabelFormat(d.label);\n\n            case 'time':\n              const parsedTime = d3_isoParse(d.label);\n              return this.legendLabelFormat(parsedTime);\n\n            default:\n              return d.label;\n          }\n        });\n\n      enterLegendItem\n        .on('mouseover', (data, index, nodes) => this.legendMouseOver(d3_event, data, index, nodes))\n        .on('mouseout', () => this.legendMouseOut())\n        .on('click', (data, index, nodes) => this.legendMouseClick(d3_event, data, index, nodes));\n    }\n\n    if (this.threshold) {\n      this.yThreshold\n        .raise()\n        .transition()\n        .duration(1000)\n        .attr('transform', `translate(0,  ${this.yAxisScale(+this.threshold)})`);\n    }\n\n    if (this.average) {\n      this.yAverage\n        .raise()\n        .transition()\n        .duration(1000)\n        .attr('transform', `translate(0,  ${this.yAxisScale(+this.average)})`);\n    }\n  };\n\n  barMouseOverFocus = (event, data, index, nodes) => {\n    this.chart\n      .selectAll('.bar-group')\n      .filter((d, i) => i !== index)\n      .classed('inactive', true);\n\n    const bar = this.chart\n      .selectAll('.bar-group')\n      .filter((d, i) => i === index)\n      .select('.bar');\n\n    const barColor = bar.attr('data-color');\n\n    bar.style('fill', () => barColor);\n\n    this.chart\n      .selectAll('.legend-item')\n      .filter((d, i) => i !== index)\n      .classed('inactive', true);\n\n    this.tooltipShow(data, nodes.filter((d, i) => i === index));\n\n    this.hovered.emit({ event, data });\n  };\n\n  barMouseOutBlur = () => {\n    this.chart\n      .selectAll('.bar-group')\n      .classed('inactive', false)\n      .select('.bar')\n      .style('fill', null);\n\n    this.chart.selectAll('.legend-item').classed('inactive', false);\n\n    this.tooltipHide();\n  };\n\n  barMouseClick = (event, data, index, nodes) => {\n    this.clicked.emit({ event, data });\n  };\n\n  legendMouseOver = (event, data, index, nodes) => {\n    this.chart\n      .selectAll('.legend-item')\n      .filter((d, i) => i !== index)\n      .classed('inactive', true);\n\n    this.chart\n      .selectAll('.bar-group')\n      .filter((d, i) => i !== index)\n      .classed('inactive', true);\n\n    const bar = this.chart\n      .selectAll('.bar-group')\n      .filter((d, i) => i === index)\n      .select('.bar');\n\n    const barColor = bar.attr('data-color');\n\n    bar.style('fill', () => barColor);\n\n    this.tooltipShow(data, this.chart.selectAll('.bar').filter((d, i) => i === index)._groups[0]); // TODO: find better way than using _groups\n\n    this.hovered.emit({ event, data });\n  };\n\n  legendMouseOut = () => {\n    this.chart.selectAll('.legend-item').classed('inactive', false);\n\n    this.chart\n      .selectAll('.bar-group')\n      .classed('inactive', false)\n      .select('.bar')\n      .style('fill', null);\n\n    this.tooltipHide();\n  };\n\n  legendMouseClick = (event, data, index, nodes) => {\n    this.clicked.emit({ event, data });\n  };\n\n  private tooltipShow = (data, node) => {\n    let dimensions = node[0].getBoundingClientRect();\n    let scroll = this._scroll.getScrollPosition();\n    let label;\n\n    switch (this.tooltipLabelFormatType) {\n      case 'number':\n        label = this.tooltipLabelFormat(data.label);\n        break;\n\n      case 'time':\n        const parsedTime = d3_isoParse(data.label);\n        label = this.tooltipLabelFormat(parsedTime);\n        break;\n\n      default:\n        label = data.label;\n    }\n    let value =\n      this.tooltipValueFormat === null\n        ? `<div class=\"tooltip-value\">${data.value}</div>`\n        : `<div class=\"tooltip-value\">${this.tooltipValueFormat(data.value)}</div>`;\n\n    this.tooltip.html(\n      `\n        ${this.hideTooltipLabel ? '' : `${label}`}\n        ${value}\n      `\n    );\n\n    let tooltipOffsetWidth = +this.tooltip.node().offsetWidth / 2;\n    let tooltipOffsetHeight = +this.tooltip.node().offsetHeight + 8;\n\n    this.tooltip.style('top', `${+scroll[1] + +dimensions.top - tooltipOffsetHeight}px`); //\n    this.tooltip.style('left', `${+scroll[0] + +dimensions.left - tooltipOffsetWidth + +dimensions.width / 2}px`);\n    this.tooltip.style('opacity', 1);\n  };\n\n  private tooltipHide = () => {\n    this.tooltip.style('opacity', 0);\n  };\n\n  private xAxisFormatter = item => {\n    switch (this.xAxisFormatType) {\n      case 'number':\n        return this.xAxisFormat(item);\n\n      case 'time':\n        const parseDate = d3_isoParse(item);\n        return this.xAxisFormat(parseDate);\n\n      default:\n        return item;\n    }\n  };\n\n  private yAxisFormatter = item => {\n    switch (this.yAxisFormatType) {\n      case 'number':\n        return this.yAxisFormat(item);\n\n      case 'time':\n        const parseDate = d3_isoParse(item);\n        return this.yAxisFormat(parseDate);\n\n      default:\n        return item;\n    }\n  };\n}\n","import {\n  Component,\n  OnInit,\n  OnChanges,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  HostBinding,\n  OnDestroy,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  Inject\n} from '@angular/core';\n\nimport { ViewportScroller } from '@angular/common';\n\nimport {\n  select as d3_select,\n  isoParse as d3_isoParse,\n  isoFormat as d3_isoFormat,\n  timeFormat as d3_timeFormat,\n  format as d3_format,\n  scaleOrdinal as d3_scaleOrdinal,\n  scaleTime as d3_scaleTime,\n  line as d3_line,\n  scaleLinear as d3_scaleLinear,\n  extent as d3_extent,\n  min as d3_min,\n  max as d3_max,\n  axisBottom as d3_axisBottom,\n  axisLeft as d3_axisLeft,\n  event as d3_event,\n  curveCatmullRom as d3_curveCatmullRom,\n  mouse as d3_mouse,\n  bisectLeft as d3_bisectLeft,\n  area as d3_area\n} from 'd3';\n\nimport { PbdsDatavizService } from './dataviz.service';\nimport { PbdsDatavizLine } from './dataviz.interfaces';\n\n@Component({\n  selector: 'pbds-dataviz-line',\n  template: ``,\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PbdsDatavizLineComponent implements OnInit, OnDestroy, OnChanges {\n  @HostBinding('class.pbds-chart')\n  chartClass = true;\n\n  @HostBinding('class.pbds-chart-line')\n  lineClass = true;\n\n  @Input()\n  data: PbdsDatavizLine;\n\n  @Input()\n  width = 306;\n\n  @Input()\n  height = 400;\n\n  @Input()\n  type: 'medium' | 'high' | 'debug' = 'medium'; // debug to show all chart options\n\n  @Input()\n  area = false;\n\n  @Input()\n  xAxisFormatString = '';\n\n  @Input()\n  xAxisTicks = 6;\n\n  @Input()\n  yAxisFormatString = '';\n\n  @Input()\n  yAxisTicks = 5;\n\n  @Input()\n  yAxisMinBuffer = 0.01;\n\n  @Input()\n  yAxisMaxBuffer = 0.01;\n\n  @Input()\n  hideLegend = false;\n\n  @Input()\n  legendWidth = 105 + 28; // hardcoded legend width + left margin, do not document until feedback\n\n  @Input()\n  legendPosition: 'right' | 'bottom' = 'right';\n\n  @Input()\n  legendLabelFormatType: 'number' | 'time' = null;\n\n  @Input()\n  legendLabelFormatString = '';\n\n  @Input()\n  tooltipHeadingFormatString = '';\n\n  @Input()\n  tooltipLabelFormatType: 'number' | 'time' = null;\n\n  @Input()\n  tooltipLabelFormatString = '';\n\n  @Input()\n  tooltipValueFormatType: 'number' | 'time' = null;\n\n  @Input()\n  tooltipValueFormatString = '';\n\n  @Input()\n  marginTop = 10; // hardcoded on purpose, do not document until feedback\n\n  @Input()\n  marginRight = 20; // hardcoded on purpose, do not document until feedback\n\n  @Input()\n  marginBottom = 30; // hardcoded on purpose, do not document until feedback\n\n  @Input()\n  marginLeft = 55; // hardcoded on purpose, do not document until feedback\n\n  @Output()\n  hovered: EventEmitter<object> = new EventEmitter<object>();\n\n  @Output()\n  clicked: EventEmitter<object> = new EventEmitter<object>();\n\n  @Output()\n  tooltipHovered: EventEmitter<object> = new EventEmitter<object>();\n\n  @Output()\n  tooltipClicked: EventEmitter<object> = new EventEmitter<object>();\n\n  private chart;\n  private svg;\n  private mouserect;\n  private tooltipLine;\n  private margin;\n  private d3line;\n  private d3area;\n  private lineWidth;\n  private lineCurved;\n  private linePoints;\n  private colorRange;\n  private xAxisScale;\n  private xAxisCall;\n  private xAxis;\n  private xAxisFormat;\n  private yAxisScale;\n  private yAxisCall;\n  private yAxis;\n  private yAxisFormat;\n  private xGrid;\n  private xGridCall;\n  private yGrid;\n  private yGridCall;\n  private xAxisTickSize: number;\n  private xAxisTickSizeOuter: number;\n  private yAxisTickSize: number;\n  private yAxisTickSizeOuter: number;\n  private hideXAxis: boolean;\n  private hideYAxis: boolean;\n  private hideXAxisDomain: boolean;\n  private hideYAxisDomain: boolean;\n  private hideXAxisZero: boolean;\n  private hideYAxisZero: boolean;\n  private hideXGrid: boolean;\n  private hideYGrid: boolean;\n  private hideXAxisTicks: boolean;\n  private hideYAxisTicks: boolean;\n  private legendLabelFormat;\n  private tooltip;\n  private hideTooltip: boolean;\n  private tooltipHeadingFormat;\n  private tooltipValueFormat;\n  private tooltipLabelFormat;\n  private mousedata;\n\n  constructor(private _dataviz: PbdsDatavizService, private _element: ElementRef, private _scroll: ViewportScroller) {}\n\n  ngOnInit() {\n    this.margin = {\n      top: +this.marginTop,\n      right: +this.marginRight,\n      bottom: +this.marginBottom,\n      left: +this.marginLeft\n    };\n\n    this.xAxisFormat = d3_timeFormat(this.xAxisFormatString);\n\n    this.yAxisFormat = d3_format(this.yAxisFormatString);\n\n    switch (this.legendLabelFormatType) {\n      case 'number':\n        this.legendLabelFormat = d3_format(this.legendLabelFormatString);\n        break;\n      case 'time':\n        this.legendLabelFormat = d3_timeFormat(this.legendLabelFormatString);\n        break;\n      default:\n        this.legendLabelFormat = null;\n        break;\n    }\n\n    this.tooltipHeadingFormat = d3_timeFormat(this.tooltipHeadingFormatString);\n\n    switch (this.tooltipLabelFormatType) {\n      case 'number':\n        this.tooltipLabelFormat = d3_format(this.tooltipLabelFormatString);\n        break;\n      case 'time':\n        this.tooltipLabelFormat = d3_timeFormat(this.tooltipLabelFormatString);\n        break;\n      default:\n        this.tooltipLabelFormat = null;\n        break;\n    }\n\n    switch (this.tooltipValueFormatType) {\n      case 'number':\n        this.tooltipValueFormat = d3_format(this.tooltipValueFormatString);\n        break;\n      case 'time':\n        this.tooltipValueFormat = d3_timeFormat(this.tooltipValueFormatString);\n        break;\n      default:\n        this.tooltipValueFormat = null;\n    }\n\n    // defaults for all chart types\n    this.lineWidth = 3;\n    this.lineCurved = true;\n    this.linePoints = true;\n    this.hideXAxis = false;\n    this.hideYAxis = false;\n    this.hideXAxisZero = false;\n    this.hideYAxisZero = false;\n    this.hideXGrid = false;\n    this.hideYGrid = false;\n    this.hideXAxisDomain = false;\n    this.hideYAxisDomain = false;\n    this.hideTooltip = false;\n    this.hideXAxisTicks = false;\n    this.hideYAxisTicks = false;\n    this.xAxisTickSize = 8;\n    this.xAxisTickSizeOuter = 0;\n    this.yAxisTickSize = 8;\n    this.yAxisTickSizeOuter = 0;\n\n    if (this.type !== 'debug') {\n      // set type defaults\n      switch (this.type) {\n        case 'medium':\n          this.hideXGrid = true;\n          this.hideXAxisTicks = true;\n          this.hideYAxisTicks = true;\n          this.hideYGrid = true;\n          break;\n\n        case 'high':\n          this.lineWidth = 2;\n          this.lineCurved = false;\n          this.linePoints = false;\n          this.hideXAxisTicks = true;\n          this.hideYAxisTicks = true;\n          break;\n      }\n    }\n\n    // adjust margin if xAxis hidden\n    if (this.hideXAxis) this.margin.bottom = 10; // need small margin for yAxis with 0 tick label\n\n    if (!this.hideLegend && this.legendPosition === 'right') {\n      this.width = +this.width - +this.legendWidth;\n    }\n\n    // define line\n    this.d3line = d3_line()\n      .x((d: any, i) => this.xAxisScale(d3_isoParse(this.data.dates[i])))\n      .y((d: any) => this.yAxisScale(d));\n\n    // define line curve\n    if (this.lineCurved) {\n      this.d3line.curve(d3_curveCatmullRom.alpha(0.5));\n    }\n\n    // define area\n    if (this.area) {\n      this.d3area = d3_area()\n        .x((d: any, i) => this.xAxisScale(d3_isoParse(this.data.dates[i])))\n        .y0(this.height)\n        .y1((d: any, i) => this.yAxisScale(d));\n\n      if (this.lineCurved) {\n        this.d3area.curve(d3_curveCatmullRom.alpha(0.5));\n      }\n    }\n\n    // create the chart\n    this.chart = d3_select(this._element.nativeElement).attr('aria-hidden', 'true');\n\n    // create chart svg\n    this.svg = this.chart\n      .append('svg')\n      .attr('width', +this.width + this.margin.right)\n      .attr('height', +this.height + this.margin.top + this.margin.bottom)\n      .attr('class', 'img-fluid')\n      .attr('preserveAspectRatio', 'xMinYMin meet')\n      .attr(\n        'viewBox',\n        `-${this.margin.left} -${this.margin.top} ${+this.width + this.margin.right} ${+this.height +\n          this.margin.top +\n          this.margin.bottom}`\n      );\n\n    // add rectangle to capture mouse\n    this.mouserect = this.svg\n      .append('rect')\n      .attr('width', this.width - this.margin.left - this.margin.right)\n      .attr('height', this.height)\n      .attr('class', 'mouserect')\n      .on('mousemove', (data, index, nodes) => this.mouserectMouseMove(d3_event, index, nodes))\n      .on('mouseout', (data, index, nodes) => this.mouserectMouseOut(d3_event, index, nodes))\n      .on('click', (data, index, nodes) => this.mouserectMouseClick());\n\n    this.tooltipLine = this.svg\n      .append('line')\n      .attr('y1', 0)\n      .attr('y2', this.height)\n      .attr('class', 'tooltip-line');\n\n    // define color range\n    this.colorRange = d3_scaleOrdinal().range(this._dataviz.getColors(false));\n\n    // add glow def\n    this._dataviz.createGlowFilter(this.svg);\n\n    // X AXIS\n    this.xAxisScale = d3_scaleTime()\n      .domain(\n        d3_extent(this.data.dates, (d: any, i) => {\n          return d3_isoParse(d);\n        })\n      )\n      .range([0, this.width - this.margin.left - this.margin.right]);\n\n    this.xAxisCall = d3_axisBottom(this.xAxisScale)\n      .ticks(+this.xAxisTicks)\n      .tickSize(this.xAxisTickSize)\n      .tickSizeOuter(this.xAxisTickSizeOuter)\n      .tickFormat(this.xAxisFormatter);\n\n    this.xAxis = this.svg\n      .append('g')\n      .attr('class', 'axis axis-x')\n      .attr('transform', `translate(0, ${this.height})`) //${-this.margin.right / 2}\n      .classed('axis-hidden', this.hideXAxis)\n      .classed('axis-zero-hidden', this.hideXAxisZero)\n      .classed('axis-domain-hidden', this.hideXAxisDomain)\n      .classed('axis-ticks-hidden', this.hideXAxisTicks)\n      .call(this.xAxisCall);\n\n    // X GRIDLINES\n    if (!this.hideXGrid) {\n      this.xGridCall = d3_axisBottom(this.xAxisScale).tickSize(-this.height);\n\n      this.xGrid = this.svg\n        .append('g')\n        .attr('class', 'grid grid-x')\n        .classed('grid-zero-hidden', this.hideXAxisZero)\n        .attr('transform', `translate(0, ${this.height})`) //${-this.margin.right / 2}\n        .call(this.xGridCall);\n    }\n\n    // Y AXIS\n    this.yAxisScale = d3_scaleLinear()\n      .domain([\n        d3_min(this.data.series, (d: any, i) => {\n          const minVal = +d3_min(d.values);\n          return minVal - minVal * +this.yAxisMinBuffer;\n        }),\n        d3_max(this.data.series, (d: any, i) => {\n          const maxVal = +d3_max(d.values);\n          return maxVal + maxVal * this.yAxisMaxBuffer;\n        })\n      ])\n      .nice()\n      .range([this.height, 0]);\n\n    this.yAxisCall = d3_axisLeft(this.yAxisScale)\n      .ticks(this.yAxisTicks)\n      .tickSize(this.yAxisTickSize)\n      .tickSizeOuter(this.yAxisTickSizeOuter)\n      .tickFormat(this.yAxisFormatter);\n\n    this.yAxis = this.svg\n      .append('g')\n      .attr('class', 'axis axis-y')\n      .classed('axis-hidden', this.hideYAxis)\n      .classed('axis-zero-hidden', this.hideYAxisZero)\n      .classed('axis-domain-hidden', this.hideYAxisDomain)\n      .classed('axis-ticks-hidden', this.hideYAxisTicks)\n      .call(this.yAxisCall);\n\n    // Y GRIDLINES\n    if (!this.hideYGrid) {\n      this.yGridCall = d3_axisLeft(this.yAxisScale)\n        .ticks(this.yAxisTicks)\n        .tickSize(-this.width + this.margin.left + this.margin.right);\n\n      this.yGrid = this.svg\n        .append('g')\n        .attr('class', 'grid grid-y')\n        .classed('grid-zero-hidden', this.hideYAxisZero)\n        .attr('transform', `translate(0, 0)`)\n        .call(this.yGridCall);\n    }\n\n    // TOOLTIP\n    if (!this.hideTooltip) {\n      this.tooltip = d3_select('body')\n        .append('div')\n        .attr('class', 'pbds-tooltip west')\n        .style('opacity', 0)\n        .attr('aria-hidden', 'true'); // hide tooltip for accessibility\n\n      // tooltip header\n      this.tooltip.append('div').attr('class', 'tooltip-header');\n\n      // tooltip table\n      const tooltipTable = this.tooltip.append('table').attr('class', 'tooltip-table text-left w-100');\n\n      const tooltipTableTbody = tooltipTable.append('tbody');\n\n      tooltipTableTbody\n        .selectAll('tr')\n        .data(this.data)\n        .enter()\n        .append('tr');\n    }\n\n    // add legend classes\n    if (!this.hideLegend) {\n      this.chart.classed('pbds-chart-legend-bottom', this.legendPosition === 'bottom' ? true : false);\n      this.chart.append('ul').attr('class', `legend legend-${this.legendPosition}`);\n    }\n\n    this.updateChart();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.data && !changes.data.firstChange) {\n      this.updateChart();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.tooltip) this.tooltip.remove();\n  }\n\n  updateChart = () => {\n    this.mouserect.data(this.data);\n\n    // update the xScale\n    this.xAxisScale.domain(\n      d3_extent(this.data.dates, (d: any, i) => {\n        return d3_isoParse(d);\n      })\n    );\n\n    // update the yScale\n    this.yAxisScale\n      .domain([\n        d3_min(this.data.series, (d: any, i) => {\n          const minVal = +d3_min(d.values);\n          return minVal - minVal * +this.yAxisMinBuffer;\n        }),\n        d3_max(this.data.series, (d: any, i) => {\n          const maxVal = +d3_max(d.values);\n          return maxVal + maxVal * this.yAxisMaxBuffer;\n        })\n      ])\n      .nice();\n\n    this.xAxis\n      .transition()\n      .duration(1000)\n      .call(this.xAxisCall);\n\n    this.yAxis\n      .transition()\n      .duration(1000)\n      .call(this.yAxisCall);\n\n    // update the grids\n    if (!this.hideXGrid) {\n      this.xGrid\n        .transition()\n        .duration(1000)\n        .call(this.xGridCall);\n    }\n\n    if (!this.hideYGrid) {\n      this.yGrid\n        .transition()\n        .duration(1000)\n        .call(this.yGridCall);\n    }\n\n    let group = this.svg.selectAll('.line-group').data(this.data.series);\n\n    // remove lines\n    group.exit().remove();\n\n    // update existing\n    group\n      .select('path.line')\n      .transition()\n      .duration(1000)\n      .attr('d', d => this.d3line(d.values));\n\n    if (this.area) {\n      group\n        .select('path.area')\n        .transition()\n        .duration(1000)\n        .attr('d', d => this.d3area(d.values));\n    }\n\n    group\n      .selectAll('circle')\n      .data(d => d.values)\n      .transition()\n      .duration(1000)\n      .attr('cx', (d, i) => this.xAxisScale(d3_isoParse(this.data.dates[i])))\n      .attr('cy', d => this.yAxisScale(d));\n\n    // add group on enter\n    const groupEnter = group\n      .enter()\n      .append('g')\n      .attr('class', 'line-group');\n\n    // add line on enter\n    const line = groupEnter\n      .append('path')\n      .attr('class', 'line')\n      .style('color', d => this.colorRange(d.label))\n      .style('stroke-width', this.lineWidth)\n      .transition()\n      .duration(1000)\n      .attr('d', data => this.d3line(data.values));\n\n    if (this.area) {\n      groupEnter\n        .append('path')\n        .attr('class', 'area')\n        .attr('d', data => this.d3area(data.values))\n        .style('color', d => this.colorRange(d.label));\n    }\n\n    // add points\n    if (this.linePoints) {\n      const points = groupEnter\n        .append('g')\n        .attr('class', 'points')\n        .style('color', d => this.colorRange(d.label));\n\n      const circles = points.selectAll('circle').data(d => d.values);\n\n      circles\n        .enter()\n        .append('circle')\n        .attr('cx', (d, i) => this.xAxisScale(d3_isoParse(this.data.dates[i])))\n        .attr('cy', d => this.yAxisScale(d))\n        .attr('r', this.lineWidth * 2)\n        .style('stroke-width', this.lineWidth);\n    }\n\n    if (this.type !== 'high') {\n      line.attr('filter', 'url(#glow)');\n    }\n\n    if (!this.hideLegend) {\n      let legendItem = this.chart\n        .select('.legend')\n        .selectAll('.legend-item')\n        .data(this.data.series);\n\n      legendItem.exit().remove();\n\n      // update existing items\n      legendItem.select('.legend-label').html(d => {\n        switch (this.legendLabelFormatType) {\n          case 'number':\n            return this.legendLabelFormat(d.label);\n\n          case 'time':\n            const parsedTime = d3_isoParse(d.label);\n            return this.legendLabelFormat(parsedTime);\n\n          default:\n            return d.label;\n        }\n      });\n\n      // legend items on enter\n      let enterLegendItem = legendItem\n        .enter()\n        .append('li')\n        .attr('class', 'legend-item');\n\n      enterLegendItem\n        .append('span')\n        .attr('class', 'legend-key')\n        .style('background-color', d => this.colorRange(d.label));\n\n      enterLegendItem\n        .append('span')\n        .attr('class', 'legend-label')\n        .html(d => {\n          switch (this.legendLabelFormatType) {\n            case 'number':\n              return this.legendLabelFormat(d.label);\n\n            case 'time':\n              const parsedTime = d3_isoParse(d.label);\n              return this.legendLabelFormat(parsedTime);\n\n            default:\n              return d.label;\n          }\n        });\n\n      enterLegendItem\n        .on('mouseover', (data, index, nodes) => this.legendMouseOver(d3_event, data, index, nodes))\n        .on('mouseout', () => this.legendMouseOut())\n        .on('click', (data, index, nodes) => this.legendMouseClick(d3_event, data, index, nodes));\n    }\n\n    if (!this.hideTooltip) {\n      let tooltipItem = this.tooltip\n        .select('.tooltip-table')\n        .selectAll('tr')\n        .data(this.data.series);\n\n      tooltipItem.exit().remove();\n\n      // update existing items\n      tooltipItem.select('.tooltip-label pr-2').html(d => {\n        return this.tooltipHeadingFormat(d.label);\n      });\n\n      // items on enter\n      let entertooltipItem = tooltipItem\n        .enter()\n        .append('tr')\n        .attr('class', 'tooltip-item');\n\n      entertooltipItem\n        .append('td')\n        .style('color', d => this.colorRange(d.label))\n        .append('span')\n        .attr('class', 'pbds-tooltip-key');\n\n      entertooltipItem\n        .append('td')\n        .attr('class', 'tooltip-label pr-2 text-nowrap')\n        .html(d => {\n          return this.tooltipLabelFormatType ? this.tooltipLabelFormat(d.label) : d.label;\n        });\n\n      entertooltipItem\n        .append('td')\n        .attr('class', 'tooltip-value text-right text-nowrap')\n        .html(d => '');\n    }\n\n    this.mouserect.raise();\n  };\n\n  legendMouseOver = (event, data, index, nodes) => {\n    this.chart\n      .selectAll('.legend-item')\n      .filter((d, i) => i !== index)\n      .classed('inactive', true);\n\n    this.chart\n      .selectAll('.line-group')\n      .filter((d, i) => i !== index)\n      .classed('inactive', true);\n\n    const line = this.chart.selectAll('.line-group').filter((d, i) => i === index);\n    line.classed('active', true);\n\n    if (this.linePoints) {\n      const circles = line.selectAll('circle');\n      circles.classed('active', true);\n    }\n\n    this.hovered.emit({ event, data });\n  };\n\n  legendMouseOut = () => {\n    this.chart.selectAll('.legend-item').classed('inactive', false);\n\n    this.chart\n      .selectAll('.line-group')\n      .classed('inactive', false)\n      .classed('active', false);\n\n    if (this.linePoints) {\n      const circles = this.chart.selectAll('circle');\n      circles.classed('active', false);\n    }\n  };\n\n  legendMouseClick = (event, data, index, nodes) => {\n    this.clicked.emit({ event, data });\n  };\n\n  mouserectMouseMove = (event, index, nodes) => {\n    const mouseXDate = this.xAxisScale.invert(d3_mouse(nodes[0])[0]); // return date at mouse x position\n    const leftIndex = d3_bisectLeft(this.data.dates, d3_isoFormat(mouseXDate)); // index of left closest date\n\n    // prevent error for 0 index\n    if (leftIndex === 0) return false;\n\n    const dateLower = new Date(this.data.dates[leftIndex - 1]);\n    const dateUpper = new Date(this.data.dates[leftIndex]);\n    const closestDate = +mouseXDate - +dateLower > +dateUpper - mouseXDate ? dateUpper : dateLower; // date mouse is closest to\n    const closestIndex = this.data.dates.indexOf(d3_isoFormat(closestDate)); // which index the mouse is closest to\n    // console.log(+mouseXDate, leftIndex, +dateLower, +dateUpper, +closestDate, closestIndex);\n\n    const circles = this.svg.selectAll('.line-group').selectAll('circle');\n    circles.filter((d, i) => i === closestIndex).classed('active', true);\n    circles.filter((d, i) => i !== closestIndex).classed('active', false);\n\n    this.tooltipLine\n      .attr('x1', this.xAxisScale(closestDate))\n      .attr('x2', this.xAxisScale(closestDate))\n      .classed('active', true);\n\n    // console.log(this.tooltipLine.node().getBoundingClientRect(), this._scroll.getScrollPosition());\n    this.tooltipShow(this.tooltipLine.node(), closestIndex);\n\n    this.mousedata = {\n      date: closestDate,\n      series: this.data.series.map(d => {\n        return {\n          label: d.label,\n          value: d.values[closestIndex]\n        };\n      })\n    };\n\n    this.tooltipHovered.emit({ event, data: this.mousedata });\n  };\n\n  mouserectMouseOut = (event, index, nodes) => {\n    this.svg.selectAll('circle').classed('active', false);\n    this.tooltipLine.classed('active', false);\n    this.tooltipHide();\n  };\n\n  mouserectMouseClick = () => {\n    this.tooltipClicked.emit({ event, data: this.mousedata });\n  };\n\n  private tooltipShow = (node, closestIndex) => {\n    const scroll = this._scroll.getScrollPosition();\n    const mouserectDimensions = node.getBoundingClientRect();\n    const tooltipOffsetHeight = +this.tooltip.node().offsetHeight;\n    const tooltipDimensions = this.tooltip.node().getBoundingClientRect();\n    const dimensionCalculated = mouserectDimensions.left + tooltipDimensions.width + 8;\n    const clientWidth = document.body.clientWidth - 10;\n    let position;\n\n    // console.log(scroll, mouserectDimensions, tooltipOffsetHeight, tooltipDimensions, dimensionCalculated, clientWidth);\n\n    this.tooltip.select('.tooltip-header').html(d => {\n      const parsedTime = d3_isoParse(this.data.dates[closestIndex]);\n      return this.tooltipHeadingFormat(parsedTime);\n    });\n\n    this.tooltip.selectAll('.tooltip-value').html((d, i) => {\n      return this.tooltipValueFormatType\n        ? this.tooltipValueFormat(this.data.series[i].values[closestIndex])\n        : this.data.series[i].values[closestIndex];\n    });\n\n    // flip the tooltip positions if near the right edge of the screen\n    if (dimensionCalculated > clientWidth) {\n      this.tooltip.classed('east', true);\n      this.tooltip.classed('west', false);\n      position = `${mouserectDimensions.left - tooltipDimensions.width - 8}px`;\n    } else if (dimensionCalculated < clientWidth) {\n      this.tooltip.classed('east', false);\n      this.tooltip.classed('west', true);\n      position = `${mouserectDimensions.left + 8}px`;\n    }\n\n    // console.log('POSITION: ', position, mouserectDimensions);\n\n    // set the tooltip styles\n    this.tooltip.style(\n      'top',\n      `${mouserectDimensions.top + mouserectDimensions.height / 2 - tooltipOffsetHeight / 2 + scroll[1]}px`\n    );\n    this.tooltip.style('left', position);\n    this.tooltip.style('opacity', 1);\n  };\n\n  private tooltipHide = () => {\n    this.tooltip.style('opacity', 0);\n  };\n\n  private xAxisFormatter = item => {\n    const parseDate = d3_isoParse(item);\n    return this.xAxisFormat(parseDate);\n  };\n\n  private yAxisFormatter = item => {\n    return this.yAxisFormat(item);\n  };\n}\n","import { Component, OnInit, Input, ElementRef, HostBinding, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { select as d3_select, arc as d3_arc, interpolate as d3_interpolate, format as d3_format } from 'd3';\n\nimport { PbdsDatavizService } from './dataviz.service';\nimport { PbdsDatavizGauge } from './dataviz.interfaces';\n\n@Component({\n  selector: 'pbds-dataviz-gauge',\n  template: `\n    <div\n      *ngIf=\"!hideLabel\"\n      class=\"gauge-details\"\n      [ngClass]=\"{ halfmoon: type === 'halfmoon', 'gauge-details-small': labelSmall }\"\n    >\n      <div class=\"gauge-number\">{{ label }}</div>\n      <div *ngIf=\"description\" class=\"gauge-description text-center\">{{ description }}</div>\n    </div>\n  `,\n  styles: []\n})\nexport class PbdsDatavizGaugeComponent implements OnInit, OnChanges {\n  @HostBinding('class.pbds-chart')\n  chartClass = true;\n\n  @HostBinding('class.pbds-chart-gauge')\n  pieClass = true;\n\n  @Input()\n  data: PbdsDatavizGauge;\n\n  @Input()\n  width = 300;\n\n  @Input()\n  type: 'halfmoon' | 'horseshoe' | 'circle' = 'halfmoon';\n\n  @Input()\n  color = '#cf0989';\n\n  @Input()\n  hideLabel = false;\n\n  @Input()\n  labelFormatString = '';\n\n  @Input()\n  labelSmall = false;\n\n  @Input()\n  description;\n\n  @Input()\n  gaugeWidth = 20;\n\n  private chart;\n  private svg;\n  private gauge;\n  private labelTween; // TODO: rename this\n  public label;\n  private startAngle;\n  private endAngle;\n  private radius;\n  private backgroundColor; // TODO: should this be an input?\n  private arc;\n  private labelFormat;\n  private oldValue;\n  private height;\n  private rounded;\n\n  constructor(private _dataviz: PbdsDatavizService, private _element: ElementRef) {}\n\n  ngOnInit() {\n    this.height = this.width;\n    this.radius = Math.max(this.width, this.height) / 2;\n    this.labelFormat = d3_format(this.labelFormatString);\n    this.backgroundColor = '#F0F0F0';\n    this.label = this.labelFormat(this.data.value);\n\n    switch (this.type) {\n      case 'halfmoon':\n        this.startAngle = -90;\n        this.endAngle = 90;\n        this.rounded = true;\n        break;\n\n      case 'horseshoe':\n        this.startAngle = -140;\n        this.endAngle = 140;\n        this.rounded = true;\n        break;\n\n      case 'circle':\n        this.startAngle = 0;\n        this.endAngle = 360;\n        this.rounded = false;\n        break;\n    }\n\n    this.arc = d3_arc().cornerRadius(this.rounded ? this.gaugeWidth : 0);\n\n    this.chart = d3_select(this._element.nativeElement).attr('aria-hidden', 'true');\n\n    this.svg = this.chart\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('class', 'img-fluid') // to resize chart\n      .attr('preserveAspectRatio', 'xMinYMin meet')\n      .attr('viewBox', `-${this.width / 2} -${this.height / 2} ${this.width} ${this.height}`);\n\n    this.drawChart();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.data && !changes.data.firstChange) {\n      // console.log(changes.data.previousValue.value, changes.data.currentValue.value);\n\n      this.oldValue = changes.data.previousValue.value;\n      this.updateChart();\n    }\n  }\n\n  degreesToRadians = degree => {\n    return (degree * Math.PI) / 180;\n  };\n\n  calculateMinMax = () => {\n    const percentage = this.data.minvalue / (this.data.maxvalue - this.data.minvalue);\n\n    return percentage * (this.data.value - this.data.minvalue) + (this.data.value - this.data.minvalue);\n  };\n\n  calculateCurve = data => {\n    const start = this.degreesToRadians(this.startAngle);\n    const end = start + (data * (this.degreesToRadians(this.endAngle) - start)) / this.data.maxvalue;\n\n    return [\n      {\n        startAngle: start,\n        endAngle: end\n      }\n    ];\n  };\n\n  drawChart = () => {\n    this.gauge = this.svg.append('g').attr('class', 'gauge-group');\n\n    // background arc\n    const background = this.gauge\n      .append('path')\n      .data(this.calculateCurve(this.data.maxvalue))\n      .attr('class', 'gauge-background')\n      .attr('fill', this.backgroundColor)\n      .attr('d', d => {\n        return this.arc({\n          innerRadius: this.radius - this.gaugeWidth,\n          outerRadius: this.radius,\n          startAngle: d.startAngle,\n          endAngle: d.endAngle\n        });\n      });\n\n    // value arc\n    this.gauge\n      .append('path')\n      .data(this.calculateCurve(this.calculateMinMax()))\n      .attr('class', 'gauge-value')\n      .attr('fill', this.color)\n      .attr('d', d => {\n        return this.arc({\n          innerRadius: this.radius - this.gaugeWidth,\n          outerRadius: this.radius,\n          startAngle: d.startAngle,\n          endAngle: d.endAngle\n        });\n      });\n\n    switch (this.type) {\n      case 'horseshoe':\n        this.svg.attr('height', 230).attr('viewBox', `-${this.width / 2} -${this.height / 2} ${this.height} 230`);\n        break;\n      case 'halfmoon':\n        this.svg.attr('height', this.width / 2);\n        this.svg.attr('viewBox', `-${this.width / 2} -${this.width / 2} ${this.width} ${this.width / 2}`);\n        break;\n    }\n  };\n\n  updateChart = () => {\n    let group = this.svg.select('.gauge-group');\n\n    group\n      .select('.gauge-value')\n      .transition()\n      .duration(750)\n      .call(this.arcTween, this.calculateMinMax());\n\n    this.labelTween = this.chart.select('.gauge-number');\n\n    this.labelTween\n      .transition()\n      .duration(750)\n      .call(this.textTween, this.data.value);\n  };\n\n  arcTween = (transition, value) => {\n    let newAngle = this.calculateCurve(value);\n\n    transition.attrTween('d', d => {\n      let interpolate = d3_interpolate(d.endAngle, newAngle[0].endAngle);\n\n      return t => {\n        d.endAngle = interpolate(t);\n\n        return this.arc({\n          innerRadius: this.radius - this.gaugeWidth,\n          outerRadius: this.radius,\n          startAngle: d.startAngle,\n          endAngle: d.endAngle\n        });\n      };\n    });\n  };\n\n  textTween = (transition, value) => {\n    value = d3_format('.2f')(value); // TODO: check these .1f formats here, should they be inputs?\n    value = value.replace(/,/g, '.');\n\n    transition.tween('text', () => {\n      let interpolate = d3_interpolate(d3_format('.2f')(+this.oldValue), value);\n\n      return t => {\n        this.labelTween.text(d => {\n          let updatedNumber = this.labelFormat(interpolate(t));\n          this.label = updatedNumber;\n          return updatedNumber;\n        });\n      };\n    });\n  };\n}\n","import { Component, OnInit, Input, ElementRef, HostBinding, ChangeDetectionStrategy } from '@angular/core';\n\nimport {\n  select as d3_select,\n  line as d3_line,\n  scaleLinear as d3_scaleLinear,\n  min as d3_min,\n  max as d3_max,\n  area as d3_area\n} from 'd3';\n\nimport { PbdsDatavizSparkline } from './dataviz.interfaces';\n\n@Component({\n  selector: 'pbds-dataviz-sparkline',\n  template: ``,\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PbdsDatavizSparklineComponent implements OnInit {\n  @HostBinding('class.pbds-chart')\n  chartClass = true;\n\n  @HostBinding('class.pbds-chart-sparkline')\n  sparklineClass = true;\n\n  @Input()\n  data: PbdsDatavizSparkline;\n\n  @Input()\n  width = 160;\n\n  @Input()\n  height = 40;\n\n  @Input()\n  type: 'line' | 'line-high' | 'area' | 'area-high' | 'bar' = 'line';\n\n  @Input()\n  color = '#cf0989';\n\n  @Input()\n  colorNegative: string | null = null; // undocumented, may add if needed\n\n  @Input()\n  strokeWidth = 2; // undocumented, width is automatically set by the type\n\n  @Input()\n  yAxisMinBuffer = 0;\n\n  @Input()\n  yAxisMaxBuffer = 0;\n\n  private chart;\n  private svg;\n  private margin;\n\n  constructor(private _element: ElementRef) {}\n\n  ngOnInit() {\n    this.margin = { top: 1, right: 0, bottom: 1, left: 0 };\n\n    if (this.type === 'bar') {\n      this.margin = { top: 0, right: 0, bottom: 0, left: 0 };\n    }\n\n    if (this.type === 'line-high' || this.type === 'area-high') {\n      this.strokeWidth = 1;\n    }\n\n    if (this.colorNegative === null) {\n      this.colorNegative = this.color;\n    }\n\n    let x = d3_scaleLinear().range([0, this.width - this.margin.left - this.margin.right]);\n    let y = d3_scaleLinear().range([this.height - this.margin.top - this.margin.bottom, 0]);\n\n    y.domain([+d3_min(this.data) - this.yAxisMinBuffer, +d3_max(this.data) + this.yAxisMaxBuffer]);\n    x.domain([0, this.data.length]);\n\n    let line = d3_line()\n      .x((d, i) => x(i))\n      .y((d: any) => y(d));\n\n    let area = d3_area()\n      .x((d, i) => x(i))\n      .y0(this.height)\n      .y1((d: any) => y(d));\n\n    this.chart = d3_select(this._element.nativeElement).attr('aria-hidden', 'true');\n\n    this.svg = this.chart\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('class', 'img-fluid')\n      .attr('preserveAspectRatio', 'xMinYMin meet')\n      .attr('viewBox', `-${this.margin.left} -${this.margin.top} ${this.width} ${this.height}`);\n\n    if (this.type === 'line' || this.type === 'line-high' || this.type === 'area' || this.type === 'area-high') {\n      this.svg\n        .append('path')\n        .datum(this.data)\n        .attr('class', 'sparkline')\n        .attr('fill', 'none')\n        .attr('stroke-width', this.strokeWidth)\n        .attr('stroke', this.color)\n        .attr('d', line);\n    }\n\n    if (this.type === 'area' || this.type === 'area-high') {\n      this.svg\n        .append('path')\n        .datum(this.data)\n        .attr('class', 'sparkarea')\n        .attr('fill', this.color)\n        .attr('fill-opacity', 0.3)\n        .attr('d', area);\n    }\n\n    if (this.type === 'bar') {\n      const barWidth = (this.width - this.data.length) / this.data.length;\n\n      // handles negative values, see example https://www.essycode.com/posts/create-sparkline-charts-d3/\n      this.svg\n        .selectAll('.bar')\n        .data(this.data)\n        .enter()\n        .append('rect')\n        .attr('class', 'sparkbar')\n        .attr('x', (d, i) => x(i))\n        .attr('y', d => (d > 0 ? y(d) : y(0)))\n        .attr('width', barWidth)\n        .attr('height', d => Math.abs(y(d) - y(0)))\n        .attr('fill', d => (d > 0 ? this.color : this.colorNegative)); // still uses undocumented negative color values\n    }\n  }\n}\n","import {\n  Component,\n  OnInit,\n  OnChanges,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  HostBinding,\n  OnDestroy,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { ViewportScroller } from '@angular/common';\n\nimport {\n  select as d3_select,\n  isoParse as d3_isoParse,\n  timeFormat as d3_timeFormat,\n  format as d3_format,\n  scaleOrdinal as d3_scaleOrdinal,\n  scaleBand as d3_scaleBand,\n  scaleLinear as d3_scaleLinear,\n  max as d3_max,\n  axisBottom as d3_axisBottom,\n  axisLeft as d3_axisLeft,\n  event as d3_event,\n  stack as d3_stack,\n  stackOrderNone as d3_stackOrderNone\n} from 'd3';\n\nimport { PbdsDatavizService } from './dataviz.service';\nimport { PbdsDatavizStackedBar } from './dataviz.interfaces';\n\n@Component({\n  selector: 'pbds-dataviz-stacked-bar',\n  template: ``,\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PbdsDatavizStackedBarComponent implements OnInit, OnDestroy, OnChanges {\n  @HostBinding('class.pbds-chart')\n  chartClass = true;\n\n  @HostBinding('class.pbds-chart-stacked-bar')\n  stackedBarClass = true;\n\n  @Input()\n  data: Array<PbdsDatavizStackedBar>;\n\n  @Input()\n  width = 306;\n\n  @Input()\n  height = 400;\n\n  @Input()\n  type: 'low' | 'medium' | 'high' | 'debug' = 'medium'; // debug to show all chart options\n\n  @Input()\n  marginTop = 10; // hardcoded on purpose, do not document until feedback\n\n  @Input()\n  marginRight = 0; // hardcoded on purpose, do not document until feedback\n\n  @Input()\n  marginBottom = 30; // hardcoded on purpose, do not document until feedback\n\n  @Input()\n  marginLeft = 55; // hardcoded on purpose, do not document until feedback\n\n  @Input()\n  hideXAxis = false;\n\n  @Input()\n  xAxisFormatType: 'number' | 'time' = null;\n\n  @Input()\n  xAxisFormatString = '';\n\n  @Input()\n  yAxisFormatType: 'number' | 'time' = null;\n\n  @Input()\n  yAxisFormatString = '';\n\n  @Input()\n  yAxisTicks = 5;\n\n  @Input()\n  yAxisMaxBuffer = 0.01;\n\n  @Input()\n  hideLegend = false;\n\n  @Input()\n  legendWidth = 105 + 28; // hardcoded legend width + left margin, do not document until feedback\n\n  @Input()\n  legendPosition: 'right' | 'bottom' = 'right';\n\n  @Input()\n  legendLabelFormatType: 'number' | 'time' = null;\n\n  @Input()\n  legendLabelFormatString = '';\n\n  @Input()\n  tooltipHeadingFormatType: 'time' = null;\n\n  @Input()\n  tooltipHeadingFormatString = '';\n\n  @Input()\n  tooltipHeadingValueFormatType: 'number' = null;\n\n  @Input()\n  tooltipHeadingValueFormatString = '';\n\n  @Input()\n  tooltipLabelFormatType: 'time' = null;\n\n  @Input()\n  tooltipLabelFormatString = '';\n\n  @Input()\n  tooltipValueFormatType: 'number' = null;\n\n  @Input()\n  tooltipValueFormatString = '';\n\n  @Output()\n  hovered: EventEmitter<object> = new EventEmitter<object>();\n\n  @Output()\n  clicked: EventEmitter<object> = new EventEmitter<object>();\n\n  private dataStack;\n  private dataKeys;\n  private chart;\n  private svg;\n  private grayBars;\n  private mouseBars;\n  private bars;\n  private margin;\n  private colorRange;\n  private hideGrayBars: boolean;\n  private xAxisScale;\n  private xAxisCall;\n  private xAxis;\n  private xAxisFormat;\n  private xAxisTickSize: number;\n  private xAxisTickSizeOuter: number;\n  private hideXAxisDomain: boolean;\n  private hideXAxisZero: boolean;\n  private hideXAxisTicks: boolean;\n  private hideXGrid: boolean;\n  private hideYGrid: boolean;\n  private yAxisMax;\n  private yAxisScale;\n  private yAxisCall;\n  private yAxis;\n  private yAxisFormat;\n  private yAxisTickSize: number;\n  private yAxisTickSizeOuter: number;\n  private xGrid;\n  private xGridCall;\n  private yGrid;\n  private yGridCall;\n  private hideYAxis: boolean;\n  private hideYAxisZero: boolean;\n  private hideYAxisDomain: boolean;\n  private hideYAxisTicks: boolean;\n  private legendLabelFormat;\n  private tooltip;\n  private hideTooltip: boolean;\n  private tooltipHeadingFormat;\n  private tooltipHeadingValueFormat;\n  private tooltipValueFormat;\n  private tooltipLabelFormat;\n\n  constructor(private _dataviz: PbdsDatavizService, private _element: ElementRef, private _scroll: ViewportScroller) {}\n\n  ngOnInit() {\n    // extract keys for stack data\n    this.dataKeys = Object.keys(this.data[0]).filter(item => item !== 'key');\n\n    // create the D3 stack data\n    this.dataStack = d3_stack()\n      .keys(this.dataKeys)\n      .order(d3_stackOrderNone)(this.data);\n\n    //////////////////////////////////////////\n\n    this.margin = {\n      top: +this.marginTop,\n      right: +this.marginRight,\n      bottom: +this.marginBottom,\n      left: +this.marginLeft\n    };\n\n    switch (this.xAxisFormatType) {\n      case 'number':\n        this.xAxisFormat = d3_format(this.xAxisFormatString);\n        break;\n      case 'time':\n        this.xAxisFormat = d3_timeFormat(this.xAxisFormatString);\n        break;\n    }\n\n    switch (this.yAxisFormatType) {\n      case 'number':\n        this.yAxisFormat = d3_format(this.yAxisFormatString);\n        break;\n      case 'time':\n        this.yAxisFormat = d3_timeFormat(this.yAxisFormatString);\n        break;\n    }\n\n    switch (this.legendLabelFormatType) {\n      case 'number':\n        this.legendLabelFormat = d3_format(this.legendLabelFormatString);\n        break;\n      case 'time':\n        this.legendLabelFormat = d3_timeFormat(this.legendLabelFormatString);\n        break;\n      default:\n        this.legendLabelFormat = null;\n        break;\n    }\n\n    switch (this.tooltipHeadingFormatType) {\n      case 'time':\n        this.tooltipHeadingFormat = d3_timeFormat(this.tooltipHeadingFormatString);\n        break;\n      default:\n        this.tooltipHeadingFormat = null;\n        break;\n    }\n\n    switch (this.tooltipHeadingValueFormatType) {\n      case 'number':\n        this.tooltipHeadingValueFormat = d3_format(this.tooltipHeadingValueFormatString);\n        break;\n      default:\n        this.tooltipHeadingValueFormat = null;\n        break;\n    }\n\n    switch (this.tooltipLabelFormatType) {\n      case 'time':\n        this.tooltipLabelFormat = d3_timeFormat(this.tooltipLabelFormatString);\n        break;\n      default:\n        this.tooltipLabelFormat = null;\n        break;\n    }\n\n    switch (this.tooltipValueFormatType) {\n      case 'number':\n        this.tooltipValueFormat = d3_format(this.tooltipValueFormatString);\n        break;\n      default:\n        this.tooltipValueFormat = null;\n    }\n\n    // defaults for all chart types\n    this.hideGrayBars = false;\n    this.hideYAxis = false;\n    this.hideXAxisZero = false;\n    this.hideYAxisZero = false;\n    this.hideXGrid = false;\n    this.hideYGrid = false;\n    this.hideXAxisDomain = false;\n    this.hideYAxisDomain = false;\n    this.hideTooltip = false;\n    this.hideXAxisTicks = false;\n    this.hideYAxisTicks = false;\n    this.xAxisTickSize = 8;\n    this.xAxisTickSizeOuter = 0;\n    this.yAxisTickSize = 8;\n    this.yAxisTickSizeOuter = 0;\n    // this.hideTooltipLabel = false;\n\n    if (this.type !== 'debug') {\n      // set type defaults\n      switch (this.type) {\n        case 'low':\n          this.hideGrayBars = true;\n          this.hideXAxisTicks = true;\n          this.hideXGrid = true;\n          this.hideYAxisDomain = false;\n          this.hideYAxisTicks = true;\n          this.legendPosition = 'bottom';\n          break;\n\n        case 'medium':\n          this.hideXAxisDomain = true;\n          this.hideXGrid = true;\n          this.hideXAxisTicks = true;\n          this.hideYAxisDomain = true;\n          this.hideYAxisTicks = true;\n          this.hideYGrid = true;\n          break;\n\n        case 'high':\n          this.hideXAxis = true;\n          this.hideXAxisTicks = true;\n          this.hideXAxisDomain = true;\n          this.hideXGrid = true;\n          this.hideYAxisDomain = true;\n          this.hideYAxisTicks = true;\n          this.hideYGrid = true;\n          this.hideLegend = false;\n          this.legendPosition = 'bottom';\n          break;\n      }\n    }\n\n    // adjust margin if xAxis hidden\n    if (this.hideXAxis) this.margin.bottom = 10; // need small margin for yAxis with 0 tick label\n\n    if (!this.hideLegend && this.legendPosition === 'right') {\n      this.width = +this.width - +this.legendWidth;\n    }\n\n    // create the chart\n    this.chart = d3_select(this._element.nativeElement).attr('aria-hidden', 'true');\n\n    // create chart svg\n    this.svg = this.chart\n      .append('svg')\n      .attr('width', +this.width)\n      .attr('height', +this.height + this.margin.top + this.margin.bottom)\n      .attr('class', 'img-fluid')\n      .attr('preserveAspectRatio', 'xMinYMin meet')\n      .attr(\n        'viewBox',\n        `-${this.margin.left} -${this.margin.top} ${+this.width} ${+this.height + this.margin.top + this.margin.bottom}`\n      );\n\n    this.grayBars = this.svg.append('g').attr('class', 'gray-bars');\n    this.mouseBars = this.svg.append('g').attr('class', 'mouseover-bars');\n    this.bars = this.svg.append('g').attr('class', 'bars');\n\n    // build color ranges\n    this.colorRange = d3_scaleOrdinal().range(this._dataviz.getColors(false));\n\n    // X AXIS\n    this.xAxisScale = d3_scaleBand()\n      .domain(this.data.map(d => d.key))\n      .rangeRound([0, this.width - this.margin.left])\n      .align(0);\n\n    // add padding to the scale for gray bars\n    !this.hideGrayBars\n      ? this.xAxisScale.paddingInner(0.1).paddingOuter(0)\n      : this.xAxisScale.paddingInner(0).paddingOuter(0);\n\n    this.xAxisCall = d3_axisBottom(this.xAxisScale)\n      .tickSize(this.xAxisTickSize)\n      .tickSizeOuter(this.xAxisTickSizeOuter)\n      .tickFormat(this.xAxisFormatter);\n\n    this.xAxis = this.svg\n      .append('g')\n      .attr('class', 'axis axis-x')\n      .attr('transform', `translate(0, ${this.height})`)\n      .classed('axis-hidden', this.hideXAxis)\n      .classed('axis-zero-hidden', this.hideXAxisZero)\n      .classed('axis-domain-hidden', this.hideXAxisDomain)\n      .classed('axis-ticks-hidden', this.hideXAxisTicks)\n      .call(this.xAxisCall);\n\n    // X GRIDLINES\n    if (!this.hideXGrid) {\n      this.xGridCall = d3_axisBottom(this.xAxisScale).tickSize(-this.height);\n\n      this.xGrid = this.svg\n        .append('g')\n        .attr('class', 'grid grid-x')\n        .classed('grid-zero-hidden', this.hideXAxisZero)\n        .attr('transform', `translate(0, ${this.height})`)\n        .call(this.xGridCall);\n    }\n\n    // KEEP: use this block to debug yAxisMax\n    // console.log(\n    //   d3_max(this.dataStack, (data: any) => {\n    //     // console.log(data);\n\n    //     return d3_max(data, (d: any) => {\n    //       // console.log('D: ', d);\n    //       return d[1];\n    //     });\n    //   })\n    // );\n\n    // Y AXIS\n    this.yAxisMax = d3_max(this.dataStack, (data: any) => {\n      return d3_max(data, (d: any) => {\n        return d[1];\n      });\n    });\n\n    this.yAxisMax = this.yAxisMax + this.yAxisMax * this.yAxisMaxBuffer;\n\n    this.yAxisScale = d3_scaleLinear()\n      .domain([0, this.yAxisMax])\n      .nice()\n      .rangeRound([this.height, 0]);\n\n    this.yAxisCall = d3_axisLeft(this.yAxisScale)\n      .ticks(this.yAxisTicks)\n      .tickSize(this.yAxisTickSize)\n      .tickSizeOuter(this.yAxisTickSizeOuter)\n      .tickFormat(this.yAxisFormatter);\n\n    this.yAxis = this.svg\n      .append('g')\n      .attr('class', 'axis axis-y')\n      .classed('axis-hidden', this.hideYAxis)\n      .classed('axis-zero-hidden', this.hideYAxisZero)\n      .classed('axis-domain-hidden', this.hideYAxisDomain)\n      .classed('axis-ticks-hidden', this.hideYAxisTicks)\n      .call(this.yAxisCall);\n\n    // Y GRIDLINES\n    if (!this.hideYGrid) {\n      this.yGridCall = d3_axisLeft(this.yAxisScale)\n        .ticks(this.yAxisTicks)\n        .tickSize(-this.width + this.margin.left + this.margin.right);\n\n      this.yGrid = this.svg\n        .append('g')\n        .attr('class', 'grid grid-y')\n        .classed('grid-zero-hidden', this.hideYAxisZero)\n        .attr('transform', `translate(0, 0)`)\n        .call(this.yGridCall);\n    }\n\n    // TOOLTIP\n    if (!this.hideTooltip) {\n      this.tooltip = d3_select('body')\n        .append('div')\n        .attr('class', 'pbds-tooltip west')\n        .style('opacity', 0)\n        .attr('aria-hidden', 'true'); // hide tooltip for accessibility\n\n      // tooltip header\n      this.tooltip.append('div').attr('class', 'tooltip-header');\n      this.tooltip.append('div').attr('class', 'tooltip-header-value');\n\n      // tooltip table\n      const tooltipTable = this.tooltip\n        .append('table')\n        .attr('class', 'tooltip-table text-left w-100')\n        .append('tbody');\n    }\n\n    // add legend classes\n    if (!this.hideLegend) {\n      this.chart.classed('pbds-chart-legend-bottom', this.legendPosition === 'bottom' ? true : false);\n      this.chart.append('ul').attr('class', `legend legend-${this.legendPosition}`);\n    }\n\n    this.updateChart();\n  }\n\n  ngOnDestroy() {\n    if (this.tooltip) this.tooltip.remove();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.data && !changes.data.firstChange) {\n      this.updateChart();\n    }\n  }\n\n  updateChart = () => {\n    this.dataKeys = Object.keys(this.data[0]).filter(item => item !== 'key');\n\n    // create the D3 stack data\n    this.dataStack = d3_stack()\n      .keys(this.dataKeys)\n      .order(d3_stackOrderNone)(this.data);\n\n    // update the xScale\n    this.xAxisScale.domain(this.data.map(d => d.key));\n\n    // update the yScale\n    this.yAxisMax = d3_max(this.dataStack, (data: any) => {\n      return d3_max(data, (d: any) => {\n        return d[1];\n      });\n    });\n\n    this.yAxisMax = this.yAxisMax + this.yAxisMax * this.yAxisMaxBuffer;\n\n    this.yAxisScale\n      .domain([0, this.yAxisMax])\n      .rangeRound([this.height, 0])\n      .nice();\n\n    this.xAxis\n      .transition()\n      .duration(1000)\n      .call(this.xAxisCall);\n\n    this.yAxis\n      .transition()\n      .duration(1000)\n      .call(this.yAxisCall);\n\n    // update the grids\n    if (!this.hideXGrid) {\n      this.xGrid\n        .transition()\n        .duration(1000)\n        .call(this.xGridCall);\n    }\n\n    if (!this.hideYGrid) {\n      this.yGrid\n        .transition()\n        .duration(1000)\n        .call(this.yGridCall);\n    }\n\n    // add gray bars\n    if (!this.hideGrayBars) {\n      this.grayBars\n        .selectAll('.gray-bar')\n        .data(this.data)\n        .join(\n          enter =>\n            enter\n              .append('rect')\n              .attr('class', 'gray-bar')\n              .attr('x', d => this.xAxisScale(d.key))\n              .attr('width', this.xAxisScale.bandwidth())\n              .attr('height', this.height),\n          update =>\n            update\n              .transition()\n              .duration(1000)\n              .attr('x', d => this.xAxisScale(d.key))\n              .attr('width', this.xAxisScale.bandwidth())\n              .attr('height', this.height),\n          exit => exit.remove()\n        );\n    }\n\n    // add colored bars\n    const barGroups = this.bars\n      .selectAll('.bar-group')\n      .data(this.dataStack)\n      .join(\n        enter =>\n          enter\n            .append('g')\n            .attr('class', 'bar-group')\n            .attr('fill', d => this.colorRange(d.index)),\n        update => update.attr('fill', d => this.colorRange(d.index)),\n        exit => exit.remove()\n      );\n\n    barGroups\n      .selectAll('.bar')\n      .data(d => d)\n      .join(\n        enter =>\n          enter\n            .append('rect')\n            .attr('class', 'bar')\n            .classed('bar-divided', this.type !== 'high')\n            .classed('bar-divided-low', this.type === 'low')\n            .attr('x', (d, i) => {\n              let x;\n\n              if (this.type === 'medium') {\n                x = this.xAxisScale(d.data.key) + (this.xAxisScale.bandwidth() / 8) * 3;\n              } else {\n                x = this.xAxisScale(d.data.key) + (this.xAxisScale.bandwidth() / 4) * 1;\n              }\n\n              return x;\n            })\n            .attr('y', d => this.yAxisScale(d[1]))\n            .attr('width', 0)\n            .attr('height', 0)\n            .call(enter => {\n              let width;\n\n              if (this.type === 'medium') {\n                width = this.xAxisScale.bandwidth() / 4;\n              } else {\n                width = this.xAxisScale.bandwidth() / 2;\n              }\n\n              enter\n                .transition()\n                .duration(1000)\n                .attr('width', width)\n                .attr('height', d => this.yAxisScale(d[0]) - this.yAxisScale(d[1]));\n\n              return enter;\n            }),\n        update =>\n          update.call(update => {\n            let width;\n\n            if (this.type === 'medium') {\n              width = this.xAxisScale.bandwidth() / 4;\n            } else {\n              width = this.xAxisScale.bandwidth() / 2;\n            }\n\n            update\n              .transition()\n              .duration(1000)\n              .attr('width', this.xAxisScale.bandwidth() / 4)\n              .attr('x', (d, i) => this.xAxisScale(d.data.key) + (this.xAxisScale.bandwidth() / 8) * 3)\n              .attr('y', d => this.yAxisScale(d[1]))\n              .attr('height', d => this.yAxisScale(d[0]) - this.yAxisScale(d[1]));\n\n            return update;\n          }),\n\n        exit => exit.remove()\n      );\n\n    // mouseover bars\n    this.mouseBars\n      .selectAll('.mouseover-bar')\n      .data(this.data)\n      .join(\n        enter =>\n          enter\n            .append('rect')\n            .attr('class', 'mouseover-bar')\n            .style('opacity', 0)\n            .attr('x', d => this.xAxisScale(d.key))\n            .attr('width', this.xAxisScale.bandwidth())\n            .attr('height', this.height),\n        update =>\n          update\n            .attr('x', d => this.xAxisScale(d.key))\n            .attr('width', this.xAxisScale.bandwidth())\n            .attr('height', this.height),\n        exit => exit.remove()\n      )\n      .on('mouseover focus', (data, index, nodes) => this.barMouseOverFocus(d3_event, data, index, nodes))\n      .on('mouseout blur', (data, index, nodes) => this.barMouseOutBlur())\n      .on('click', (data, index, nodes) => this.barMouseClick(d3_event, data, index, nodes));\n\n    this.bars.raise();\n    this.mouseBars.raise();\n\n    if (!this.hideLegend) {\n      // TODO: refactor to use .join() with enter, update, exit\n      let legendItem = this.chart\n        .select('.legend')\n        .selectAll('.legend-item')\n        .data(this.dataStack);\n\n      legendItem.exit().remove();\n\n      // update existing items\n      legendItem.select('.legend-label').html(d => {\n        // return this.legendLabelFormat === null ? d.label : this.legendLabelFormat(d.label);\n        switch (this.legendLabelFormatType) {\n          case 'number':\n            return this.legendLabelFormat(d.key);\n\n          case 'time':\n            const parsedTime = d3_isoParse(d.key);\n            return this.legendLabelFormat(parsedTime);\n\n          default:\n            return d.key;\n        }\n      });\n\n      // legend items on enter\n      let enterLegendItem = legendItem\n        .enter()\n        .append('li')\n        .attr('class', 'legend-item');\n\n      enterLegendItem\n        .append('span')\n        .attr('class', 'legend-key')\n        .style('background-color', d => this.colorRange(d.index));\n\n      enterLegendItem\n        .append('span')\n        .attr('class', 'legend-label')\n        .html(d => {\n          // return this.legendLabelFormat === null ? d.label : this.legendLabelFormat(d.label);\n          switch (this.legendLabelFormatType) {\n            case 'number':\n              return this.legendLabelFormat(d.key);\n\n            case 'time':\n              const parsedTime = d3_isoParse(d.key);\n              return this.legendLabelFormat(parsedTime);\n\n            default:\n              return d.key;\n          }\n        });\n\n      enterLegendItem\n        .on('mouseover', (data, index, nodes) => this.legendMouseOver(d3_event, data, index, nodes))\n        .on('mouseout', () => this.legendMouseOut())\n        .on('click', (data, index, nodes) => this.legendMouseClick(d3_event, data, index, nodes));\n    }\n  };\n\n  barMouseOverFocus = (event, data, index, nodes) => {\n    this.chart\n      .selectAll('.bar-group')\n      .selectAll('.bar')\n      .filter((d, i) => i !== index)\n      .classed('inactive', true);\n\n    this.tooltipShow(data, index, nodes[index]);\n\n    this.hovered.emit({ event, data });\n  };\n\n  barMouseOutBlur = () => {\n    this.chart.selectAll('.bar').classed('inactive', false);\n\n    this.tooltipHide();\n  };\n\n  barMouseClick = (event, data, index, nodes) => {\n    this.clicked.emit({ event, data });\n  };\n\n  legendMouseOver = (event, data, index, nodes) => {\n    this.chart\n      .selectAll('.legend-item')\n      .filter((d, i) => i !== index)\n      .classed('inactive', true);\n\n    this.chart\n      .selectAll('.bar-group')\n      .filter((d, i) => i !== index)\n      .classed('inactive', true);\n\n    this.hovered.emit({ event, data });\n  };\n\n  legendMouseOut = () => {\n    this.chart.selectAll('.legend-item').classed('inactive', false);\n\n    this.chart.selectAll('.bar-group').classed('inactive', false);\n\n    this.tooltipHide();\n  };\n\n  legendMouseClick = (event, data, index, nodes) => {\n    this.clicked.emit({ event, data });\n  };\n\n  private xAxisFormatter = item => {\n    switch (this.xAxisFormatType) {\n      case 'number':\n        return this.xAxisFormat(item);\n\n      case 'time':\n        const parseDate = d3_isoParse(item);\n        return this.xAxisFormat(parseDate);\n\n      default:\n        return item;\n    }\n  };\n\n  private tooltipShow = (data, index, node) => {\n    // console.log('TOOLTIP: ', data, index, node);\n\n    const scroll = this._scroll.getScrollPosition();\n    const mouserectDimensions = node.getBoundingClientRect();\n    const clientWidth = document.body.clientWidth - 10;\n    let dimensionCalculated;\n    let tooltipDimensions;\n    let tooltipOffsetHeight;\n    let yPosition;\n    let xPosition;\n\n    // console.log(scroll, mouserectDimensions, tooltipOffsetHeight, tooltipDimensions, dimensionCalculated, clientWidth);\n\n    this.tooltip.select('.tooltip-header').html(d => {\n      switch (this.tooltipHeadingFormatType) {\n        case 'time':\n          const parseDate = d3_isoParse(data.key);\n          return this.tooltipHeadingFormat(parseDate);\n\n        default:\n          return data.key;\n      }\n    });\n\n    this.tooltip.select('.tooltip-header-value').html(d => {\n      let total = 0;\n\n      Object.keys(data).map(e => {\n        if (e !== 'key') {\n          total = total + data[e];\n        }\n      });\n\n      return this.tooltipHeadingValueFormat(total);\n    });\n\n    this.tooltip\n      .select('.tooltip-table')\n      .select('tbody')\n      .html(d => {\n        let html = ``;\n        let label;\n        let value;\n\n        Object.keys(data).map((key, index) => {\n          switch (this.tooltipLabelFormatType) {\n            case 'time':\n              const parseDate = d3_isoParse(key);\n              label = this.tooltipHeadingFormat(parseDate);\n              break;\n\n            default:\n              label = key;\n          }\n\n          switch (this.tooltipValueFormatType) {\n            case 'number':\n              value = this.tooltipValueFormat(data[key]);\n              break;\n\n            default:\n              value = data[key];\n          }\n\n          if (key !== 'key') {\n            html += `\n              <tr class='tooltip-item'>\n                <td style=\"color: ${this.colorRange(index - 1)}\">\n                  <span class=\"pbds-tooltip-key\"></span>\n                </td>\n                <td class=\"tooltip-label pr-2 text-nowrap\">${label}</td>\n                <td class=\"tooltip-value text-right text-nowrap\">${value}</td>\n              </tr>\n            `;\n          }\n        });\n\n        return html;\n      });\n\n    tooltipDimensions = this.tooltip.node().getBoundingClientRect();\n    dimensionCalculated = mouserectDimensions.left + mouserectDimensions.width + tooltipDimensions.width + 8;\n    tooltipOffsetHeight = +this.tooltip.node().offsetHeight;\n\n    // flip the tooltip positions if near the right edge of the screen\n    if (dimensionCalculated > clientWidth) {\n      this.tooltip.classed('east', true);\n      this.tooltip.classed('west', false);\n\n      if (this.type === 'medium') {\n        xPosition = `${mouserectDimensions.left + (mouserectDimensions.width / 8) * 3 - tooltipDimensions.width - 8}px`;\n      } else {\n        xPosition = `${mouserectDimensions.left + (mouserectDimensions.width / 4) * 1 - tooltipDimensions.width - 8}px`;\n      }\n    } else if (dimensionCalculated < clientWidth) {\n      this.tooltip.classed('east', false);\n      this.tooltip.classed('west', true);\n\n      if (this.type === 'medium') {\n        xPosition = `${mouserectDimensions.left + (mouserectDimensions.width / 8) * 5 + 8}px`;\n      } else {\n        xPosition = `${mouserectDimensions.left + (mouserectDimensions.width / 4) * 3 + 8}px`;\n      }\n    }\n\n    yPosition = this.svg\n      .selectAll('.bar-group')\n      .filter(':last-child')\n      .selectAll('.bar')\n      .filter((d, i) => i === index)\n      .node()\n      .getBoundingClientRect();\n\n    // set the tooltip styles\n    this.tooltip.style('top', `${yPosition.top - tooltipOffsetHeight / 2 + scroll[1]}px`);\n    this.tooltip.style('left', xPosition);\n    this.tooltip.style('opacity', 1);\n  };\n\n  private tooltipHide = () => {\n    this.tooltip.style('opacity', 0);\n  };\n\n  private yAxisFormatter = item => {\n    switch (this.yAxisFormatType) {\n      case 'number':\n        return this.yAxisFormat(item);\n\n      case 'time':\n        const parseDate = d3_isoParse(item);\n        return this.yAxisFormat(parseDate);\n\n      default:\n        return item;\n    }\n  };\n}\n","import { Component, OnInit, Input, HostBinding } from '@angular/core';\n\n@Component({\n  selector: 'pbds-dataviz-metric-indicator',\n  template: `\n    <span>{{ value }}</span>\n  `,\n  styles: []\n})\nexport class PbdsDatavizMetricIndicatorComponent implements OnInit {\n  @Input()\n  value = 0;\n\n  @Input()\n  class = '';\n\n  @Input()\n  indicator: 'flat' | 'increase' | 'decrease' = 'flat';\n\n  @Input()\n  inverse = false;\n\n  @HostBinding('class')\n  get hostClasses() {\n    return ['metric-block-indicator', this.indicator, this.inverse ? 'inverse' : '', this.class].join(' ');\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit, Input, HostBinding, ElementRef, ContentChild } from '@angular/core';\n\nimport { PbdsDatavizMetricIndicatorComponent } from './dataviz-metric-indicator.component';\n\n@Component({\n  selector: 'pbds-dataviz-metric-block',\n  template: `\n    <ng-content select=\"pbds-dataviz-sparkline\"></ng-content>\n\n    <div class=\"metric-block-data\">\n      <div *ngIf=\"heading\" class=\"metric-block-heading\">{{ heading }}</div>\n\n      <div class=\"metric-block-value\" [ngClass]=\"{ 'mr-0': hideValueMargin }\">\n        {{ value\n        }}<span [ngClass]=\"{ 'metric-block-unit': isUnit, 'metric-block-percentage': isPercentUnit }\">{{ unit }}</span>\n      </div>\n\n      <ng-content select=\"pbds-dataviz-metric-indicator\"></ng-content>\n\n      <div *ngIf=\"description\" class=\"metric-block-description\">{{ description }}</div>\n    </div>\n  `,\n  styles: []\n})\nexport class PbdsDatavizMetricBlockComponent implements OnInit {\n  @Input()\n  class = '';\n\n  @Input()\n  heading: string = null;\n\n  @Input()\n  value = 0;\n\n  @Input()\n  unit: string = null;\n\n  @Input()\n  description: string = null;\n\n  @Input()\n  centered = false;\n\n  hideValueMargin = false;\n  isPercentUnit = false;\n  isUnit = false;\n\n  @HostBinding('class')\n  get hostClasses() {\n    return ['metric-block', this.centered ? 'metric-block-centered' : '', this.class].join(' ');\n  }\n\n  @ContentChild(PbdsDatavizMetricIndicatorComponent) indicatorRef: ElementRef;\n\n  constructor() {}\n\n  ngOnInit() {\n    if (!this.indicatorRef) {\n      this.hideValueMargin = true;\n    }\n\n    if (this.unit !== '%' && this.unit !== null) {\n      this.isUnit = true;\n    } else if (this.unit === '%') {\n      this.isPercentUnit = true;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PbdsDatavizPieComponent } from './dataviz-pie.component';\nimport { PbdsDatavizBarComponent } from './dataviz-bar.component';\nimport { PbdsDatavizLineComponent } from './dataviz-line.component';\nimport { PbdsDatavizGaugeComponent } from './dataviz-gauge.component';\nimport { PbdsDatavizSparklineComponent } from './dataviz-sparkline.component';\nimport { PbdsDatavizStackedBarComponent } from './dataviz-stacked-bar.component';\nimport { PbdsDatavizMetricBlockComponent } from './dataviz-metric-block.component';\nimport { PbdsDatavizMetricIndicatorComponent } from './dataviz-metric-indicator.component';\n\n@NgModule({\n  declarations: [\n    PbdsDatavizPieComponent,\n    PbdsDatavizBarComponent,\n    PbdsDatavizLineComponent,\n    PbdsDatavizGaugeComponent,\n    PbdsDatavizSparklineComponent,\n    PbdsDatavizStackedBarComponent,\n    PbdsDatavizMetricBlockComponent,\n    PbdsDatavizMetricIndicatorComponent\n  ],\n  imports: [CommonModule],\n  exports: [\n    PbdsDatavizPieComponent,\n    PbdsDatavizBarComponent,\n    PbdsDatavizLineComponent,\n    PbdsDatavizGaugeComponent,\n    PbdsDatavizSparklineComponent,\n    PbdsDatavizStackedBarComponent,\n    PbdsDatavizMetricBlockComponent,\n    PbdsDatavizMetricIndicatorComponent\n  ]\n})\nexport class PbdsDatavizModule {}\n","import { Directive, HostListener, HostBinding } from '@angular/core';\nimport { ViewportScroller } from '@angular/common';\n\n@Directive({\n  selector: 'header.bg-brand-header'\n})\nexport class PbdsHeaderShadowDirective {\n  @HostBinding('class.pbds-header-shadow')\n  shadow: boolean;\n\n  @HostListener('window:scroll', []) onWindowScroll() {\n    const offset = this._scroll.getScrollPosition();\n    this.shadow = offset[1] > 20;\n  }\n\n  constructor(private _scroll: ViewportScroller) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PbdsHeaderShadowDirective } from './header-shadow.directive';\n\n@NgModule({\n  declarations: [PbdsHeaderShadowDirective],\n  imports: [CommonModule],\n  exports: [PbdsHeaderShadowDirective]\n})\nexport class PbdsHeaderShadowModule {}\n"]}