{"version":3,"sources":["../../../projects/pb-design-system/column-toggle/column-toggle.component.ts","../../../projects/pb-design-system/column-toggle/column-toggle.module.ts"],"names":["COUNT","PbdsColumnToggleComponent","this","label","showAllLabel","storagekey","minimum","toggle","EventEmitter","isShowAll","prototype","ngOnInit","_this","columnStorage","localStorage","getItem","JSON","parse","columns","map","column","savedColumn","find","obj","field","selected","setLocalStorage","setShowAllChecked","updateTotalSelected","index","toggleColumn","$event","target","checked","totalSelected","emit","showAll","showAllColumns","visible","setItem","stringify","filter","value","length","columnsSelected","columnsVisible","Component","args","selector","template","Input","Output","NgModule","declarations","imports","CommonModule","NgbDropdownModule","FormsModule","exports"],"mappings":"wmBAGA,IAAIA,EAAQ,eAEZ,SAAAC,IAeSC,KAAAC,MAAQ,UAGRD,KAAAE,aAAe,WAMfF,KAAAG,YAA6B,EAG7BH,KAAAI,QAAU,EAGVJ,KAAAK,OAAyC,IAAIC,EAAAA,aAE7CN,KAAAO,WAAY,SAKZR,EAAAS,UAAAC,SAAA,WAAA,IAAAC,EAAAV,KACDA,KAAKG,aACPH,KAAKW,cAAgBC,aAAaC,QAAQb,KAAKG,YAE3CH,KAAKW,gBACPX,KAAKW,cAAgBG,KAAKC,MAAMf,KAAKW,eAErCX,KAAKgB,QAAQC,KAAI,SAACC,GAChB,IAAMC,EAAcT,EAAKC,cAAcS,MAAK,SAACC,GAAa,OAAAA,EAAIC,QAAUJ,EAAOI,SAC/EJ,EAAOb,OAAOkB,UAAWJ,GAAcA,EAAYd,OAAOkB,aAI9DvB,KAAKwB,mBAGPxB,KAAKyB,oBAELzB,KAAK0B,sBAEL1B,KAAK2B,MAAQ7B,KAGRC,EAAAS,UAAAoB,aAAA,SAAaC,EAAQX,GAC1B,IAAMY,EAASD,EAAOC,OAMtB,GALAZ,EAAOb,OAAOkB,SAAWO,EAAOC,QAEhC/B,KAAK0B,sBAGD1B,KAAKgC,cAAgBhC,KAAKI,QAI5B,OAHA0B,EAAOC,SAAU,EACjBb,EAAOb,OAAOkB,UAAW,OACzBvB,KAAK0B,sBAIP1B,KAAKwB,kBAELxB,KAAKK,OAAO4B,KAAK,CACfC,SAAS,EACThB,OAAQA,EACRF,QAAShB,KAAKgB,UAGhBhB,KAAK0B,sBACL1B,KAAKyB,qBAGA1B,EAAAS,UAAA2B,eAAA,SAAeN,GACpB,IACME,EADSF,EAAOC,OACCC,QAEvB/B,KAAKO,UAAYwB,EAEbA,GACF/B,KAAKgB,QAAQC,KAAI,SAACC,GACZA,EAAOb,OAAO+B,UAChBlB,EAAOb,OAAOkB,UAAW,MAK/BvB,KAAKwB,kBAELxB,KAAKK,OAAO4B,KAAK,CACfC,SAAS,EACThB,OAAQ,KACRF,QAAShB,KAAKgB,UAGhBhB,KAAK0B,uBAGC3B,EAAAS,UAAAgB,gBAAA,WACFxB,KAAKG,YACPS,aAAayB,QAAQrC,KAAKG,WAAYW,KAAKwB,UAAUtC,KAAKgB,WAItDjB,EAAAS,UAAAkB,oBAAA,WACN1B,KAAKgC,cAAgBhC,KAAKgB,QAAQuB,QAAO,SAACC,GAAU,OAAAA,EAAMnC,OAAOkB,UAAYiB,EAAMnC,OAAO+B,WAASK,QAGrG1C,EAAAS,UAAAiB,kBAAA,WACE,IAAMiB,EAAkB1C,KAAKgB,QAAQuB,QAAO,SAACC,GAAU,OAAAA,EAAMnC,OAAOkB,UAAYiB,EAAMnC,OAAO+B,WAASK,OAChGE,EAAiB3C,KAAKgB,QAAQuB,QAAO,SAACC,GAAU,OAAAA,EAAMnC,OAAO+B,WAASK,OAE5EzC,KAAKO,UAAYmC,IAAoBC,4BA7HxCC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,qBACVC,SAAA,ixCAEE,oKAUDC,EAAAA,4BAGAA,EAAAA,uBAGAA,EAAAA,0BAGAA,EAAAA,uBAGAA,EAAAA,sBAGAC,EAAAA,gBCtBH,iCALCC,EAAAA,SAAQL,KAAA,CAAC,CACRM,aAAc,CAACpD,GACfqD,QAAS,CAACC,EAAAA,aAAcC,EAAAA,kBAAmBC,EAAAA,aAC3CC,QAAS,CAACzD","sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { PbdsColumnToggle } from './column-toggle.interfaces';\n\nlet COUNT = 0;\n\n@Component({\n  selector: 'pbds-column-toggle',\n  templateUrl: './column-toggle.component.html',\n  styles: [\n    `\n      input[type='checkbox'] {\n        width: 1rem;\n        height: 1rem;\n        vertical-align: middle;\n      }\n    `\n  ]\n})\nexport class PbdsColumnToggleComponent {\n  @Input()\n  public label = 'Columns';\n\n  @Input()\n  public showAllLabel = 'Show All';\n\n  @Input()\n  public columns: any[];\n\n  @Input()\n  public storagekey: string | false = false;\n\n  @Input()\n  public minimum = 1;\n\n  @Output()\n  public toggle: EventEmitter<PbdsColumnToggle> = new EventEmitter();\n\n  public isShowAll = false;\n  public columnStorage: any;\n  public index: number;\n  private totalSelected: number;\n\n  public ngOnInit() {\n    if (this.storagekey) {\n      this.columnStorage = localStorage.getItem(this.storagekey);\n\n      if (this.columnStorage) {\n        this.columnStorage = JSON.parse(this.columnStorage);\n\n        this.columns.map((column) => {\n          const savedColumn = this.columnStorage.find((obj: any) => obj.field === column.field);\n          column.toggle.selected = savedColumn ? savedColumn.toggle.selected : true;\n        });\n      }\n\n      this.setLocalStorage();\n    }\n\n    this.setShowAllChecked();\n\n    this.updateTotalSelected();\n\n    this.index = COUNT++;\n  }\n\n  public toggleColumn($event, column) {\n    const target = $event.target as HTMLInputElement;\n    column.toggle.selected = target.checked;\n\n    this.updateTotalSelected();\n\n    // prevent unchecking all columns\n    if (this.totalSelected < this.minimum) {\n      target.checked = true;\n      column.toggle.selected = true;\n      this.updateTotalSelected();\n      return;\n    }\n\n    this.setLocalStorage();\n\n    this.toggle.emit({\n      showAll: false,\n      column: column,\n      columns: this.columns\n    });\n\n    this.updateTotalSelected();\n    this.setShowAllChecked();\n  }\n\n  public showAllColumns($event: Event) {\n    const target = $event.target as HTMLInputElement;\n    const checked = target.checked;\n\n    this.isShowAll = checked;\n\n    if (checked) {\n      this.columns.map((column) => {\n        if (column.toggle.visible) {\n          column.toggle.selected = true;\n        }\n      });\n    }\n\n    this.setLocalStorage();\n\n    this.toggle.emit({\n      showAll: true,\n      column: null,\n      columns: this.columns\n    });\n\n    this.updateTotalSelected();\n  }\n\n  private setLocalStorage() {\n    if (this.storagekey) {\n      localStorage.setItem(this.storagekey, JSON.stringify(this.columns));\n    }\n  }\n\n  private updateTotalSelected() {\n    this.totalSelected = this.columns.filter((value) => value.toggle.selected && value.toggle.visible).length;\n  }\n\n  setShowAllChecked() {\n    const columnsSelected = this.columns.filter((value) => value.toggle.selected && value.toggle.visible).length;\n    const columnsVisible = this.columns.filter((value) => value.toggle.visible).length;\n\n    this.isShowAll = columnsSelected === columnsVisible;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { PbdsColumnToggleComponent } from './column-toggle.component';\n\n@NgModule({\n  declarations: [PbdsColumnToggleComponent],\n  imports: [CommonModule, NgbDropdownModule, FormsModule],\n  exports: [PbdsColumnToggleComponent]\n})\nexport class PbdsColumnToggleModule {}\n"]}