{"version":3,"file":"pb-design-system-column-toggle.umd.js","sources":["../../../projects/pb-design-system/column-toggle/column-toggle.component.ts","../../../projects/pb-design-system/column-toggle/column-toggle.module.ts","../../../projects/pb-design-system/column-toggle/pb-design-system-column-toggle.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NgbDropdown } from '@ng-bootstrap/ng-bootstrap';\nimport { PbdsColumnToggle } from './column-toggle.interfaces';\n\n@Component({\n  selector: 'pbds-column-toggle',\n  templateUrl: './column-toggle.component.html',\n  styleUrls: []\n})\nexport class PbdsColumnToggleComponent {\n  @Input()\n  public label = 'Columns';\n\n  @Input()\n  public showAllLabel = 'Show All';\n\n  @Input()\n  public columns: any[];\n\n  @Input()\n  public storagekey: string | false = false;\n\n  @Input()\n  public minimum = 1;\n\n  @Output()\n  public toggle: EventEmitter<PbdsColumnToggle> = new EventEmitter();\n\n  public columnStorage: any;\n  private totalSelected: number;\n\n  public ngOnInit() {\n    if (this.storagekey) {\n      this.columnStorage = localStorage.getItem(this.storagekey);\n\n      if (this.columnStorage) {\n        this.columnStorage = JSON.parse(this.columnStorage);\n\n        this.columns.map((column) => {\n          const savedColumn = this.columnStorage.find((obj: any) => obj.field === column.field);\n          column.toggle.selected = savedColumn ? savedColumn.toggle.selected : true;\n        });\n      }\n\n      this.setLocalStorage();\n    }\n\n    this.updateTotalSelected();\n  }\n\n  public toggleColumn(column: any) {\n    // prevent unchecking all columns\n    if (this.totalSelected === this.minimum && column.toggle.selected) {\n      return;\n    }\n\n    column.toggle.selected = !column.toggle.selected;\n\n    if (this.storagekey) {\n      this.setLocalStorage();\n    }\n\n    this.toggle.emit({\n      showAll: false,\n      column,\n      columns: this.columns\n    });\n\n    this.updateTotalSelected();\n  }\n\n  public showAllColumns(columnToggleDropdown: NgbDropdown) {\n    this.columns.map((column) => {\n      if (column.toggle.visible) {\n        column.toggle.selected = true;\n      }\n    });\n\n    if (this.storagekey) {\n      this.setLocalStorage();\n    }\n\n    this.toggle.emit({\n      showAll: true,\n      column: null,\n      columns: this.columns\n    });\n\n    this.updateTotalSelected();\n    columnToggleDropdown.close();\n  }\n\n  public showSelectedIcon(column: any) {\n    return column.toggle.selected ? '' : 'invisible';\n  }\n\n  private setLocalStorage() {\n    if (this.storagekey) {\n      localStorage.setItem(this.storagekey, JSON.stringify(this.columns));\n    }\n  }\n\n  private updateTotalSelected() {\n    this.totalSelected = this.columns.filter((value) => value.toggle.selected && value.toggle.visible).length;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { PbdsColumnToggleComponent } from './column-toggle.component';\n\n@NgModule({\n  declarations: [PbdsColumnToggleComponent],\n  imports: [CommonModule, NgbDropdownModule],\n  exports: [PbdsColumnToggleComponent]\n})\nexport class PbdsColumnToggleModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["EventEmitter","Component","Input","Output","NgModule","CommonModule","NgbDropdownModule"],"mappings":"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"}