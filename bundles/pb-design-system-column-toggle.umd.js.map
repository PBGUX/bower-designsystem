{"version":3,"file":"pb-design-system-column-toggle.umd.js","sources":["../../../projects/pb-design-system/column-toggle/column-toggle.component.ts","../../../projects/pb-design-system/column-toggle/column-toggle.module.ts","../../../projects/pb-design-system/column-toggle/pb-design-system-column-toggle.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { PbdsColumnToggle } from './column-toggle.interfaces';\n\nlet COUNT = 0;\n\n@Component({\n  selector: 'pbds-column-toggle',\n  templateUrl: './column-toggle.component.html',\n  styles: [\n    `\n      input[type='checkbox'] {\n        width: 1rem;\n        height: 1rem;\n        vertical-align: middle;\n      }\n    `\n  ]\n})\nexport class PbdsColumnToggleComponent {\n  @Input()\n  public label = 'Columns';\n\n  @Input()\n  public showAllLabel = 'Show All';\n\n  @Input()\n  public columns: any[];\n\n  @Input()\n  public storagekey: string | false = false;\n\n  @Input()\n  public minimum = 1;\n\n  @Output()\n  public toggle: EventEmitter<PbdsColumnToggle> = new EventEmitter();\n\n  public isShowAll = false;\n  public columnStorage: any;\n  public index: number;\n  private totalSelected: number;\n\n  public ngOnInit() {\n    if (this.storagekey) {\n      this.columnStorage = localStorage.getItem(this.storagekey);\n\n      if (this.columnStorage) {\n        this.columnStorage = JSON.parse(this.columnStorage);\n\n        this.columns.map((column) => {\n          const savedColumn = this.columnStorage.find((obj: any) => obj.field === column.field);\n          column.toggle.selected = savedColumn ? savedColumn.toggle.selected : true;\n        });\n      }\n\n      this.setLocalStorage();\n    }\n\n    this.setShowAllChecked();\n\n    this.updateTotalSelected();\n\n    this.index = COUNT++;\n  }\n\n  public toggleColumn($event, column) {\n    const target = $event.target as HTMLInputElement;\n    column.toggle.selected = target.checked;\n\n    this.updateTotalSelected();\n\n    // prevent unchecking all columns\n    if (this.totalSelected < this.minimum) {\n      target.checked = true;\n      column.toggle.selected = true;\n      this.updateTotalSelected();\n      return;\n    }\n\n    this.setLocalStorage();\n\n    this.toggle.emit({\n      showAll: false,\n      column: column,\n      columns: this.columns\n    });\n\n    this.updateTotalSelected();\n    this.setShowAllChecked();\n  }\n\n  public showAllColumns($event: Event) {\n    const target = $event.target as HTMLInputElement;\n    const checked = target.checked;\n\n    this.isShowAll = checked;\n\n    if (checked) {\n      this.columns.map((column) => {\n        if (column.toggle.visible) {\n          column.toggle.selected = true;\n        }\n      });\n    }\n\n    this.setLocalStorage();\n\n    this.toggle.emit({\n      showAll: true,\n      column: null,\n      columns: this.columns\n    });\n\n    this.updateTotalSelected();\n  }\n\n  private setLocalStorage() {\n    if (this.storagekey) {\n      localStorage.setItem(this.storagekey, JSON.stringify(this.columns));\n    }\n  }\n\n  private updateTotalSelected() {\n    this.totalSelected = this.columns.filter((value) => value.toggle.selected && value.toggle.visible).length;\n  }\n\n  setShowAllChecked() {\n    const columnsSelected = this.columns.filter((value) => value.toggle.selected && value.toggle.visible).length;\n    const columnsVisible = this.columns.filter((value) => value.toggle.visible).length;\n\n    this.isShowAll = columnsSelected === columnsVisible;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { PbdsColumnToggleComponent } from './column-toggle.component';\n\n@NgModule({\n  declarations: [PbdsColumnToggleComponent],\n  imports: [CommonModule, NgbDropdownModule, FormsModule],\n  exports: [PbdsColumnToggleComponent]\n})\nexport class PbdsColumnToggleModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["EventEmitter","Component","Input","Output","NgModule","CommonModule","NgbDropdownModule","FormsModule"],"mappings":"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"}