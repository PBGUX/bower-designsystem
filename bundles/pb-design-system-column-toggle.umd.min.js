!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("@angular/forms"),require("@ng-bootstrap/ng-bootstrap")):"function"==typeof define&&define.amd?define("pb-design-system/column-toggle",["exports","@angular/core","@angular/common","@angular/forms","@ng-bootstrap/ng-bootstrap"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self)["pb-design-system"]=e["pb-design-system"]||{},e["pb-design-system"]["column-toggle"]={}),e.ng.core,e.ng.common,e.ng.forms,e["^7"][0]["0 || ^8"][0][0])}(this,(function(e,t,o,n,l){"use strict";var i=0,s=function(){function e(){this.label="Columns",this.showAllLabel="Show All",this.storagekey=!1,this.minimum=1,this.toggle=new t.EventEmitter,this.isShowAll=!1}return e.prototype.ngOnInit=function(){var e=this;this.storagekey&&(this.columnStorage=localStorage.getItem(this.storagekey),this.columnStorage&&(this.columnStorage=JSON.parse(this.columnStorage),this.columns.map((function(t){var o=e.columnStorage.find((function(e){return e.field===t.field}));t.toggle.selected=!o||o.toggle.selected}))),this.setLocalStorage()),this.setShowAllChecked(),this.updateTotalSelected(),this.index=i++},e.prototype.toggleColumn=function(e,t){var o=e.target;if(t.toggle.selected=o.checked,this.updateTotalSelected(),this.totalSelected<this.minimum)return o.checked=!0,t.toggle.selected=!0,void this.updateTotalSelected();this.setLocalStorage(),this.toggle.emit({showAll:!1,column:t,columns:this.columns}),this.updateTotalSelected(),this.setShowAllChecked()},e.prototype.showAllColumns=function(e){var t=e.target.checked;this.isShowAll=t,t&&this.columns.map((function(e){e.toggle.visible&&(e.toggle.selected=!0)})),this.setLocalStorage(),this.toggle.emit({showAll:!0,column:null,columns:this.columns}),this.updateTotalSelected()},e.prototype.setLocalStorage=function(){this.storagekey&&localStorage.setItem(this.storagekey,JSON.stringify(this.columns))},e.prototype.updateTotalSelected=function(){this.totalSelected=this.columns.filter((function(e){return e.toggle.selected&&e.toggle.visible})).length},e.prototype.setShowAllChecked=function(){var e=this.columns.filter((function(e){return e.toggle.selected&&e.toggle.visible})).length,t=this.columns.filter((function(e){return e.toggle.visible})).length;this.isShowAll=e===t},e}();s.decorators=[{type:t.Component,args:[{selector:"pbds-column-toggle",template:'<div ngbDropdown #columnToggleDropdown="ngbDropdown" [autoClose]="\'outside\'" class="d-inline-block">\n  <button class="btn btn-secondary" id="toggle-column" ngbDropdownToggle>\n    <i class="pbi-icon-mini pbi-column-toggle" aria-hidden="true"></i>\n    {{ label }}\n  </button>\n\n  <div ngbDropdownMenu aria-labelledby="toggle-column">\n    <label class="mb-0 dropdown-item" for="pbds-show-all-{{ index }}">\n      <input\n        id="pbds-show-all-{{ index }}"\n        type="checkbox"\n        [checked]="isShowAll"\n        (change)="showAllColumns($event)"\n        [attr.disabled]="isShowAll ? \'\' : null"\n      />\n      {{ showAllLabel }}\n    </label>\n\n    <div class="dropdown-divider"></div>\n\n    <ng-container *ngFor="let column of columns">\n      <ng-container *ngIf="column.toggle.visible">\n        <label class="mb-0 dropdown-item" for="{{ column.field }}-{{ index }}">\n          <input\n            id="{{ column.field }}-{{ index }}"\n            name="{{ column.field }}-{{ index }}"\n            type="checkbox"\n            [checked]="column.toggle.selected"\n            (change)="toggleColumn($event, column)"\n          />\n          {{ column.header }}</label\n        >\n      </ng-container>\n    </ng-container>\n  </div>\n</div>\n',styles:["\n      input[type='checkbox'] {\n        width: 1rem;\n        height: 1rem;\n        vertical-align: middle;\n      }\n    "]}]}],s.propDecorators={label:[{type:t.Input}],showAllLabel:[{type:t.Input}],columns:[{type:t.Input}],storagekey:[{type:t.Input}],minimum:[{type:t.Input}],toggle:[{type:t.Output}]};var c=function(){};c.decorators=[{type:t.NgModule,args:[{declarations:[s],imports:[o.CommonModule,l.NgbDropdownModule,n.FormsModule],exports:[s]}]}],e.PbdsColumnToggleComponent=s,e.PbdsColumnToggleModule=c,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=pb-design-system-column-toggle.umd.min.js.map