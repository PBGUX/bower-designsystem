{"version":3,"file":"pb-design-system-column-toggle.js","sources":["../../../projects/pb-design-system/column-toggle/column-toggle.component.ts","../../../projects/pb-design-system/column-toggle/column-toggle.module.ts","../../../projects/pb-design-system/column-toggle/pb-design-system-column-toggle.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NgbDropdown } from '@ng-bootstrap/ng-bootstrap';\nimport { PbdsColumnToggle } from './column-toggle.interfaces';\n\n@Component({\n  selector: 'pbds-column-toggle',\n  templateUrl: './column-toggle.component.html',\n  styleUrls: []\n})\nexport class PbdsColumnToggleComponent {\n  @Input()\n  public columns: any[];\n\n  @Input()\n  public storagekey: string | false = false;\n\n  @Input()\n  public minimum: number = 1;\n\n  @Output()\n  public toggle: EventEmitter<PbdsColumnToggle> = new EventEmitter();\n\n  public columnStorage: any;\n  private totalSelected: number;\n\n  public ngOnInit() {\n    if (this.storagekey) {\n      this.columnStorage = localStorage.getItem(this.storagekey);\n\n      if (this.columnStorage) {\n        this.columnStorage = JSON.parse(this.columnStorage);\n\n        this.columns.map((column) => {\n          const savedColumn = this.columnStorage.find((obj: any) => obj.field === column.field);\n          column.toggle.selected = savedColumn ? savedColumn.toggle.selected : true;\n        });\n      }\n\n      this.setLocalStorage();\n    }\n\n    this.updateTotalSelected();\n  }\n\n  public toggleColumn(column: any) {\n    // prevent unchecking all columns\n    if (this.totalSelected === this.minimum && column.toggle.selected) {\n      return;\n    }\n\n    column.toggle.selected = !column.toggle.selected;\n\n    if (this.storagekey) {\n      this.setLocalStorage();\n    }\n\n    this.toggle.emit({\n      showAll: false,\n      column,\n      columns: this.columns\n    });\n\n    this.updateTotalSelected();\n  }\n\n  public showAllColumns(columnToggleDropdown: NgbDropdown) {\n    this.columns.map((column) => {\n      if (column.toggle.visible) {\n        column.toggle.selected = true;\n      }\n    });\n\n    if (this.storagekey) {\n      this.setLocalStorage();\n    }\n\n    this.toggle.emit({\n      showAll: true,\n      column: null,\n      columns: this.columns\n    });\n\n    this.updateTotalSelected();\n    columnToggleDropdown.close();\n  }\n\n  public showSelectedIcon(column: any) {\n    return column.toggle.selected ? '' : 'invisible';\n  }\n\n  private setLocalStorage() {\n    if (this.storagekey) {\n      localStorage.setItem(this.storagekey, JSON.stringify(this.columns));\n    }\n  }\n\n  private updateTotalSelected() {\n    this.totalSelected = this.columns.filter((value) => value.toggle.selected && value.toggle.visible).length;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { PbdsColumnToggleComponent } from './column-toggle.component';\n\n@NgModule({\n  declarations: [PbdsColumnToggleComponent],\n  imports: [CommonModule, NgbDropdownModule],\n  exports: [PbdsColumnToggleComponent]\n})\nexport class PbdsColumnToggleModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}